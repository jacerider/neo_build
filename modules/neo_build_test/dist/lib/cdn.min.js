(() => {
  var li = Object.create, Je = Object.defineProperty, ci = Object.getOwnPropertyDescriptor, ui = Object.getOwnPropertyNames, di = Object.getPrototypeOf, pi = Object.prototype.hasOwnProperty, gr = ((e) => typeof require < "u" ? require : typeof Proxy < "u" ? new Proxy(e, { get: (t, r) => (typeof require < "u" ? require : t)[r] }) : e)(function(e) {
    if (typeof require < "u")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + e + '" is not supported');
  }), Le = (e, t) => () => (e && (t = e(e = 0)), t), D = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), Xe = (e, t) => {
    for (var r in t)
      Je(e, r, { get: t[r], enumerable: !0 });
  }, vr = (e, t, r, n) => {
    if (t && typeof t == "object" || typeof t == "function")
      for (let i of ui(t))
        !pi.call(e, i) && i !== r && Je(e, i, { get: () => t[i], enumerable: !(n = ci(t, i)) || n.enumerable });
    return e;
  }, te = (e, t, r) => (r = e != null ? li(di(e)) : {}, vr(t || !e || !e.__esModule ? Je(r, "default", { value: e, enumerable: !0 }) : r, e)), De = (e) => vr(Je({}, "__esModule", { value: !0 }), e), yr = {};
  Xe(yr, { default: () => br });
  var br, wr = Le(() => {
    br = { yellow: (e) => e };
  }), xr = D(() => {
  }), St = D((e, t) => {
    var r = (wr(), De(yr)), n = xr(), i = class extends Error {
      constructor(o, a, u, s, l, p) {
        super(o), this.name = "CssSyntaxError", this.reason = o, l && (this.file = l), s && (this.source = s), p && (this.plugin = p), typeof a < "u" && typeof u < "u" && (typeof a == "number" ? (this.line = a, this.column = u) : (this.line = a.line, this.column = a.column, this.endLine = u.line, this.endColumn = u.column)), this.setMessage(), Error.captureStackTrace && Error.captureStackTrace(this, i);
      }
      setMessage() {
        this.message = this.plugin ? this.plugin + ": " : "", this.message += this.file ? this.file : "<css input>", typeof this.line < "u" && (this.message += ":" + this.line + ":" + this.column), this.message += ": " + this.reason;
      }
      showSourceCode(o) {
        if (!this.source)
          return "";
        let a = this.source;
        o == null && (o = r.isColorSupported), n && o && (a = n(a));
        let u = a.split(/\r?\n/), s = Math.max(this.line - 3, 0), l = Math.min(this.line + 2, u.length), p = String(l).length, c, h;
        if (o) {
          let { bold: m, red: f, gray: d } = r.createColors(!0);
          c = (g) => m(f(g)), h = (g) => d(g);
        } else
          c = h = (m) => m;
        return u.slice(s, l).map((m, f) => {
          let d = s + 1 + f, g = " " + (" " + d).slice(-p) + " | ";
          if (d === this.line) {
            let b = h(g.replace(/\d/g, " ")) + m.slice(0, this.column - 1).replace(/[^\t]/g, " ");
            return c(">") + h(g) + m + `
 ` + b + c("^");
          }
          return " " + h(g) + m;
        }).join(`
`);
      }
      toString() {
        let o = this.showSourceCode();
        return o && (o = `

` + o + `
`), this.name + ": " + this.message + o;
      }
    };
    t.exports = i, i.default = i;
  }), Ot = D((e, t) => {
    t.exports.isClean = Symbol("isClean"), t.exports.my = Symbol("my");
  }), kr = D((e, t) => {
    var r = { colon: ": ", indent: "    ", beforeDecl: `
`, beforeRule: `
`, beforeOpen: " ", beforeClose: `
`, beforeComment: `
`, after: `
`, emptyBody: "", commentLeft: " ", commentRight: " ", semicolon: !1 };
    function n(o) {
      return o[0].toUpperCase() + o.slice(1);
    }
    var i = class {
      constructor(o) {
        this.builder = o;
      }
      stringify(o, a) {
        if (!this[o.type])
          throw new Error("Unknown AST node type " + o.type + ". Maybe you need to change PostCSS stringifier.");
        this[o.type](o, a);
      }
      document(o) {
        this.body(o);
      }
      root(o) {
        this.body(o), o.raws.after && this.builder(o.raws.after);
      }
      comment(o) {
        let a = this.raw(o, "left", "commentLeft"), u = this.raw(o, "right", "commentRight");
        this.builder("/*" + a + o.text + u + "*/", o);
      }
      decl(o, a) {
        let u = this.raw(o, "between", "colon"), s = o.prop + u + this.rawValue(o, "value");
        o.important && (s += o.raws.important || " !important"), a && (s += ";"), this.builder(s, o);
      }
      rule(o) {
        this.block(o, this.rawValue(o, "selector")), o.raws.ownSemicolon && this.builder(o.raws.ownSemicolon, o, "end");
      }
      atrule(o, a) {
        let u = "@" + o.name, s = o.params ? this.rawValue(o, "params") : "";
        if (typeof o.raws.afterName < "u" ? u += o.raws.afterName : s && (u += " "), o.nodes)
          this.block(o, u + s);
        else {
          let l = (o.raws.between || "") + (a ? ";" : "");
          this.builder(u + s + l, o);
        }
      }
      body(o) {
        let a = o.nodes.length - 1;
        for (; a > 0 && o.nodes[a].type === "comment"; )
          a -= 1;
        let u = this.raw(o, "semicolon");
        for (let s = 0; s < o.nodes.length; s++) {
          let l = o.nodes[s], p = this.raw(l, "before");
          p && this.builder(p), this.stringify(l, a !== s || u);
        }
      }
      block(o, a) {
        let u = this.raw(o, "between", "beforeOpen");
        this.builder(a + u + "{", o, "start");
        let s;
        o.nodes && o.nodes.length ? (this.body(o), s = this.raw(o, "after")) : s = this.raw(o, "after", "emptyBody"), s && this.builder(s), this.builder("}", o, "end");
      }
      raw(o, a, u) {
        let s;
        if (u || (u = a), a && (s = o.raws[a], typeof s < "u"))
          return s;
        let l = o.parent;
        if (u === "before" && (!l || l.type === "root" && l.first === o || l && l.type === "document"))
          return "";
        if (!l)
          return r[u];
        let p = o.root();
        if (p.rawCache || (p.rawCache = {}), typeof p.rawCache[u] < "u")
          return p.rawCache[u];
        if (u === "before" || u === "after")
          return this.beforeAfter(o, u);
        {
          let c = "raw" + n(u);
          this[c] ? s = this[c](p, o) : p.walk((h) => {
            if (s = h.raws[a], typeof s < "u")
              return !1;
          });
        }
        return typeof s > "u" && (s = r[u]), p.rawCache[u] = s, s;
      }
      rawSemicolon(o) {
        let a;
        return o.walk((u) => {
          if (u.nodes && u.nodes.length && u.last.type === "decl" && (a = u.raws.semicolon, typeof a < "u"))
            return !1;
        }), a;
      }
      rawEmptyBody(o) {
        let a;
        return o.walk((u) => {
          if (u.nodes && u.nodes.length === 0 && (a = u.raws.after, typeof a < "u"))
            return !1;
        }), a;
      }
      rawIndent(o) {
        if (o.raws.indent)
          return o.raws.indent;
        let a;
        return o.walk((u) => {
          let s = u.parent;
          if (s && s !== o && s.parent && s.parent === o && typeof u.raws.before < "u") {
            let l = u.raws.before.split(`
`);
            return a = l[l.length - 1], a = a.replace(/\S/g, ""), !1;
          }
        }), a;
      }
      rawBeforeComment(o, a) {
        let u;
        return o.walkComments((s) => {
          if (typeof s.raws.before < "u")
            return u = s.raws.before, u.includes(`
`) && (u = u.replace(/[^\n]+$/, "")), !1;
        }), typeof u > "u" ? u = this.raw(a, null, "beforeDecl") : u && (u = u.replace(/\S/g, "")), u;
      }
      rawBeforeDecl(o, a) {
        let u;
        return o.walkDecls((s) => {
          if (typeof s.raws.before < "u")
            return u = s.raws.before, u.includes(`
`) && (u = u.replace(/[^\n]+$/, "")), !1;
        }), typeof u > "u" ? u = this.raw(a, null, "beforeRule") : u && (u = u.replace(/\S/g, "")), u;
      }
      rawBeforeRule(o) {
        let a;
        return o.walk((u) => {
          if (u.nodes && (u.parent !== o || o.first !== u) && typeof u.raws.before < "u")
            return a = u.raws.before, a.includes(`
`) && (a = a.replace(/[^\n]+$/, "")), !1;
        }), a && (a = a.replace(/\S/g, "")), a;
      }
      rawBeforeClose(o) {
        let a;
        return o.walk((u) => {
          if (u.nodes && u.nodes.length > 0 && typeof u.raws.after < "u")
            return a = u.raws.after, a.includes(`
`) && (a = a.replace(/[^\n]+$/, "")), !1;
        }), a && (a = a.replace(/\S/g, "")), a;
      }
      rawBeforeOpen(o) {
        let a;
        return o.walk((u) => {
          if (u.type !== "decl" && (a = u.raws.between, typeof a < "u"))
            return !1;
        }), a;
      }
      rawColon(o) {
        let a;
        return o.walkDecls((u) => {
          if (typeof u.raws.between < "u")
            return a = u.raws.between.replace(/[^\s:]/g, ""), !1;
        }), a;
      }
      beforeAfter(o, a) {
        let u;
        o.type === "decl" ? u = this.raw(o, null, "beforeDecl") : o.type === "comment" ? u = this.raw(o, null, "beforeComment") : a === "before" ? u = this.raw(o, null, "beforeRule") : u = this.raw(o, null, "beforeClose");
        let s = o.parent, l = 0;
        for (; s && s.type !== "root"; )
          l += 1, s = s.parent;
        if (u.includes(`
`)) {
          let p = this.raw(o, null, "indent");
          if (p.length)
            for (let c = 0; c < l; c++)
              u += p;
        }
        return u;
      }
      rawValue(o, a) {
        let u = o[a], s = o.raws[a];
        return s && s.value === u ? s.raw : u;
      }
    };
    t.exports = i, i.default = i;
  }), Ze = D((e, t) => {
    var r = kr();
    function n(i, o) {
      new r(o).stringify(i);
    }
    t.exports = n, n.default = n;
  }), Ke = D((e, t) => {
    var { isClean: r, my: n } = Ot(), i = St(), o = kr(), a = Ze();
    function u(l, p) {
      let c = new l.constructor();
      for (let h in l) {
        if (!Object.prototype.hasOwnProperty.call(l, h) || h === "proxyCache")
          continue;
        let m = l[h], f = typeof m;
        h === "parent" && f === "object" ? p && (c[h] = p) : h === "source" ? c[h] = m : Array.isArray(m) ? c[h] = m.map((d) => u(d, c)) : (f === "object" && m !== null && (m = u(m)), c[h] = m);
      }
      return c;
    }
    var s = class {
      constructor(l = {}) {
        this.raws = {}, this[r] = !1, this[n] = !0;
        for (let p in l)
          if (p === "nodes") {
            this.nodes = [];
            for (let c of l[p])
              typeof c.clone == "function" ? this.append(c.clone()) : this.append(c);
          } else
            this[p] = l[p];
      }
      error(l, p = {}) {
        if (this.source) {
          let { start: c, end: h } = this.rangeBy(p);
          return this.source.input.error(l, { line: c.line, column: c.column }, { line: h.line, column: h.column }, p);
        }
        return new i(l);
      }
      warn(l, p, c) {
        let h = { node: this };
        for (let m in c)
          h[m] = c[m];
        return l.warn(p, h);
      }
      remove() {
        return this.parent && this.parent.removeChild(this), this.parent = void 0, this;
      }
      toString(l = a) {
        l.stringify && (l = l.stringify);
        let p = "";
        return l(this, (c) => {
          p += c;
        }), p;
      }
      assign(l = {}) {
        for (let p in l)
          this[p] = l[p];
        return this;
      }
      clone(l = {}) {
        let p = u(this);
        for (let c in l)
          p[c] = l[c];
        return p;
      }
      cloneBefore(l = {}) {
        let p = this.clone(l);
        return this.parent.insertBefore(this, p), p;
      }
      cloneAfter(l = {}) {
        let p = this.clone(l);
        return this.parent.insertAfter(this, p), p;
      }
      replaceWith(...l) {
        if (this.parent) {
          let p = this, c = !1;
          for (let h of l)
            h === this ? c = !0 : c ? (this.parent.insertAfter(p, h), p = h) : this.parent.insertBefore(p, h);
          c || this.remove();
        }
        return this;
      }
      next() {
        if (!this.parent)
          return;
        let l = this.parent.index(this);
        return this.parent.nodes[l + 1];
      }
      prev() {
        if (!this.parent)
          return;
        let l = this.parent.index(this);
        return this.parent.nodes[l - 1];
      }
      before(l) {
        return this.parent.insertBefore(this, l), this;
      }
      after(l) {
        return this.parent.insertAfter(this, l), this;
      }
      root() {
        let l = this;
        for (; l.parent && l.parent.type !== "document"; )
          l = l.parent;
        return l;
      }
      raw(l, p) {
        return new o().raw(this, l, p);
      }
      cleanRaws(l) {
        delete this.raws.before, delete this.raws.after, l || delete this.raws.between;
      }
      toJSON(l, p) {
        let c = {}, h = p == null;
        p = p || /* @__PURE__ */ new Map();
        let m = 0;
        for (let f in this) {
          if (!Object.prototype.hasOwnProperty.call(this, f) || f === "parent" || f === "proxyCache")
            continue;
          let d = this[f];
          if (Array.isArray(d))
            c[f] = d.map((g) => typeof g == "object" && g.toJSON ? g.toJSON(null, p) : g);
          else if (typeof d == "object" && d.toJSON)
            c[f] = d.toJSON(null, p);
          else if (f === "source") {
            let g = p.get(d.input);
            g == null && (g = m, p.set(d.input, m), m++), c[f] = { inputId: g, start: d.start, end: d.end };
          } else
            c[f] = d;
        }
        return h && (c.inputs = [...p.keys()].map((f) => f.toJSON())), c;
      }
      positionInside(l) {
        let p = this.toString(), c = this.source.start.column, h = this.source.start.line;
        for (let m = 0; m < l; m++)
          p[m] === `
` ? (c = 1, h += 1) : c += 1;
        return { line: h, column: c };
      }
      positionBy(l) {
        let p = this.source.start;
        if (l.index)
          p = this.positionInside(l.index);
        else if (l.word) {
          let c = this.toString().indexOf(l.word);
          c !== -1 && (p = this.positionInside(c));
        }
        return p;
      }
      rangeBy(l) {
        let p = { line: this.source.start.line, column: this.source.start.column }, c = this.source.end ? { line: this.source.end.line, column: this.source.end.column + 1 } : { line: p.line, column: p.column + 1 };
        if (l.word) {
          let h = this.toString().indexOf(l.word);
          h !== -1 && (p = this.positionInside(h), c = this.positionInside(h + l.word.length));
        } else
          l.start ? p = { line: l.start.line, column: l.start.column } : l.index && (p = this.positionInside(l.index)), l.end ? c = { line: l.end.line, column: l.end.column } : l.endIndex ? c = this.positionInside(l.endIndex) : l.index && (c = this.positionInside(l.index + 1));
        return (c.line < p.line || c.line === p.line && c.column <= p.column) && (c = { line: p.line, column: p.column + 1 }), { start: p, end: c };
      }
      getProxyProcessor() {
        return { set(l, p, c) {
          return l[p] === c || (l[p] = c, (p === "prop" || p === "value" || p === "name" || p === "params" || p === "important" || p === "text") && l.markDirty()), !0;
        }, get(l, p) {
          return p === "proxyOf" ? l : p === "root" ? () => l.root().toProxy() : l[p];
        } };
      }
      toProxy() {
        return this.proxyCache || (this.proxyCache = new Proxy(this, this.getProxyProcessor())), this.proxyCache;
      }
      addToError(l) {
        if (l.postcssNode = this, l.stack && this.source && /\n\s{4}at /.test(l.stack)) {
          let p = this.source;
          l.stack = l.stack.replace(/\n\s{4}at /, `$&${p.input.from}:${p.start.line}:${p.start.column}$&`);
        }
        return l;
      }
      markDirty() {
        if (this[r]) {
          this[r] = !1;
          let l = this;
          for (; l = l.parent; )
            l[r] = !1;
        }
      }
      get proxyOf() {
        return this;
      }
    };
    t.exports = s, s.default = s;
  }), et = D((e, t) => {
    var r = Ke(), n = class extends r {
      constructor(i) {
        i && typeof i.value < "u" && typeof i.value != "string" && (i = { ...i, value: String(i.value) }), super(i), this.type = "decl";
      }
      get variable() {
        return this.prop.startsWith("--") || this.prop[0] === "$";
      }
    };
    t.exports = n, n.default = n;
  }), Ct = D(() => {
  }), tt = {};
  Xe(tt, { join: () => At });
  var At, rt = Le(() => {
    At = () => "";
  }), Tt = {};
  Xe(Tt, { default: () => Sr });
  var Sr, Or = Le(() => {
    Sr = null;
  }), fi = D((e, t) => {
    var r = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict", n = (o, a = 21) => (u = a) => {
      let s = "", l = u;
      for (; l--; )
        s += o[Math.random() * o.length | 0];
      return s;
    }, i = (o = 21) => {
      let a = "", u = o;
      for (; u--; )
        a += r[Math.random() * 64 | 0];
      return a;
    };
    t.exports = { nanoid: i, customAlphabet: n };
  }), Cr, hi = Le(() => {
    Cr = `*,:before,:after{box-sizing:border-box;border-width:0;border-style:solid;border-color:theme("borderColor.DEFAULT",currentColor)}:before,:after{--tw-content: ""}html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;font-family:theme("fontFamily.sans",ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji");font-feature-settings:theme("fontFamily.sans[1].fontFeatureSettings",normal);font-variation-settings:theme("fontFamily.sans[1].fontVariationSettings",normal)}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:theme("fontFamily.mono",ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace);font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}fieldset{margin:0;padding:0}legend{padding:0}ol,ul,menu{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::placeholder,textarea::placeholder{opacity:1;color:theme("colors.gray.400",#9ca3af)}button,[role=button]{cursor:pointer}:disabled{cursor:default}img,svg,video,canvas,audio,iframe,embed,object{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]{display:none}
`;
  }), Ar = {};
  Xe(Ar, { default: () => nt });
  var nt, Et = Le(() => {
    hi(), nt = { readFileSync: () => Cr };
  }), Tr = D((e, t) => {
    var { SourceMapConsumer: r, SourceMapGenerator: n } = Ct(), { existsSync: i, readFileSync: o } = (Et(), De(Ar)), { dirname: a, join: u } = (rt(), De(tt));
    function s(p) {
      return Buffer ? Buffer.from(p, "base64").toString() : window.atob(p);
    }
    var l = class {
      constructor(p, c) {
        if (c.map === !1)
          return;
        this.loadAnnotation(p), this.inline = this.startWith(this.annotation, "data:");
        let h = c.map ? c.map.prev : void 0, m = this.loadMap(c.from, h);
        !this.mapFile && c.from && (this.mapFile = c.from), this.mapFile && (this.root = a(this.mapFile)), m && (this.text = m);
      }
      consumer() {
        return this.consumerCache || (this.consumerCache = new r(this.text)), this.consumerCache;
      }
      withContent() {
        return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
      }
      startWith(p, c) {
        return p ? p.substr(0, c.length) === c : !1;
      }
      getAnnotationURL(p) {
        return p.replace(/^\/\*\s*# sourceMappingURL=/, "").trim();
      }
      loadAnnotation(p) {
        let c = p.match(/\/\*\s*# sourceMappingURL=/gm);
        if (!c)
          return;
        let h = p.lastIndexOf(c.pop()), m = p.indexOf("*/", h);
        h > -1 && m > -1 && (this.annotation = this.getAnnotationURL(p.substring(h, m)));
      }
      decodeInline(p) {
        let c = /^data:application\/json;charset=utf-?8;base64,/, h = /^data:application\/json;base64,/, m = /^data:application\/json;charset=utf-?8,/, f = /^data:application\/json,/;
        if (m.test(p) || f.test(p))
          return decodeURIComponent(p.substr(RegExp.lastMatch.length));
        if (c.test(p) || h.test(p))
          return s(p.substr(RegExp.lastMatch.length));
        let d = p.match(/data:application\/json;([^,]+),/)[1];
        throw new Error("Unsupported source map encoding " + d);
      }
      loadFile(p) {
        if (this.root = a(p), i(p))
          return this.mapFile = p, o(p, "utf-8").toString().trim();
      }
      loadMap(p, c) {
        if (c === !1)
          return !1;
        if (c) {
          if (typeof c == "string")
            return c;
          if (typeof c == "function") {
            let h = c(p);
            if (h) {
              let m = this.loadFile(h);
              if (!m)
                throw new Error("Unable to load previous source map: " + h.toString());
              return m;
            }
          } else {
            if (c instanceof r)
              return n.fromSourceMap(c).toString();
            if (c instanceof n)
              return c.toString();
            if (this.isMap(c))
              return JSON.stringify(c);
            throw new Error("Unsupported previous source map format: " + c.toString());
          }
        } else {
          if (this.inline)
            return this.decodeInline(this.annotation);
          if (this.annotation) {
            let h = this.annotation;
            return p && (h = u(a(p), h)), this.loadFile(h);
          }
        }
      }
      isMap(p) {
        return typeof p != "object" ? !1 : typeof p.mappings == "string" || typeof p._mappings == "string" || Array.isArray(p.sections);
      }
    };
    t.exports = l, l.default = l;
  }), it = D((e, t) => {
    var { SourceMapConsumer: r, SourceMapGenerator: n } = Ct(), { fileURLToPath: i, pathToFileURL: o } = (Or(), De(Tt)), { resolve: a, isAbsolute: u } = (rt(), De(tt)), { nanoid: s } = fi(), l = xr(), p = St(), c = Tr(), h = Symbol("fromOffsetCache"), m = !!(r && n), f = !!(a && u), d = class {
      constructor(g, b = {}) {
        if (g === null || typeof g > "u" || typeof g == "object" && !g.toString)
          throw new Error(`PostCSS received ${g} instead of CSS string`);
        if (this.css = g.toString(), this.css[0] === "\uFEFF" || this.css[0] === "￾" ? (this.hasBOM = !0, this.css = this.css.slice(1)) : this.hasBOM = !1, b.from && (!f || /^\w+:\/\//.test(b.from) || u(b.from) ? this.file = b.from : this.file = a(b.from)), f && m) {
          let v = new c(this.css, b);
          if (v.text) {
            this.map = v;
            let x = v.consumer().file;
            !this.file && x && (this.file = this.mapResolve(x));
          }
        }
        this.file || (this.id = "<input css " + s(6) + ">"), this.map && (this.map.file = this.from);
      }
      fromOffset(g) {
        let b, v;
        if (this[h])
          v = this[h];
        else {
          let k = this.css.split(`
`);
          v = new Array(k.length);
          let y = 0;
          for (let w = 0, S = k.length; w < S; w++)
            v[w] = y, y += k[w].length + 1;
          this[h] = v;
        }
        b = v[v.length - 1];
        let x = 0;
        if (g >= b)
          x = v.length - 1;
        else {
          let k = v.length - 2, y;
          for (; x < k; )
            if (y = x + (k - x >> 1), g < v[y])
              k = y - 1;
            else if (g >= v[y + 1])
              x = y + 1;
            else {
              x = y;
              break;
            }
        }
        return { line: x + 1, col: g - v[x] + 1 };
      }
      error(g, b, v, x = {}) {
        let k, y, w;
        if (b && typeof b == "object") {
          let O = b, C = v;
          if (typeof b.offset == "number") {
            let A = this.fromOffset(O.offset);
            b = A.line, v = A.col;
          } else
            b = O.line, v = O.column;
          if (typeof C.offset == "number") {
            let A = this.fromOffset(C.offset);
            y = A.line, w = A.col;
          } else
            y = C.line, w = C.column;
        } else if (!v) {
          let O = this.fromOffset(b);
          b = O.line, v = O.col;
        }
        let S = this.origin(b, v, y, w);
        return S ? k = new p(g, S.endLine === void 0 ? S.line : { line: S.line, column: S.column }, S.endLine === void 0 ? S.column : { line: S.endLine, column: S.endColumn }, S.source, S.file, x.plugin) : k = new p(g, y === void 0 ? b : { line: b, column: v }, y === void 0 ? v : { line: y, column: w }, this.css, this.file, x.plugin), k.input = { line: b, column: v, endLine: y, endColumn: w, source: this.css }, this.file && (o && (k.input.url = o(this.file).toString()), k.input.file = this.file), k;
      }
      origin(g, b, v, x) {
        if (!this.map)
          return !1;
        let k = this.map.consumer(), y = k.originalPositionFor({ line: g, column: b });
        if (!y.source)
          return !1;
        let w;
        typeof v == "number" && (w = k.originalPositionFor({ line: v, column: x }));
        let S;
        u(y.source) ? S = o(y.source) : S = new URL(y.source, this.map.consumer().sourceRoot || o(this.map.mapFile));
        let O = { url: S.toString(), line: y.line, column: y.column, endLine: w && w.line, endColumn: w && w.column };
        if (S.protocol === "file:")
          if (i)
            O.file = i(S);
          else
            throw new Error("file: protocol is not available in this PostCSS build");
        let C = k.sourceContentFor(y.source);
        return C && (O.source = C), O;
      }
      mapResolve(g) {
        return /^\w+:\/\//.test(g) ? g : a(this.map.consumer().sourceRoot || this.map.root || ".", g);
      }
      get from() {
        return this.file || this.id;
      }
      toJSON() {
        let g = {};
        for (let b of ["hasBOM", "css", "file", "id"])
          this[b] != null && (g[b] = this[b]);
        return this.map && (g.map = { ...this.map }, g.map.consumerCache && (g.map.consumerCache = void 0)), g;
      }
    };
    t.exports = d, d.default = d, l && l.registerInput && l.registerInput(d);
  }), Er = D((e, t) => {
    var { SourceMapConsumer: r, SourceMapGenerator: n } = Ct(), { dirname: i, resolve: o, relative: a, sep: u } = (rt(), De(tt)), { pathToFileURL: s } = (Or(), De(Tt)), l = it(), p = !!(r && n), c = !!(i && o && a && u), h = class {
      constructor(m, f, d, g) {
        this.stringify = m, this.mapOpts = d.map || {}, this.root = f, this.opts = d, this.css = g, this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;
      }
      isMap() {
        return typeof this.opts.map < "u" ? !!this.opts.map : this.previous().length > 0;
      }
      previous() {
        if (!this.previousMaps)
          if (this.previousMaps = [], this.root)
            this.root.walk((m) => {
              if (m.source && m.source.input.map) {
                let f = m.source.input.map;
                this.previousMaps.includes(f) || this.previousMaps.push(f);
              }
            });
          else {
            let m = new l(this.css, this.opts);
            m.map && this.previousMaps.push(m.map);
          }
        return this.previousMaps;
      }
      isInline() {
        if (typeof this.mapOpts.inline < "u")
          return this.mapOpts.inline;
        let m = this.mapOpts.annotation;
        return typeof m < "u" && m !== !0 ? !1 : this.previous().length ? this.previous().some((f) => f.inline) : !0;
      }
      isSourcesContent() {
        return typeof this.mapOpts.sourcesContent < "u" ? this.mapOpts.sourcesContent : this.previous().length ? this.previous().some((m) => m.withContent()) : !0;
      }
      clearAnnotation() {
        if (this.mapOpts.annotation !== !1)
          if (this.root) {
            let m;
            for (let f = this.root.nodes.length - 1; f >= 0; f--)
              m = this.root.nodes[f], m.type === "comment" && m.text.indexOf("# sourceMappingURL=") === 0 && this.root.removeChild(f);
          } else
            this.css && (this.css = this.css.replace(/(\n)?\/\*#[\S\s]*?\*\/$/gm, ""));
      }
      setSourcesContent() {
        let m = {};
        if (this.root)
          this.root.walk((f) => {
            if (f.source) {
              let d = f.source.input.from;
              if (d && !m[d]) {
                m[d] = !0;
                let g = this.usesFileUrls ? this.toFileUrl(d) : this.toUrl(this.path(d));
                this.map.setSourceContent(g, f.source.input.css);
              }
            }
          });
        else if (this.css) {
          let f = this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>";
          this.map.setSourceContent(f, this.css);
        }
      }
      applyPrevMaps() {
        for (let m of this.previous()) {
          let f = this.toUrl(this.path(m.file)), d = m.root || i(m.file), g;
          this.mapOpts.sourcesContent === !1 ? (g = new r(m.text), g.sourcesContent && (g.sourcesContent = g.sourcesContent.map(() => null))) : g = m.consumer(), this.map.applySourceMap(g, f, this.toUrl(this.path(d)));
        }
      }
      isAnnotation() {
        return this.isInline() ? !0 : typeof this.mapOpts.annotation < "u" ? this.mapOpts.annotation : this.previous().length ? this.previous().some((m) => m.annotation) : !0;
      }
      toBase64(m) {
        return Buffer ? Buffer.from(m).toString("base64") : window.btoa(unescape(encodeURIComponent(m)));
      }
      addAnnotation() {
        let m;
        this.isInline() ? m = "data:application/json;base64," + this.toBase64(this.map.toString()) : typeof this.mapOpts.annotation == "string" ? m = this.mapOpts.annotation : typeof this.mapOpts.annotation == "function" ? m = this.mapOpts.annotation(this.opts.to, this.root) : m = this.outputFile() + ".map";
        let f = `
`;
        this.css.includes(`\r
`) && (f = `\r
`), this.css += f + "/*# sourceMappingURL=" + m + " */";
      }
      outputFile() {
        return this.opts.to ? this.path(this.opts.to) : this.opts.from ? this.path(this.opts.from) : "to.css";
      }
      generateMap() {
        if (this.root)
          this.generateString();
        else if (this.previous().length === 1) {
          let m = this.previous()[0].consumer();
          m.file = this.outputFile(), this.map = n.fromSourceMap(m);
        } else
          this.map = new n({ file: this.outputFile() }), this.map.addMapping({ source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>", generated: { line: 1, column: 0 }, original: { line: 1, column: 0 } });
        return this.isSourcesContent() && this.setSourcesContent(), this.root && this.previous().length > 0 && this.applyPrevMaps(), this.isAnnotation() && this.addAnnotation(), this.isInline() ? [this.css] : [this.css, this.map];
      }
      path(m) {
        if (m.indexOf("<") === 0 || /^\w+:\/\//.test(m) || this.mapOpts.absolute)
          return m;
        let f = this.opts.to ? i(this.opts.to) : ".";
        return typeof this.mapOpts.annotation == "string" && (f = i(o(f, this.mapOpts.annotation))), m = a(f, m), m;
      }
      toUrl(m) {
        return u === "\\" && (m = m.replace(/\\/g, "/")), encodeURI(m).replace(/[#?]/g, encodeURIComponent);
      }
      toFileUrl(m) {
        if (s)
          return s(m).toString();
        throw new Error("`map.absolute` option is not available in this PostCSS build");
      }
      sourcePath(m) {
        return this.mapOpts.from ? this.toUrl(this.mapOpts.from) : this.usesFileUrls ? this.toFileUrl(m.source.input.from) : this.toUrl(this.path(m.source.input.from));
      }
      generateString() {
        this.css = "", this.map = new n({ file: this.outputFile() });
        let m = 1, f = 1, d = "<no source>", g = { source: "", generated: { line: 0, column: 0 }, original: { line: 0, column: 0 } }, b, v;
        this.stringify(this.root, (x, k, y) => {
          if (this.css += x, k && y !== "end" && (g.generated.line = m, g.generated.column = f - 1, k.source && k.source.start ? (g.source = this.sourcePath(k), g.original.line = k.source.start.line, g.original.column = k.source.start.column - 1, this.map.addMapping(g)) : (g.source = d, g.original.line = 1, g.original.column = 0, this.map.addMapping(g))), b = x.match(/\n/g), b ? (m += b.length, v = x.lastIndexOf(`
`), f = x.length - v) : f += x.length, k && y !== "start") {
            let w = k.parent || { raws: {} };
            (k.type !== "decl" || k !== w.last || w.raws.semicolon) && (k.source && k.source.end ? (g.source = this.sourcePath(k), g.original.line = k.source.end.line, g.original.column = k.source.end.column - 1, g.generated.line = m, g.generated.column = f - 2, this.map.addMapping(g)) : (g.source = d, g.original.line = 1, g.original.column = 0, g.generated.line = m, g.generated.column = f - 1, this.map.addMapping(g)));
          }
        });
      }
      generate() {
        if (this.clearAnnotation(), c && p && this.isMap())
          return this.generateMap();
        {
          let m = "";
          return this.stringify(this.root, (f) => {
            m += f;
          }), [m];
        }
      }
    };
    t.exports = h;
  }), ot = D((e, t) => {
    var r = Ke(), n = class extends r {
      constructor(i) {
        super(i), this.type = "comment";
      }
    };
    t.exports = n, n.default = n;
  }), Ie = D((e, t) => {
    var { isClean: r, my: n } = Ot(), i = et(), o = ot(), a = Ke(), u, s, l, p;
    function c(f) {
      return f.map((d) => (d.nodes && (d.nodes = c(d.nodes)), delete d.source, d));
    }
    function h(f) {
      if (f[r] = !1, f.proxyOf.nodes)
        for (let d of f.proxyOf.nodes)
          h(d);
    }
    var m = class extends a {
      push(f) {
        return f.parent = this, this.proxyOf.nodes.push(f), this;
      }
      each(f) {
        if (!this.proxyOf.nodes)
          return;
        let d = this.getIterator(), g, b;
        for (; this.indexes[d] < this.proxyOf.nodes.length && (g = this.indexes[d], b = f(this.proxyOf.nodes[g], g), b !== !1); )
          this.indexes[d] += 1;
        return delete this.indexes[d], b;
      }
      walk(f) {
        return this.each((d, g) => {
          let b;
          try {
            b = f(d, g);
          } catch (v) {
            throw d.addToError(v);
          }
          return b !== !1 && d.walk && (b = d.walk(f)), b;
        });
      }
      walkDecls(f, d) {
        return d ? f instanceof RegExp ? this.walk((g, b) => {
          if (g.type === "decl" && f.test(g.prop))
            return d(g, b);
        }) : this.walk((g, b) => {
          if (g.type === "decl" && g.prop === f)
            return d(g, b);
        }) : (d = f, this.walk((g, b) => {
          if (g.type === "decl")
            return d(g, b);
        }));
      }
      walkRules(f, d) {
        return d ? f instanceof RegExp ? this.walk((g, b) => {
          if (g.type === "rule" && f.test(g.selector))
            return d(g, b);
        }) : this.walk((g, b) => {
          if (g.type === "rule" && g.selector === f)
            return d(g, b);
        }) : (d = f, this.walk((g, b) => {
          if (g.type === "rule")
            return d(g, b);
        }));
      }
      walkAtRules(f, d) {
        return d ? f instanceof RegExp ? this.walk((g, b) => {
          if (g.type === "atrule" && f.test(g.name))
            return d(g, b);
        }) : this.walk((g, b) => {
          if (g.type === "atrule" && g.name === f)
            return d(g, b);
        }) : (d = f, this.walk((g, b) => {
          if (g.type === "atrule")
            return d(g, b);
        }));
      }
      walkComments(f) {
        return this.walk((d, g) => {
          if (d.type === "comment")
            return f(d, g);
        });
      }
      append(...f) {
        for (let d of f) {
          let g = this.normalize(d, this.last);
          for (let b of g)
            this.proxyOf.nodes.push(b);
        }
        return this.markDirty(), this;
      }
      prepend(...f) {
        f = f.reverse();
        for (let d of f) {
          let g = this.normalize(d, this.first, "prepend").reverse();
          for (let b of g)
            this.proxyOf.nodes.unshift(b);
          for (let b in this.indexes)
            this.indexes[b] = this.indexes[b] + g.length;
        }
        return this.markDirty(), this;
      }
      cleanRaws(f) {
        if (super.cleanRaws(f), this.nodes)
          for (let d of this.nodes)
            d.cleanRaws(f);
      }
      insertBefore(f, d) {
        let g = this.index(f), b = f === 0 ? "prepend" : !1, v = this.normalize(d, this.proxyOf.nodes[g], b).reverse();
        g = this.index(f);
        for (let k of v)
          this.proxyOf.nodes.splice(g, 0, k);
        let x;
        for (let k in this.indexes)
          x = this.indexes[k], g <= x && (this.indexes[k] = x + v.length);
        return this.markDirty(), this;
      }
      insertAfter(f, d) {
        let g = this.index(f), b = this.normalize(d, this.proxyOf.nodes[g]).reverse();
        g = this.index(f);
        for (let x of b)
          this.proxyOf.nodes.splice(g + 1, 0, x);
        let v;
        for (let x in this.indexes)
          v = this.indexes[x], g < v && (this.indexes[x] = v + b.length);
        return this.markDirty(), this;
      }
      removeChild(f) {
        f = this.index(f), this.proxyOf.nodes[f].parent = void 0, this.proxyOf.nodes.splice(f, 1);
        let d;
        for (let g in this.indexes)
          d = this.indexes[g], d >= f && (this.indexes[g] = d - 1);
        return this.markDirty(), this;
      }
      removeAll() {
        for (let f of this.proxyOf.nodes)
          f.parent = void 0;
        return this.proxyOf.nodes = [], this.markDirty(), this;
      }
      replaceValues(f, d, g) {
        return g || (g = d, d = {}), this.walkDecls((b) => {
          d.props && !d.props.includes(b.prop) || d.fast && !b.value.includes(d.fast) || (b.value = b.value.replace(f, g));
        }), this.markDirty(), this;
      }
      every(f) {
        return this.nodes.every(f);
      }
      some(f) {
        return this.nodes.some(f);
      }
      index(f) {
        return typeof f == "number" ? f : (f.proxyOf && (f = f.proxyOf), this.proxyOf.nodes.indexOf(f));
      }
      get first() {
        if (this.proxyOf.nodes)
          return this.proxyOf.nodes[0];
      }
      get last() {
        if (this.proxyOf.nodes)
          return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];
      }
      normalize(f, d) {
        if (typeof f == "string")
          f = c(u(f).nodes);
        else if (Array.isArray(f)) {
          f = f.slice(0);
          for (let g of f)
            g.parent && g.parent.removeChild(g, "ignore");
        } else if (f.type === "root" && this.type !== "document") {
          f = f.nodes.slice(0);
          for (let g of f)
            g.parent && g.parent.removeChild(g, "ignore");
        } else if (f.type)
          f = [f];
        else if (f.prop) {
          if (typeof f.value > "u")
            throw new Error("Value field is missed in node creation");
          typeof f.value != "string" && (f.value = String(f.value)), f = [new i(f)];
        } else if (f.selector)
          f = [new s(f)];
        else if (f.name)
          f = [new l(f)];
        else if (f.text)
          f = [new o(f)];
        else
          throw new Error("Unknown node type in node creation");
        return f.map((g) => (g[n] || m.rebuild(g), g = g.proxyOf, g.parent && g.parent.removeChild(g), g[r] && h(g), typeof g.raws.before > "u" && d && typeof d.raws.before < "u" && (g.raws.before = d.raws.before.replace(/\S/g, "")), g.parent = this.proxyOf, g));
      }
      getProxyProcessor() {
        return { set(f, d, g) {
          return f[d] === g || (f[d] = g, (d === "name" || d === "params" || d === "selector") && f.markDirty()), !0;
        }, get(f, d) {
          return d === "proxyOf" ? f : f[d] ? d === "each" || typeof d == "string" && d.startsWith("walk") ? (...g) => f[d](...g.map((b) => typeof b == "function" ? (v, x) => b(v.toProxy(), x) : b)) : d === "every" || d === "some" ? (g) => f[d]((b, ...v) => g(b.toProxy(), ...v)) : d === "root" ? () => f.root().toProxy() : d === "nodes" ? f.nodes.map((g) => g.toProxy()) : d === "first" || d === "last" ? f[d].toProxy() : f[d] : f[d];
        } };
      }
      getIterator() {
        this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach += 1;
        let f = this.lastEach;
        return this.indexes[f] = 0, f;
      }
    };
    m.registerParse = (f) => {
      u = f;
    }, m.registerRule = (f) => {
      s = f;
    }, m.registerAtRule = (f) => {
      l = f;
    }, m.registerRoot = (f) => {
      p = f;
    }, t.exports = m, m.default = m, m.rebuild = (f) => {
      f.type === "atrule" ? Object.setPrototypeOf(f, l.prototype) : f.type === "rule" ? Object.setPrototypeOf(f, s.prototype) : f.type === "decl" ? Object.setPrototypeOf(f, i.prototype) : f.type === "comment" ? Object.setPrototypeOf(f, o.prototype) : f.type === "root" && Object.setPrototypeOf(f, p.prototype), f[n] = !0, f.nodes && f.nodes.forEach((d) => {
        m.rebuild(d);
      });
    };
  }), _t = D((e, t) => {
    var r = Ie(), n, i, o = class extends r {
      constructor(a) {
        super({ type: "document", ...a }), this.nodes || (this.nodes = []);
      }
      toResult(a = {}) {
        return new n(new i(), this, a).stringify();
      }
    };
    o.registerLazyResult = (a) => {
      n = a;
    }, o.registerProcessor = (a) => {
      i = a;
    }, t.exports = o, o.default = o;
  }), _r = D((e, t) => {
    var r = {};
    t.exports = function(n) {
      r[n] || (r[n] = !0, typeof console < "u" && console.warn && console.warn(n));
    };
  }), Pr = D((e, t) => {
    var r = class {
      constructor(n, i = {}) {
        if (this.type = "warning", this.text = n, i.node && i.node.source) {
          let o = i.node.rangeBy(i);
          this.line = o.start.line, this.column = o.start.column, this.endLine = o.end.line, this.endColumn = o.end.column;
        }
        for (let o in i)
          this[o] = i[o];
      }
      toString() {
        return this.node ? this.node.error(this.text, { plugin: this.plugin, index: this.index, word: this.word }).message : this.plugin ? this.plugin + ": " + this.text : this.text;
      }
    };
    t.exports = r, r.default = r;
  }), Pt = D((e, t) => {
    var r = Pr(), n = class {
      constructor(i, o, a) {
        this.processor = i, this.messages = [], this.root = o, this.opts = a, this.css = void 0, this.map = void 0;
      }
      toString() {
        return this.css;
      }
      warn(i, o = {}) {
        o.plugin || this.lastPlugin && this.lastPlugin.postcssPlugin && (o.plugin = this.lastPlugin.postcssPlugin);
        let a = new r(i, o);
        return this.messages.push(a), a;
      }
      warnings() {
        return this.messages.filter((i) => i.type === "warning");
      }
      get content() {
        return this.css;
      }
    };
    t.exports = n, n.default = n;
  }), mi = D((e, t) => {
    var r = "'".charCodeAt(0), n = '"'.charCodeAt(0), i = "\\".charCodeAt(0), o = "/".charCodeAt(0), a = `
`.charCodeAt(0), u = " ".charCodeAt(0), s = "\f".charCodeAt(0), l = "	".charCodeAt(0), p = "\r".charCodeAt(0), c = "[".charCodeAt(0), h = "]".charCodeAt(0), m = "(".charCodeAt(0), f = ")".charCodeAt(0), d = "{".charCodeAt(0), g = "}".charCodeAt(0), b = ";".charCodeAt(0), v = "*".charCodeAt(0), x = ":".charCodeAt(0), k = "@".charCodeAt(0), y = /[\t\n\f\r "#'()/;[\\\]{}]/g, w = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g, S = /.[\n"'(/\\]/, O = /[\da-f]/i;
    t.exports = function(C, A = {}) {
      let T = C.css.valueOf(), F = A.ignoreErrors, U, j, $, L, H, G, pe, ce, I, M, E = T.length, _ = 0, N = [], P = [];
      function B() {
        return _;
      }
      function q(X) {
        throw C.error("Unclosed " + X, _);
      }
      function V() {
        return P.length === 0 && _ >= E;
      }
      function z(X) {
        if (P.length)
          return P.pop();
        if (_ >= E)
          return;
        let W = X ? X.ignoreUnclosed : !1;
        switch (U = T.charCodeAt(_), U) {
          case a:
          case u:
          case l:
          case p:
          case s: {
            j = _;
            do
              j += 1, U = T.charCodeAt(j);
            while (U === u || U === a || U === l || U === p || U === s);
            M = ["space", T.slice(_, j)], _ = j - 1;
            break;
          }
          case c:
          case h:
          case d:
          case g:
          case x:
          case b:
          case f: {
            let Z = String.fromCharCode(U);
            M = [Z, Z, _];
            break;
          }
          case m: {
            if (ce = N.length ? N.pop()[1] : "", I = T.charCodeAt(_ + 1), ce === "url" && I !== r && I !== n && I !== u && I !== a && I !== l && I !== s && I !== p) {
              j = _;
              do {
                if (G = !1, j = T.indexOf(")", j + 1), j === -1)
                  if (F || W) {
                    j = _;
                    break;
                  } else
                    q("bracket");
                for (pe = j; T.charCodeAt(pe - 1) === i; )
                  pe -= 1, G = !G;
              } while (G);
              M = ["brackets", T.slice(_, j + 1), _, j], _ = j;
            } else
              j = T.indexOf(")", _ + 1), L = T.slice(_, j + 1), j === -1 || S.test(L) ? M = ["(", "(", _] : (M = ["brackets", L, _, j], _ = j);
            break;
          }
          case r:
          case n: {
            $ = U === r ? "'" : '"', j = _;
            do {
              if (G = !1, j = T.indexOf($, j + 1), j === -1)
                if (F || W) {
                  j = _ + 1;
                  break;
                } else
                  q("string");
              for (pe = j; T.charCodeAt(pe - 1) === i; )
                pe -= 1, G = !G;
            } while (G);
            M = ["string", T.slice(_, j + 1), _, j], _ = j;
            break;
          }
          case k: {
            y.lastIndex = _ + 1, y.test(T), y.lastIndex === 0 ? j = T.length - 1 : j = y.lastIndex - 2, M = ["at-word", T.slice(_, j + 1), _, j], _ = j;
            break;
          }
          case i: {
            for (j = _, H = !0; T.charCodeAt(j + 1) === i; )
              j += 1, H = !H;
            if (U = T.charCodeAt(j + 1), H && U !== o && U !== u && U !== a && U !== l && U !== p && U !== s && (j += 1, O.test(T.charAt(j)))) {
              for (; O.test(T.charAt(j + 1)); )
                j += 1;
              T.charCodeAt(j + 1) === u && (j += 1);
            }
            M = ["word", T.slice(_, j + 1), _, j], _ = j;
            break;
          }
          default: {
            U === o && T.charCodeAt(_ + 1) === v ? (j = T.indexOf("*/", _ + 2) + 1, j === 0 && (F || W ? j = T.length : q("comment")), M = ["comment", T.slice(_, j + 1), _, j], _ = j) : (w.lastIndex = _ + 1, w.test(T), w.lastIndex === 0 ? j = T.length - 1 : j = w.lastIndex - 2, M = ["word", T.slice(_, j + 1), _, j], N.push(M), _ = j);
            break;
          }
        }
        return _++, M;
      }
      function Q(X) {
        P.push(X);
      }
      return { back: Q, nextToken: z, endOfFile: V, position: B };
    };
  }), jt = D((e, t) => {
    var r = Ie(), n = class extends r {
      constructor(i) {
        super(i), this.type = "atrule";
      }
      append(...i) {
        return this.proxyOf.nodes || (this.nodes = []), super.append(...i);
      }
      prepend(...i) {
        return this.proxyOf.nodes || (this.nodes = []), super.prepend(...i);
      }
    };
    t.exports = n, n.default = n, r.registerAtRule(n);
  }), $e = D((e, t) => {
    var r = Ie(), n, i, o = class extends r {
      constructor(a) {
        super(a), this.type = "root", this.nodes || (this.nodes = []);
      }
      removeChild(a, u) {
        let s = this.index(a);
        return !u && s === 0 && this.nodes.length > 1 && (this.nodes[1].raws.before = this.nodes[s].raws.before), super.removeChild(a);
      }
      normalize(a, u, s) {
        let l = super.normalize(a);
        if (u) {
          if (s === "prepend")
            this.nodes.length > 1 ? u.raws.before = this.nodes[1].raws.before : delete u.raws.before;
          else if (this.first !== u)
            for (let p of l)
              p.raws.before = u.raws.before;
        }
        return l;
      }
      toResult(a = {}) {
        return new n(new i(), this, a).stringify();
      }
    };
    o.registerLazyResult = (a) => {
      n = a;
    }, o.registerProcessor = (a) => {
      i = a;
    }, t.exports = o, o.default = o, r.registerRoot(o);
  }), jr = D((e, t) => {
    var r = { split(n, i, o) {
      let a = [], u = "", s = !1, l = 0, p = !1, c = "", h = !1;
      for (let m of n)
        h ? h = !1 : m === "\\" ? h = !0 : p ? m === c && (p = !1) : m === '"' || m === "'" ? (p = !0, c = m) : m === "(" ? l += 1 : m === ")" ? l > 0 && (l -= 1) : l === 0 && i.includes(m) && (s = !0), s ? (u !== "" && a.push(u.trim()), u = "", s = !1) : u += m;
      return (o || u !== "") && a.push(u.trim()), a;
    }, space(n) {
      let i = [" ", `
`, "	"];
      return r.split(n, i);
    }, comma(n) {
      return r.split(n, [","], !0);
    } };
    t.exports = r, r.default = r;
  }), Dt = D((e, t) => {
    var r = Ie(), n = jr(), i = class extends r {
      constructor(o) {
        super(o), this.type = "rule", this.nodes || (this.nodes = []);
      }
      get selectors() {
        return n.comma(this.selector);
      }
      set selectors(o) {
        let a = this.selector ? this.selector.match(/,\s*/) : null, u = a ? a[0] : "," + this.raw("between", "beforeOpen");
        this.selector = o.join(u);
      }
    };
    t.exports = i, i.default = i, r.registerRule(i);
  }), gi = D((e, t) => {
    var r = et(), n = mi(), i = ot(), o = jt(), a = $e(), u = Dt(), s = { empty: !0, space: !0 };
    function l(c) {
      for (let h = c.length - 1; h >= 0; h--) {
        let m = c[h], f = m[3] || m[2];
        if (f)
          return f;
      }
    }
    var p = class {
      constructor(c) {
        this.input = c, this.root = new a(), this.current = this.root, this.spaces = "", this.semicolon = !1, this.customProperty = !1, this.createTokenizer(), this.root.source = { input: c, start: { offset: 0, line: 1, column: 1 } };
      }
      createTokenizer() {
        this.tokenizer = n(this.input);
      }
      parse() {
        let c;
        for (; !this.tokenizer.endOfFile(); )
          switch (c = this.tokenizer.nextToken(), c[0]) {
            case "space":
              this.spaces += c[1];
              break;
            case ";":
              this.freeSemicolon(c);
              break;
            case "}":
              this.end(c);
              break;
            case "comment":
              this.comment(c);
              break;
            case "at-word":
              this.atrule(c);
              break;
            case "{":
              this.emptyRule(c);
              break;
            default:
              this.other(c);
              break;
          }
        this.endFile();
      }
      comment(c) {
        let h = new i();
        this.init(h, c[2]), h.source.end = this.getPosition(c[3] || c[2]);
        let m = c[1].slice(2, -2);
        if (/^\s*$/.test(m))
          h.text = "", h.raws.left = m, h.raws.right = "";
        else {
          let f = m.match(/^(\s*)([^]*\S)(\s*)$/);
          h.text = f[2], h.raws.left = f[1], h.raws.right = f[3];
        }
      }
      emptyRule(c) {
        let h = new u();
        this.init(h, c[2]), h.selector = "", h.raws.between = "", this.current = h;
      }
      other(c) {
        let h = !1, m = null, f = !1, d = null, g = [], b = c[1].startsWith("--"), v = [], x = c;
        for (; x; ) {
          if (m = x[0], v.push(x), m === "(" || m === "[")
            d || (d = x), g.push(m === "(" ? ")" : "]");
          else if (b && f && m === "{")
            d || (d = x), g.push("}");
          else if (g.length === 0)
            if (m === ";")
              if (f) {
                this.decl(v, b);
                return;
              } else
                break;
            else if (m === "{") {
              this.rule(v);
              return;
            } else if (m === "}") {
              this.tokenizer.back(v.pop()), h = !0;
              break;
            } else
              m === ":" && (f = !0);
          else
            m === g[g.length - 1] && (g.pop(), g.length === 0 && (d = null));
          x = this.tokenizer.nextToken();
        }
        if (this.tokenizer.endOfFile() && (h = !0), g.length > 0 && this.unclosedBracket(d), h && f) {
          if (!b)
            for (; v.length && (x = v[v.length - 1][0], !(x !== "space" && x !== "comment")); )
              this.tokenizer.back(v.pop());
          this.decl(v, b);
        } else
          this.unknownWord(v);
      }
      rule(c) {
        c.pop();
        let h = new u();
        this.init(h, c[0][2]), h.raws.between = this.spacesAndCommentsFromEnd(c), this.raw(h, "selector", c), this.current = h;
      }
      decl(c, h) {
        let m = new r();
        this.init(m, c[0][2]);
        let f = c[c.length - 1];
        for (f[0] === ";" && (this.semicolon = !0, c.pop()), m.source.end = this.getPosition(f[3] || f[2] || l(c)); c[0][0] !== "word"; )
          c.length === 1 && this.unknownWord(c), m.raws.before += c.shift()[1];
        for (m.source.start = this.getPosition(c[0][2]), m.prop = ""; c.length; ) {
          let v = c[0][0];
          if (v === ":" || v === "space" || v === "comment")
            break;
          m.prop += c.shift()[1];
        }
        m.raws.between = "";
        let d;
        for (; c.length; )
          if (d = c.shift(), d[0] === ":") {
            m.raws.between += d[1];
            break;
          } else
            d[0] === "word" && /\w/.test(d[1]) && this.unknownWord([d]), m.raws.between += d[1];
        (m.prop[0] === "_" || m.prop[0] === "*") && (m.raws.before += m.prop[0], m.prop = m.prop.slice(1));
        let g = [], b;
        for (; c.length && (b = c[0][0], !(b !== "space" && b !== "comment")); )
          g.push(c.shift());
        this.precheckMissedSemicolon(c);
        for (let v = c.length - 1; v >= 0; v--) {
          if (d = c[v], d[1].toLowerCase() === "!important") {
            m.important = !0;
            let x = this.stringFrom(c, v);
            x = this.spacesFromEnd(c) + x, x !== " !important" && (m.raws.important = x);
            break;
          } else if (d[1].toLowerCase() === "important") {
            let x = c.slice(0), k = "";
            for (let y = v; y > 0; y--) {
              let w = x[y][0];
              if (k.trim().indexOf("!") === 0 && w !== "space")
                break;
              k = x.pop()[1] + k;
            }
            k.trim().indexOf("!") === 0 && (m.important = !0, m.raws.important = k, c = x);
          }
          if (d[0] !== "space" && d[0] !== "comment")
            break;
        }
        c.some((v) => v[0] !== "space" && v[0] !== "comment") && (m.raws.between += g.map((v) => v[1]).join(""), g = []), this.raw(m, "value", g.concat(c), h), m.value.includes(":") && !h && this.checkMissedSemicolon(c);
      }
      atrule(c) {
        let h = new o();
        h.name = c[1].slice(1), h.name === "" && this.unnamedAtrule(h, c), this.init(h, c[2]);
        let m, f, d, g = !1, b = !1, v = [], x = [];
        for (; !this.tokenizer.endOfFile(); ) {
          if (c = this.tokenizer.nextToken(), m = c[0], m === "(" || m === "[" ? x.push(m === "(" ? ")" : "]") : m === "{" && x.length > 0 ? x.push("}") : m === x[x.length - 1] && x.pop(), x.length === 0)
            if (m === ";") {
              h.source.end = this.getPosition(c[2]), this.semicolon = !0;
              break;
            } else if (m === "{") {
              b = !0;
              break;
            } else if (m === "}") {
              if (v.length > 0) {
                for (d = v.length - 1, f = v[d]; f && f[0] === "space"; )
                  f = v[--d];
                f && (h.source.end = this.getPosition(f[3] || f[2]));
              }
              this.end(c);
              break;
            } else
              v.push(c);
          else
            v.push(c);
          if (this.tokenizer.endOfFile()) {
            g = !0;
            break;
          }
        }
        h.raws.between = this.spacesAndCommentsFromEnd(v), v.length ? (h.raws.afterName = this.spacesAndCommentsFromStart(v), this.raw(h, "params", v), g && (c = v[v.length - 1], h.source.end = this.getPosition(c[3] || c[2]), this.spaces = h.raws.between, h.raws.between = "")) : (h.raws.afterName = "", h.params = ""), b && (h.nodes = [], this.current = h);
      }
      end(c) {
        this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.semicolon = !1, this.current.raws.after = (this.current.raws.after || "") + this.spaces, this.spaces = "", this.current.parent ? (this.current.source.end = this.getPosition(c[2]), this.current = this.current.parent) : this.unexpectedClose(c);
      }
      endFile() {
        this.current.parent && this.unclosedBlock(), this.current.nodes && this.current.nodes.length && (this.current.raws.semicolon = this.semicolon), this.current.raws.after = (this.current.raws.after || "") + this.spaces;
      }
      freeSemicolon(c) {
        if (this.spaces += c[1], this.current.nodes) {
          let h = this.current.nodes[this.current.nodes.length - 1];
          h && h.type === "rule" && !h.raws.ownSemicolon && (h.raws.ownSemicolon = this.spaces, this.spaces = "");
        }
      }
      getPosition(c) {
        let h = this.input.fromOffset(c);
        return { offset: c, line: h.line, column: h.col };
      }
      init(c, h) {
        this.current.push(c), c.source = { start: this.getPosition(h), input: this.input }, c.raws.before = this.spaces, this.spaces = "", c.type !== "comment" && (this.semicolon = !1);
      }
      raw(c, h, m, f) {
        let d, g, b = m.length, v = "", x = !0, k, y;
        for (let w = 0; w < b; w += 1)
          d = m[w], g = d[0], g === "space" && w === b - 1 && !f ? x = !1 : g === "comment" ? (y = m[w - 1] ? m[w - 1][0] : "empty", k = m[w + 1] ? m[w + 1][0] : "empty", !s[y] && !s[k] ? v.slice(-1) === "," ? x = !1 : v += d[1] : x = !1) : v += d[1];
        if (!x) {
          let w = m.reduce((S, O) => S + O[1], "");
          c.raws[h] = { value: v, raw: w };
        }
        c[h] = v;
      }
      spacesAndCommentsFromEnd(c) {
        let h, m = "";
        for (; c.length && (h = c[c.length - 1][0], !(h !== "space" && h !== "comment")); )
          m = c.pop()[1] + m;
        return m;
      }
      spacesAndCommentsFromStart(c) {
        let h, m = "";
        for (; c.length && (h = c[0][0], !(h !== "space" && h !== "comment")); )
          m += c.shift()[1];
        return m;
      }
      spacesFromEnd(c) {
        let h, m = "";
        for (; c.length && (h = c[c.length - 1][0], h === "space"); )
          m = c.pop()[1] + m;
        return m;
      }
      stringFrom(c, h) {
        let m = "";
        for (let f = h; f < c.length; f++)
          m += c[f][1];
        return c.splice(h, c.length - h), m;
      }
      colon(c) {
        let h = 0, m, f, d;
        for (let [g, b] of c.entries()) {
          if (m = b, f = m[0], f === "(" && (h += 1), f === ")" && (h -= 1), h === 0 && f === ":")
            if (!d)
              this.doubleColon(m);
            else {
              if (d[0] === "word" && d[1] === "progid")
                continue;
              return g;
            }
          d = m;
        }
        return !1;
      }
      unclosedBracket(c) {
        throw this.input.error("Unclosed bracket", { offset: c[2] }, { offset: c[2] + 1 });
      }
      unknownWord(c) {
        throw this.input.error("Unknown word", { offset: c[0][2] }, { offset: c[0][2] + c[0][1].length });
      }
      unexpectedClose(c) {
        throw this.input.error("Unexpected }", { offset: c[2] }, { offset: c[2] + 1 });
      }
      unclosedBlock() {
        let c = this.current.source.start;
        throw this.input.error("Unclosed block", c.line, c.column);
      }
      doubleColon(c) {
        throw this.input.error("Double colon", { offset: c[2] }, { offset: c[2] + c[1].length });
      }
      unnamedAtrule(c, h) {
        throw this.input.error("At-rule without name", { offset: h[2] }, { offset: h[2] + h[1].length });
      }
      precheckMissedSemicolon() {
      }
      checkMissedSemicolon(c) {
        let h = this.colon(c);
        if (h === !1)
          return;
        let m = 0, f;
        for (let d = h - 1; d >= 0 && (f = c[d], !(f[0] !== "space" && (m += 1, m === 2))); d--)
          ;
        throw this.input.error("Missed semicolon", f[0] === "word" ? f[3] + 1 : f[2]);
      }
    };
    t.exports = p;
  }), It = D((e, t) => {
    var r = Ie(), n = gi(), i = it();
    function o(a, u) {
      let s = new i(a, u), l = new n(s);
      try {
        l.parse();
      } catch (p) {
        throw p;
      }
      return l.root;
    }
    t.exports = o, o.default = o, r.registerParse(o);
  }), Dr = D((e, t) => {
    var { isClean: r, my: n } = Ot(), i = Er(), o = Ze(), a = Ie(), u = _t();
    _r();
    var s = Pt(), l = It(), p = $e(), c = { document: "Document", root: "Root", atrule: "AtRule", rule: "Rule", decl: "Declaration", comment: "Comment" }, h = { postcssPlugin: !0, prepare: !0, Once: !0, Document: !0, Root: !0, Declaration: !0, Rule: !0, AtRule: !0, Comment: !0, DeclarationExit: !0, RuleExit: !0, AtRuleExit: !0, CommentExit: !0, RootExit: !0, DocumentExit: !0, OnceExit: !0 }, m = { postcssPlugin: !0, prepare: !0, Once: !0 }, f = 0;
    function d(y) {
      return typeof y == "object" && typeof y.then == "function";
    }
    function g(y) {
      let w = !1, S = c[y.type];
      return y.type === "decl" ? w = y.prop.toLowerCase() : y.type === "atrule" && (w = y.name.toLowerCase()), w && y.append ? [S, S + "-" + w, f, S + "Exit", S + "Exit-" + w] : w ? [S, S + "-" + w, S + "Exit", S + "Exit-" + w] : y.append ? [S, f, S + "Exit"] : [S, S + "Exit"];
    }
    function b(y) {
      let w;
      return y.type === "document" ? w = ["Document", f, "DocumentExit"] : y.type === "root" ? w = ["Root", f, "RootExit"] : w = g(y), { node: y, events: w, eventIndex: 0, visitors: [], visitorIndex: 0, iterator: 0 };
    }
    function v(y) {
      return y[r] = !1, y.nodes && y.nodes.forEach((w) => v(w)), y;
    }
    var x = {}, k = class {
      constructor(y, w, S) {
        this.stringified = !1, this.processed = !1;
        let O;
        if (typeof w == "object" && w !== null && (w.type === "root" || w.type === "document"))
          O = v(w);
        else if (w instanceof k || w instanceof s)
          O = v(w.root), w.map && (typeof S.map > "u" && (S.map = {}), S.map.inline || (S.map.inline = !1), S.map.prev = w.map);
        else {
          let C = l;
          S.syntax && (C = S.syntax.parse), S.parser && (C = S.parser), C.parse && (C = C.parse);
          try {
            O = C(w, S);
          } catch (A) {
            this.processed = !0, this.error = A;
          }
          O && !O[n] && a.rebuild(O);
        }
        this.result = new s(y, O, S), this.helpers = { ...x, result: this.result, postcss: x }, this.plugins = this.processor.plugins.map((C) => typeof C == "object" && C.prepare ? { ...C, ...C.prepare(this.result) } : C);
      }
      get [Symbol.toStringTag]() {
        return "LazyResult";
      }
      get processor() {
        return this.result.processor;
      }
      get opts() {
        return this.result.opts;
      }
      get css() {
        return this.stringify().css;
      }
      get content() {
        return this.stringify().content;
      }
      get map() {
        return this.stringify().map;
      }
      get root() {
        return this.sync().root;
      }
      get messages() {
        return this.sync().messages;
      }
      warnings() {
        return this.sync().warnings();
      }
      toString() {
        return this.css;
      }
      then(y, w) {
        return this.async().then(y, w);
      }
      catch(y) {
        return this.async().catch(y);
      }
      finally(y) {
        return this.async().then(y, y);
      }
      async() {
        return this.error ? Promise.reject(this.error) : this.processed ? Promise.resolve(this.result) : (this.processing || (this.processing = this.runAsync()), this.processing);
      }
      sync() {
        if (this.error)
          throw this.error;
        if (this.processed)
          return this.result;
        if (this.processed = !0, this.processing)
          throw this.getAsyncError();
        for (let y of this.plugins) {
          let w = this.runOnRoot(y);
          if (d(w))
            throw this.getAsyncError();
        }
        if (this.prepareVisitors(), this.hasListener) {
          let y = this.result.root;
          for (; !y[r]; )
            y[r] = !0, this.walkSync(y);
          if (this.listeners.OnceExit)
            if (y.type === "document")
              for (let w of y.nodes)
                this.visitSync(this.listeners.OnceExit, w);
            else
              this.visitSync(this.listeners.OnceExit, y);
        }
        return this.result;
      }
      stringify() {
        if (this.error)
          throw this.error;
        if (this.stringified)
          return this.result;
        this.stringified = !0, this.sync();
        let y = this.result.opts, w = o;
        y.syntax && (w = y.syntax.stringify), y.stringifier && (w = y.stringifier), w.stringify && (w = w.stringify);
        let S = new i(w, this.result.root, this.result.opts).generate();
        return this.result.css = S[0], this.result.map = S[1], this.result;
      }
      walkSync(y) {
        y[r] = !0;
        let w = g(y);
        for (let S of w)
          if (S === f)
            y.nodes && y.each((O) => {
              O[r] || this.walkSync(O);
            });
          else {
            let O = this.listeners[S];
            if (O && this.visitSync(O, y.toProxy()))
              return;
          }
      }
      visitSync(y, w) {
        for (let [S, O] of y) {
          this.result.lastPlugin = S;
          let C;
          try {
            C = O(w, this.helpers);
          } catch (A) {
            throw this.handleError(A, w.proxyOf);
          }
          if (w.type !== "root" && w.type !== "document" && !w.parent)
            return !0;
          if (d(C))
            throw this.getAsyncError();
        }
      }
      runOnRoot(y) {
        this.result.lastPlugin = y;
        try {
          if (typeof y == "object" && y.Once) {
            if (this.result.root.type === "document") {
              let w = this.result.root.nodes.map((S) => y.Once(S, this.helpers));
              return d(w[0]) ? Promise.all(w) : w;
            }
            return y.Once(this.result.root, this.helpers);
          } else if (typeof y == "function")
            return y(this.result.root, this.result);
        } catch (w) {
          throw this.handleError(w);
        }
      }
      getAsyncError() {
        throw new Error("Use process(css).then(cb) to work with async plugins");
      }
      handleError(y, w) {
        let S = this.result.lastPlugin;
        try {
          w && w.addToError(y), this.error = y, y.name === "CssSyntaxError" && !y.plugin ? (y.plugin = S.postcssPlugin, y.setMessage()) : S.postcssVersion;
        } catch (O) {
          console && console.error && console.error(O);
        }
        return y;
      }
      async runAsync() {
        this.plugin = 0;
        for (let y = 0; y < this.plugins.length; y++) {
          let w = this.plugins[y], S = this.runOnRoot(w);
          if (d(S))
            try {
              await S;
            } catch (O) {
              throw this.handleError(O);
            }
        }
        if (this.prepareVisitors(), this.hasListener) {
          let y = this.result.root;
          for (; !y[r]; ) {
            y[r] = !0;
            let w = [b(y)];
            for (; w.length > 0; ) {
              let S = this.visitTick(w);
              if (d(S))
                try {
                  await S;
                } catch (O) {
                  let C = w[w.length - 1].node;
                  throw this.handleError(O, C);
                }
            }
          }
          if (this.listeners.OnceExit)
            for (let [w, S] of this.listeners.OnceExit) {
              this.result.lastPlugin = w;
              try {
                if (y.type === "document") {
                  let O = y.nodes.map((C) => S(C, this.helpers));
                  await Promise.all(O);
                } else
                  await S(y, this.helpers);
              } catch (O) {
                throw this.handleError(O);
              }
            }
        }
        return this.processed = !0, this.stringify();
      }
      prepareVisitors() {
        this.listeners = {};
        let y = (w, S, O) => {
          this.listeners[S] || (this.listeners[S] = []), this.listeners[S].push([w, O]);
        };
        for (let w of this.plugins)
          if (typeof w == "object")
            for (let S in w) {
              if (!h[S] && /^[A-Z]/.test(S))
                throw new Error(`Unknown event ${S} in ${w.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`);
              if (!m[S])
                if (typeof w[S] == "object")
                  for (let O in w[S])
                    O === "*" ? y(w, S, w[S][O]) : y(w, S + "-" + O.toLowerCase(), w[S][O]);
                else
                  typeof w[S] == "function" && y(w, S, w[S]);
            }
        this.hasListener = Object.keys(this.listeners).length > 0;
      }
      visitTick(y) {
        let w = y[y.length - 1], { node: S, visitors: O } = w;
        if (S.type !== "root" && S.type !== "document" && !S.parent) {
          y.pop();
          return;
        }
        if (O.length > 0 && w.visitorIndex < O.length) {
          let [A, T] = O[w.visitorIndex];
          w.visitorIndex += 1, w.visitorIndex === O.length && (w.visitors = [], w.visitorIndex = 0), this.result.lastPlugin = A;
          try {
            return T(S.toProxy(), this.helpers);
          } catch (F) {
            throw this.handleError(F, S);
          }
        }
        if (w.iterator !== 0) {
          let A = w.iterator, T;
          for (; T = S.nodes[S.indexes[A]]; )
            if (S.indexes[A] += 1, !T[r]) {
              T[r] = !0, y.push(b(T));
              return;
            }
          w.iterator = 0, delete S.indexes[A];
        }
        let C = w.events;
        for (; w.eventIndex < C.length; ) {
          let A = C[w.eventIndex];
          if (w.eventIndex += 1, A === f) {
            S.nodes && S.nodes.length && (S[r] = !0, w.iterator = S.getIterator());
            return;
          } else if (this.listeners[A]) {
            w.visitors = this.listeners[A];
            return;
          }
        }
        y.pop();
      }
    };
    k.registerPostcss = (y) => {
      x = y;
    }, t.exports = k, k.default = k, p.registerLazyResult(k), u.registerLazyResult(k);
  }), vi = D((e, t) => {
    var r = Er(), n = Ze();
    _r();
    var i = It(), o = Pt(), a = class {
      constructor(u, s, l) {
        s = s.toString(), this.stringified = !1, this._processor = u, this._css = s, this._opts = l, this._map = void 0;
        let p, c = n;
        this.result = new o(this._processor, p, this._opts), this.result.css = s;
        let h = this;
        Object.defineProperty(this.result, "root", { get() {
          return h.root;
        } });
        let m = new r(c, p, this._opts, s);
        if (m.isMap()) {
          let [f, d] = m.generate();
          f && (this.result.css = f), d && (this.result.map = d);
        }
      }
      get [Symbol.toStringTag]() {
        return "NoWorkResult";
      }
      get processor() {
        return this.result.processor;
      }
      get opts() {
        return this.result.opts;
      }
      get css() {
        return this.result.css;
      }
      get content() {
        return this.result.css;
      }
      get map() {
        return this.result.map;
      }
      get root() {
        if (this._root)
          return this._root;
        let u, s = i;
        try {
          u = s(this._css, this._opts);
        } catch (l) {
          this.error = l;
        }
        if (this.error)
          throw this.error;
        return this._root = u, u;
      }
      get messages() {
        return [];
      }
      warnings() {
        return [];
      }
      toString() {
        return this._css;
      }
      then(u, s) {
        return this.async().then(u, s);
      }
      catch(u) {
        return this.async().catch(u);
      }
      finally(u) {
        return this.async().then(u, u);
      }
      async() {
        return this.error ? Promise.reject(this.error) : Promise.resolve(this.result);
      }
      sync() {
        if (this.error)
          throw this.error;
        return this.result;
      }
    };
    t.exports = a, a.default = a;
  }), yi = D((e, t) => {
    var r = vi(), n = Dr(), i = _t(), o = $e(), a = class {
      constructor(u = []) {
        this.version = "8.4.18", this.plugins = this.normalize(u);
      }
      use(u) {
        return this.plugins = this.plugins.concat(this.normalize([u])), this;
      }
      process(u, s = {}) {
        return this.plugins.length === 0 && typeof s.parser > "u" && typeof s.stringifier > "u" && typeof s.syntax > "u" ? new r(this, u, s) : new n(this, u, s);
      }
      normalize(u) {
        let s = [];
        for (let l of u)
          if (l.postcss === !0 ? l = l() : l.postcss && (l = l.postcss), typeof l == "object" && Array.isArray(l.plugins))
            s = s.concat(l.plugins);
          else if (typeof l == "object" && l.postcssPlugin)
            s.push(l);
          else if (typeof l == "function")
            s.push(l);
          else if (!(typeof l == "object" && (l.parse || l.stringify)))
            throw new Error(l + " is not a PostCSS plugin");
        return s;
      }
    };
    t.exports = a, a.default = a, o.registerProcessor(a), i.registerProcessor(a);
  }), bi = D((e, t) => {
    var r = et(), n = Tr(), i = ot(), o = jt(), a = it(), u = $e(), s = Dt();
    function l(p, c) {
      if (Array.isArray(p))
        return p.map((f) => l(f));
      let { inputs: h, ...m } = p;
      if (h) {
        c = [];
        for (let f of h) {
          let d = { ...f, __proto__: a.prototype };
          d.map && (d.map = { ...d.map, __proto__: n.prototype }), c.push(d);
        }
      }
      if (m.nodes && (m.nodes = p.nodes.map((f) => l(f, c))), m.source) {
        let { inputId: f, ...d } = m.source;
        m.source = d, f != null && (m.source.input = c[f]);
      }
      if (m.type === "root")
        return new u(m);
      if (m.type === "decl")
        return new r(m);
      if (m.type === "rule")
        return new s(m);
      if (m.type === "comment")
        return new i(m);
      if (m.type === "atrule")
        return new o(m);
      throw new Error("Unknown node type: " + p.type);
    }
    t.exports = l, l.default = l;
  }), Ne = D((e, t) => {
    var r = St(), n = et(), i = Dr(), o = Ie(), a = yi(), u = Ze(), s = bi(), l = _t(), p = Pr(), c = ot(), h = jt(), m = Pt(), f = it(), d = It(), g = jr(), b = Dt(), v = $e(), x = Ke();
    function k(...y) {
      return y.length === 1 && Array.isArray(y[0]) && (y = y[0]), new a(y);
    }
    k.plugin = function(y, w) {
      let S = !1;
      function O(...A) {
        console && console.warn && !S && (S = !0, console.warn(y + `: postcss.plugin was deprecated. Migration guide:
https://evilmartians.com/chronicles/postcss-8-plugin-migration`), process.env.LANG && process.env.LANG.startsWith("cn") && console.warn(y + `: 里面 postcss.plugin 被弃用. 迁移指南:
https://www.w3ctech.com/topic/2226`));
        let T = w(...A);
        return T.postcssPlugin = y, T.postcssVersion = new a().version, T;
      }
      let C;
      return Object.defineProperty(O, "postcss", { get() {
        return C || (C = O()), C;
      } }), O.process = function(A, T, F) {
        return k([O(F)]).process(A, T);
      }, O;
    }, k.stringify = u, k.parse = d, k.fromJSON = s, k.list = g, k.comment = (y) => new c(y), k.atRule = (y) => new h(y), k.decl = (y) => new n(y), k.rule = (y) => new b(y), k.root = (y) => new v(y), k.document = (y) => new l(y), k.CssSyntaxError = r, k.Declaration = n, k.Container = o, k.Processor = a, k.Document = l, k.Comment = c, k.Warning = p, k.AtRule = h, k.Result = m, k.Input = f, k.Rule = b, k.Root = v, k.Node = x, i.registerPostcss(k), t.exports = k, k.default = k;
  }), wi = D((e, t) => {
    var r = class {
      constructor(n = {}) {
        if (!(n.maxSize && n.maxSize > 0))
          throw new TypeError("`maxSize` must be a number greater than 0");
        this.maxSize = n.maxSize, this.onEviction = n.onEviction, this.cache = /* @__PURE__ */ new Map(), this.oldCache = /* @__PURE__ */ new Map(), this._size = 0;
      }
      _set(n, i) {
        if (this.cache.set(n, i), this._size++, this._size >= this.maxSize) {
          if (this._size = 0, typeof this.onEviction == "function")
            for (let [o, a] of this.oldCache.entries())
              this.onEviction(o, a);
          this.oldCache = this.cache, this.cache = /* @__PURE__ */ new Map();
        }
      }
      get(n) {
        if (this.cache.has(n))
          return this.cache.get(n);
        if (this.oldCache.has(n)) {
          let i = this.oldCache.get(n);
          return this.oldCache.delete(n), this._set(n, i), i;
        }
      }
      set(n, i) {
        return this.cache.has(n) ? this.cache.set(n, i) : this._set(n, i), this;
      }
      has(n) {
        return this.cache.has(n) || this.oldCache.has(n);
      }
      peek(n) {
        if (this.cache.has(n))
          return this.cache.get(n);
        if (this.oldCache.has(n))
          return this.oldCache.get(n);
      }
      delete(n) {
        let i = this.cache.delete(n);
        return i && this._size--, this.oldCache.delete(n) || i;
      }
      clear() {
        this.cache.clear(), this.oldCache.clear(), this._size = 0;
      }
      *keys() {
        for (let [n] of this)
          yield n;
      }
      *values() {
        for (let [, n] of this)
          yield n;
      }
      *[Symbol.iterator]() {
        for (let n of this.cache)
          yield n;
        for (let n of this.oldCache) {
          let [i] = n;
          this.cache.has(i) || (yield n);
        }
      }
      get size() {
        let n = 0;
        for (let i of this.oldCache.keys())
          this.cache.has(i) || n++;
        return Math.min(this._size + n, this.maxSize);
      }
    };
    t.exports = r;
  }), Mt = D((e, t) => {
    e.__esModule = !0, e.default = i;
    function r(o) {
      for (var a = o.toLowerCase(), u = "", s = !1, l = 0; l < 6 && a[l] !== void 0; l++) {
        var p = a.charCodeAt(l), c = p >= 97 && p <= 102 || p >= 48 && p <= 57;
        if (s = p === 32, !c)
          break;
        u += a[l];
      }
      if (u.length !== 0) {
        var h = parseInt(u, 16), m = h >= 55296 && h <= 57343;
        return m || h === 0 || h > 1114111 ? ["�", u.length + (s ? 1 : 0)] : [String.fromCodePoint(h), u.length + (s ? 1 : 0)];
      }
    }
    var n = /\\/;
    function i(o) {
      var a = n.test(o);
      if (!a)
        return o;
      for (var u = "", s = 0; s < o.length; s++) {
        if (o[s] === "\\") {
          var l = r(o.slice(s + 1, s + 7));
          if (l !== void 0) {
            u += l[0], s += l[1];
            continue;
          }
          if (o[s + 1] === "\\") {
            u += "\\", s++;
            continue;
          }
          o.length === s + 1 && (u += o[s]);
          continue;
        }
        u += o[s];
      }
      return u;
    }
    t.exports = e.default;
  }), xi = D((e, t) => {
    e.__esModule = !0, e.default = r;
    function r(n) {
      for (var i = arguments.length, o = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++)
        o[a - 1] = arguments[a];
      for (; o.length > 0; ) {
        var u = o.shift();
        if (!n[u])
          return;
        n = n[u];
      }
      return n;
    }
    t.exports = e.default;
  }), ki = D((e, t) => {
    e.__esModule = !0, e.default = r;
    function r(n) {
      for (var i = arguments.length, o = new Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++)
        o[a - 1] = arguments[a];
      for (; o.length > 0; ) {
        var u = o.shift();
        n[u] || (n[u] = {}), n = n[u];
      }
    }
    t.exports = e.default;
  }), Si = D((e, t) => {
    e.__esModule = !0, e.default = r;
    function r(n) {
      for (var i = "", o = n.indexOf("/*"), a = 0; o >= 0; ) {
        i = i + n.slice(a, o);
        var u = n.indexOf("*/", o + 2);
        if (u < 0)
          return i;
        a = u + 2, o = n.indexOf("/*", a);
      }
      return i = i + n.slice(a), i;
    }
    t.exports = e.default;
  }), st = D((e) => {
    e.__esModule = !0, e.stripComments = e.ensureObject = e.getProp = e.unesc = void 0;
    var t = o(Mt());
    e.unesc = t.default;
    var r = o(xi());
    e.getProp = r.default;
    var n = o(ki());
    e.ensureObject = n.default;
    var i = o(Si());
    e.stripComments = i.default;
    function o(a) {
      return a && a.__esModule ? a : { default: a };
    }
  }), Ce = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = st();
    function n(u, s) {
      for (var l = 0; l < s.length; l++) {
        var p = s[l];
        p.enumerable = p.enumerable || !1, p.configurable = !0, "value" in p && (p.writable = !0), Object.defineProperty(u, p.key, p);
      }
    }
    function i(u, s, l) {
      return s && n(u.prototype, s), l && n(u, l), u;
    }
    var o = function u(s, l) {
      if (typeof s != "object" || s === null)
        return s;
      var p = new s.constructor();
      for (var c in s)
        if (s.hasOwnProperty(c)) {
          var h = s[c], m = typeof h;
          c === "parent" && m === "object" ? l && (p[c] = l) : h instanceof Array ? p[c] = h.map(function(f) {
            return u(f, p);
          }) : p[c] = u(h, p);
        }
      return p;
    }, a = function() {
      function u(l) {
        l === void 0 && (l = {}), Object.assign(this, l), this.spaces = this.spaces || {}, this.spaces.before = this.spaces.before || "", this.spaces.after = this.spaces.after || "";
      }
      var s = u.prototype;
      return s.remove = function() {
        return this.parent && this.parent.removeChild(this), this.parent = void 0, this;
      }, s.replaceWith = function() {
        if (this.parent) {
          for (var l in arguments)
            this.parent.insertBefore(this, arguments[l]);
          this.remove();
        }
        return this;
      }, s.next = function() {
        return this.parent.at(this.parent.index(this) + 1);
      }, s.prev = function() {
        return this.parent.at(this.parent.index(this) - 1);
      }, s.clone = function(l) {
        l === void 0 && (l = {});
        var p = o(this);
        for (var c in l)
          p[c] = l[c];
        return p;
      }, s.appendToPropertyAndEscape = function(l, p, c) {
        this.raws || (this.raws = {});
        var h = this[l], m = this.raws[l];
        this[l] = h + p, m || c !== p ? this.raws[l] = (m || h) + c : delete this.raws[l];
      }, s.setPropertyAndEscape = function(l, p, c) {
        this.raws || (this.raws = {}), this[l] = p, this.raws[l] = c;
      }, s.setPropertyWithoutEscape = function(l, p) {
        this[l] = p, this.raws && delete this.raws[l];
      }, s.isAtPosition = function(l, p) {
        if (this.source && this.source.start && this.source.end)
          return !(this.source.start.line > l || this.source.end.line < l || this.source.start.line === l && this.source.start.column > p || this.source.end.line === l && this.source.end.column < p);
      }, s.stringifyProperty = function(l) {
        return this.raws && this.raws[l] || this[l];
      }, s.valueToString = function() {
        return String(this.stringifyProperty("value"));
      }, s.toString = function() {
        return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join("");
      }, i(u, [{ key: "rawSpaceBefore", get: function() {
        var l = this.raws && this.raws.spaces && this.raws.spaces.before;
        return l === void 0 && (l = this.spaces && this.spaces.before), l || "";
      }, set: function(l) {
        (0, r.ensureObject)(this, "raws", "spaces"), this.raws.spaces.before = l;
      } }, { key: "rawSpaceAfter", get: function() {
        var l = this.raws && this.raws.spaces && this.raws.spaces.after;
        return l === void 0 && (l = this.spaces.after), l || "";
      }, set: function(l) {
        (0, r.ensureObject)(this, "raws", "spaces"), this.raws.spaces.after = l;
      } }]), u;
    }();
    e.default = a, t.exports = e.default;
  }), ne = D((e) => {
    e.__esModule = !0, e.UNIVERSAL = e.ATTRIBUTE = e.CLASS = e.COMBINATOR = e.COMMENT = e.ID = e.NESTING = e.PSEUDO = e.ROOT = e.SELECTOR = e.STRING = e.TAG = void 0;
    var t = "tag";
    e.TAG = t;
    var r = "string";
    e.STRING = r;
    var n = "selector";
    e.SELECTOR = n;
    var i = "root";
    e.ROOT = i;
    var o = "pseudo";
    e.PSEUDO = o;
    var a = "nesting";
    e.NESTING = a;
    var u = "id";
    e.ID = u;
    var s = "comment";
    e.COMMENT = s;
    var l = "combinator";
    e.COMBINATOR = l;
    var p = "class";
    e.CLASS = p;
    var c = "attribute";
    e.ATTRIBUTE = c;
    var h = "universal";
    e.UNIVERSAL = h;
  }), Rt = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = a(Ce()), n = o(ne());
    function i() {
      if (typeof WeakMap != "function")
        return null;
      var d = /* @__PURE__ */ new WeakMap();
      return i = function() {
        return d;
      }, d;
    }
    function o(d) {
      if (d && d.__esModule)
        return d;
      if (d === null || typeof d != "object" && typeof d != "function")
        return { default: d };
      var g = i();
      if (g && g.has(d))
        return g.get(d);
      var b = {}, v = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var x in d)
        if (Object.prototype.hasOwnProperty.call(d, x)) {
          var k = v ? Object.getOwnPropertyDescriptor(d, x) : null;
          k && (k.get || k.set) ? Object.defineProperty(b, x, k) : b[x] = d[x];
        }
      return b.default = d, g && g.set(d, b), b;
    }
    function a(d) {
      return d && d.__esModule ? d : { default: d };
    }
    function u(d, g) {
      var b;
      if (typeof Symbol > "u" || d[Symbol.iterator] == null) {
        if (Array.isArray(d) || (b = s(d)) || g && d && typeof d.length == "number") {
          b && (d = b);
          var v = 0;
          return function() {
            return v >= d.length ? { done: !0 } : { done: !1, value: d[v++] };
          };
        }
        throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      }
      return b = d[Symbol.iterator](), b.next.bind(b);
    }
    function s(d, g) {
      if (d) {
        if (typeof d == "string")
          return l(d, g);
        var b = Object.prototype.toString.call(d).slice(8, -1);
        if (b === "Object" && d.constructor && (b = d.constructor.name), b === "Map" || b === "Set")
          return Array.from(d);
        if (b === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(b))
          return l(d, g);
      }
    }
    function l(d, g) {
      (g == null || g > d.length) && (g = d.length);
      for (var b = 0, v = new Array(g); b < g; b++)
        v[b] = d[b];
      return v;
    }
    function p(d, g) {
      for (var b = 0; b < g.length; b++) {
        var v = g[b];
        v.enumerable = v.enumerable || !1, v.configurable = !0, "value" in v && (v.writable = !0), Object.defineProperty(d, v.key, v);
      }
    }
    function c(d, g, b) {
      return g && p(d.prototype, g), b && p(d, b), d;
    }
    function h(d, g) {
      d.prototype = Object.create(g.prototype), d.prototype.constructor = d, m(d, g);
    }
    function m(d, g) {
      return m = Object.setPrototypeOf || function(b, v) {
        return b.__proto__ = v, b;
      }, m(d, g);
    }
    var f = function(d) {
      h(g, d);
      function g(v) {
        var x;
        return x = d.call(this, v) || this, x.nodes || (x.nodes = []), x;
      }
      var b = g.prototype;
      return b.append = function(v) {
        return v.parent = this, this.nodes.push(v), this;
      }, b.prepend = function(v) {
        return v.parent = this, this.nodes.unshift(v), this;
      }, b.at = function(v) {
        return this.nodes[v];
      }, b.index = function(v) {
        return typeof v == "number" ? v : this.nodes.indexOf(v);
      }, b.removeChild = function(v) {
        v = this.index(v), this.at(v).parent = void 0, this.nodes.splice(v, 1);
        var x;
        for (var k in this.indexes)
          x = this.indexes[k], x >= v && (this.indexes[k] = x - 1);
        return this;
      }, b.removeAll = function() {
        for (var v = u(this.nodes), x; !(x = v()).done; ) {
          var k = x.value;
          k.parent = void 0;
        }
        return this.nodes = [], this;
      }, b.empty = function() {
        return this.removeAll();
      }, b.insertAfter = function(v, x) {
        x.parent = this;
        var k = this.index(v);
        this.nodes.splice(k + 1, 0, x), x.parent = this;
        var y;
        for (var w in this.indexes)
          y = this.indexes[w], k <= y && (this.indexes[w] = y + 1);
        return this;
      }, b.insertBefore = function(v, x) {
        x.parent = this;
        var k = this.index(v);
        this.nodes.splice(k, 0, x), x.parent = this;
        var y;
        for (var w in this.indexes)
          y = this.indexes[w], y <= k && (this.indexes[w] = y + 1);
        return this;
      }, b._findChildAtPosition = function(v, x) {
        var k = void 0;
        return this.each(function(y) {
          if (y.atPosition) {
            var w = y.atPosition(v, x);
            if (w)
              return k = w, !1;
          } else if (y.isAtPosition(v, x))
            return k = y, !1;
        }), k;
      }, b.atPosition = function(v, x) {
        if (this.isAtPosition(v, x))
          return this._findChildAtPosition(v, x) || this;
      }, b._inferEndPosition = function() {
        this.last && this.last.source && this.last.source.end && (this.source = this.source || {}, this.source.end = this.source.end || {}, Object.assign(this.source.end, this.last.source.end));
      }, b.each = function(v) {
        this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach++;
        var x = this.lastEach;
        if (this.indexes[x] = 0, !!this.length) {
          for (var k, y; this.indexes[x] < this.length && (k = this.indexes[x], y = v(this.at(k), k), y !== !1); )
            this.indexes[x] += 1;
          if (delete this.indexes[x], y === !1)
            return !1;
        }
      }, b.walk = function(v) {
        return this.each(function(x, k) {
          var y = v(x, k);
          if (y !== !1 && x.length && (y = x.walk(v)), y === !1)
            return !1;
        });
      }, b.walkAttributes = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.ATTRIBUTE)
            return v.call(x, k);
        });
      }, b.walkClasses = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.CLASS)
            return v.call(x, k);
        });
      }, b.walkCombinators = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.COMBINATOR)
            return v.call(x, k);
        });
      }, b.walkComments = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.COMMENT)
            return v.call(x, k);
        });
      }, b.walkIds = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.ID)
            return v.call(x, k);
        });
      }, b.walkNesting = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.NESTING)
            return v.call(x, k);
        });
      }, b.walkPseudos = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.PSEUDO)
            return v.call(x, k);
        });
      }, b.walkTags = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.TAG)
            return v.call(x, k);
        });
      }, b.walkUniversals = function(v) {
        var x = this;
        return this.walk(function(k) {
          if (k.type === n.UNIVERSAL)
            return v.call(x, k);
        });
      }, b.split = function(v) {
        var x = this, k = [];
        return this.reduce(function(y, w, S) {
          var O = v.call(x, w);
          return k.push(w), O ? (y.push(k), k = []) : S === x.length - 1 && y.push(k), y;
        }, []);
      }, b.map = function(v) {
        return this.nodes.map(v);
      }, b.reduce = function(v, x) {
        return this.nodes.reduce(v, x);
      }, b.every = function(v) {
        return this.nodes.every(v);
      }, b.some = function(v) {
        return this.nodes.some(v);
      }, b.filter = function(v) {
        return this.nodes.filter(v);
      }, b.sort = function(v) {
        return this.nodes.sort(v);
      }, b.toString = function() {
        return this.map(String).join("");
      }, c(g, [{ key: "first", get: function() {
        return this.at(0);
      } }, { key: "last", get: function() {
        return this.at(this.length - 1);
      } }, { key: "length", get: function() {
        return this.nodes.length;
      } }]), g;
    }(r.default);
    e.default = f, t.exports = e.default;
  }), Ir = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Rt()), n = ne();
    function i(p) {
      return p && p.__esModule ? p : { default: p };
    }
    function o(p, c) {
      for (var h = 0; h < c.length; h++) {
        var m = c[h];
        m.enumerable = m.enumerable || !1, m.configurable = !0, "value" in m && (m.writable = !0), Object.defineProperty(p, m.key, m);
      }
    }
    function a(p, c, h) {
      return c && o(p.prototype, c), h && o(p, h), p;
    }
    function u(p, c) {
      p.prototype = Object.create(c.prototype), p.prototype.constructor = p, s(p, c);
    }
    function s(p, c) {
      return s = Object.setPrototypeOf || function(h, m) {
        return h.__proto__ = m, h;
      }, s(p, c);
    }
    var l = function(p) {
      u(c, p);
      function c(m) {
        var f;
        return f = p.call(this, m) || this, f.type = n.ROOT, f;
      }
      var h = c.prototype;
      return h.toString = function() {
        var m = this.reduce(function(f, d) {
          return f.push(String(d)), f;
        }, []).join(",");
        return this.trailingComma ? m + "," : m;
      }, h.error = function(m, f) {
        return this._error ? this._error(m, f) : new Error(m);
      }, a(c, [{ key: "errorGenerator", set: function(m) {
        this._error = m;
      } }]), c;
    }(r.default);
    e.default = l, t.exports = e.default;
  }), Mr = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Rt()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(p) {
        var c;
        return c = s.call(this, p) || this, c.type = n.SELECTOR, c;
      }
      return l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Ut = D((e, t) => {
    var r = {}, n = r.hasOwnProperty, i = function(l, p) {
      if (!l)
        return p;
      var c = {};
      for (var h in p)
        c[h] = n.call(l, h) ? l[h] : p[h];
      return c;
    }, o = /[ -,\.\/:-@\[-\^`\{-~]/, a = /[ -,\.\/:-@\[\]\^`\{-~]/, u = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g, s = function l(p, c) {
      c = i(c, l.options), c.quotes != "single" && c.quotes != "double" && (c.quotes = "single");
      for (var h = c.quotes == "double" ? '"' : "'", m = c.isIdentifier, f = p.charAt(0), d = "", g = 0, b = p.length; g < b; ) {
        var v = p.charAt(g++), x = v.charCodeAt(), k = void 0;
        if (x < 32 || x > 126) {
          if (x >= 55296 && x <= 56319 && g < b) {
            var y = p.charCodeAt(g++);
            (y & 64512) == 56320 ? x = ((x & 1023) << 10) + (y & 1023) + 65536 : g--;
          }
          k = "\\" + x.toString(16).toUpperCase() + " ";
        } else
          c.escapeEverything ? o.test(v) ? k = "\\" + v : k = "\\" + x.toString(16).toUpperCase() + " " : /[\t\n\f\r\x0B]/.test(v) ? k = "\\" + x.toString(16).toUpperCase() + " " : v == "\\" || !m && (v == '"' && h == v || v == "'" && h == v) || m && a.test(v) ? k = "\\" + v : k = v;
        d += k;
      }
      return m && (/^-[-\d]/.test(d) ? d = "\\-" + d.slice(1) : /\d/.test(f) && (d = "\\3" + f + " " + d.slice(1))), d = d.replace(u, function(w, S, O) {
        return S && S.length % 2 ? w : (S || "") + O;
      }), !m && c.wrap ? h + d + h : d;
    };
    s.options = { escapeEverything: !1, isIdentifier: !1, quotes: "single", wrap: !1 }, s.version = "3.0.0", t.exports = s;
  }), Rr = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = a(Ut()), n = st(), i = a(Ce()), o = ne();
    function a(h) {
      return h && h.__esModule ? h : { default: h };
    }
    function u(h, m) {
      for (var f = 0; f < m.length; f++) {
        var d = m[f];
        d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(h, d.key, d);
      }
    }
    function s(h, m, f) {
      return m && u(h.prototype, m), f && u(h, f), h;
    }
    function l(h, m) {
      h.prototype = Object.create(m.prototype), h.prototype.constructor = h, p(h, m);
    }
    function p(h, m) {
      return p = Object.setPrototypeOf || function(f, d) {
        return f.__proto__ = d, f;
      }, p(h, m);
    }
    var c = function(h) {
      l(m, h);
      function m(d) {
        var g;
        return g = h.call(this, d) || this, g.type = o.CLASS, g._constructed = !0, g;
      }
      var f = m.prototype;
      return f.valueToString = function() {
        return "." + h.prototype.valueToString.call(this);
      }, s(m, [{ key: "value", get: function() {
        return this._value;
      }, set: function(d) {
        if (this._constructed) {
          var g = (0, r.default)(d, { isIdentifier: !0 });
          g !== d ? ((0, n.ensureObject)(this, "raws"), this.raws.value = g) : this.raws && delete this.raws.value;
        }
        this._value = d;
      } }]), m;
    }(i.default);
    e.default = c, t.exports = e.default;
  }), Ur = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Ce()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(p) {
        var c;
        return c = s.call(this, p) || this, c.type = n.COMMENT, c;
      }
      return l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Fr = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Ce()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(c) {
        var h;
        return h = s.call(this, c) || this, h.type = n.ID, h;
      }
      var p = l.prototype;
      return p.valueToString = function() {
        return "#" + s.prototype.valueToString.call(this);
      }, l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Ft = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = o(Ut()), n = st(), i = o(Ce());
    function o(c) {
      return c && c.__esModule ? c : { default: c };
    }
    function a(c, h) {
      for (var m = 0; m < h.length; m++) {
        var f = h[m];
        f.enumerable = f.enumerable || !1, f.configurable = !0, "value" in f && (f.writable = !0), Object.defineProperty(c, f.key, f);
      }
    }
    function u(c, h, m) {
      return h && a(c.prototype, h), m && a(c, m), c;
    }
    function s(c, h) {
      c.prototype = Object.create(h.prototype), c.prototype.constructor = c, l(c, h);
    }
    function l(c, h) {
      return l = Object.setPrototypeOf || function(m, f) {
        return m.__proto__ = f, m;
      }, l(c, h);
    }
    var p = function(c) {
      s(h, c);
      function h() {
        return c.apply(this, arguments) || this;
      }
      var m = h.prototype;
      return m.qualifiedName = function(f) {
        return this.namespace ? this.namespaceString + "|" + f : f;
      }, m.valueToString = function() {
        return this.qualifiedName(c.prototype.valueToString.call(this));
      }, u(h, [{ key: "namespace", get: function() {
        return this._namespace;
      }, set: function(f) {
        if (f === !0 || f === "*" || f === "&") {
          this._namespace = f, this.raws && delete this.raws.namespace;
          return;
        }
        var d = (0, r.default)(f, { isIdentifier: !0 });
        this._namespace = f, d !== f ? ((0, n.ensureObject)(this, "raws"), this.raws.namespace = d) : this.raws && delete this.raws.namespace;
      } }, { key: "ns", get: function() {
        return this._namespace;
      }, set: function(f) {
        this.namespace = f;
      } }, { key: "namespaceString", get: function() {
        if (this.namespace) {
          var f = this.stringifyProperty("namespace");
          return f === !0 ? "" : f;
        } else
          return "";
      } }]), h;
    }(i.default);
    e.default = p, t.exports = e.default;
  }), Lr = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Ft()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(p) {
        var c;
        return c = s.call(this, p) || this, c.type = n.TAG, c;
      }
      return l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), $r = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Ce()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(p) {
        var c;
        return c = s.call(this, p) || this, c.type = n.STRING, c;
      }
      return l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Nr = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Rt()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(c) {
        var h;
        return h = s.call(this, c) || this, h.type = n.PSEUDO, h;
      }
      var p = l.prototype;
      return p.toString = function() {
        var c = this.length ? "(" + this.map(String).join(",") + ")" : "";
        return [this.rawSpaceBefore, this.stringifyProperty("value"), c, this.rawSpaceAfter].join("");
      }, l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Oi = D((e, t) => {
    t.exports = r;
    function r(i, o) {
      if (n("noDeprecation"))
        return i;
      var a = !1;
      function u() {
        if (!a) {
          if (n("throwDeprecation"))
            throw new Error(o);
          n("traceDeprecation") ? console.trace(o) : console.warn(o), a = !0;
        }
        return i.apply(this, arguments);
      }
      return u;
    }
    function n(i) {
      try {
        if (!global.localStorage)
          return !1;
      } catch {
        return !1;
      }
      var o = global.localStorage[i];
      return o == null ? !1 : String(o).toLowerCase() === "true";
    }
  }), zr = D((e) => {
    e.__esModule = !0, e.unescapeValue = g, e.default = void 0;
    var t = a(Ut()), r = a(Mt()), n = a(Ft()), i = ne(), o;
    function a(y) {
      return y && y.__esModule ? y : { default: y };
    }
    function u(y, w) {
      for (var S = 0; S < w.length; S++) {
        var O = w[S];
        O.enumerable = O.enumerable || !1, O.configurable = !0, "value" in O && (O.writable = !0), Object.defineProperty(y, O.key, O);
      }
    }
    function s(y, w, S) {
      return w && u(y.prototype, w), S && u(y, S), y;
    }
    function l(y, w) {
      y.prototype = Object.create(w.prototype), y.prototype.constructor = y, p(y, w);
    }
    function p(y, w) {
      return p = Object.setPrototypeOf || function(S, O) {
        return S.__proto__ = O, S;
      }, p(y, w);
    }
    var c = Oi(), h = /^('|")([^]*)\1$/, m = c(function() {
    }, "Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead."), f = c(function() {
    }, "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead."), d = c(function() {
    }, "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.");
    function g(y) {
      var w = !1, S = null, O = y, C = O.match(h);
      return C && (S = C[1], O = C[2]), O = (0, r.default)(O), O !== y && (w = !0), { deprecatedUsage: w, unescaped: O, quoteMark: S };
    }
    function b(y) {
      if (y.quoteMark !== void 0 || y.value === void 0)
        return y;
      d();
      var w = g(y.value), S = w.quoteMark, O = w.unescaped;
      return y.raws || (y.raws = {}), y.raws.value === void 0 && (y.raws.value = y.value), y.value = O, y.quoteMark = S, y;
    }
    var v = function(y) {
      l(w, y);
      function w(O) {
        var C;
        return O === void 0 && (O = {}), C = y.call(this, b(O)) || this, C.type = i.ATTRIBUTE, C.raws = C.raws || {}, Object.defineProperty(C.raws, "unquoted", { get: c(function() {
          return C.value;
        }, "attr.raws.unquoted is deprecated. Call attr.value instead."), set: c(function() {
          return C.value;
        }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.") }), C._constructed = !0, C;
      }
      var S = w.prototype;
      return S.getQuotedValue = function(O) {
        O === void 0 && (O = {});
        var C = this._determineQuoteMark(O), A = x[C], T = (0, t.default)(this._value, A);
        return T;
      }, S._determineQuoteMark = function(O) {
        return O.smart ? this.smartQuoteMark(O) : this.preferredQuoteMark(O);
      }, S.setValue = function(O, C) {
        C === void 0 && (C = {}), this._value = O, this._quoteMark = this._determineQuoteMark(C), this._syncRawValue();
      }, S.smartQuoteMark = function(O) {
        var C = this.value, A = C.replace(/[^']/g, "").length, T = C.replace(/[^"]/g, "").length;
        if (A + T === 0) {
          var F = (0, t.default)(C, { isIdentifier: !0 });
          if (F === C)
            return w.NO_QUOTE;
          var U = this.preferredQuoteMark(O);
          if (U === w.NO_QUOTE) {
            var j = this.quoteMark || O.quoteMark || w.DOUBLE_QUOTE, $ = x[j], L = (0, t.default)(C, $);
            if (L.length < F.length)
              return j;
          }
          return U;
        } else
          return T === A ? this.preferredQuoteMark(O) : T < A ? w.DOUBLE_QUOTE : w.SINGLE_QUOTE;
      }, S.preferredQuoteMark = function(O) {
        var C = O.preferCurrentQuoteMark ? this.quoteMark : O.quoteMark;
        return C === void 0 && (C = O.preferCurrentQuoteMark ? O.quoteMark : this.quoteMark), C === void 0 && (C = w.DOUBLE_QUOTE), C;
      }, S._syncRawValue = function() {
        var O = (0, t.default)(this._value, x[this.quoteMark]);
        O === this._value ? this.raws && delete this.raws.value : this.raws.value = O;
      }, S._handleEscapes = function(O, C) {
        if (this._constructed) {
          var A = (0, t.default)(C, { isIdentifier: !0 });
          A !== C ? this.raws[O] = A : delete this.raws[O];
        }
      }, S._spacesFor = function(O) {
        var C = { before: "", after: "" }, A = this.spaces[O] || {}, T = this.raws.spaces && this.raws.spaces[O] || {};
        return Object.assign(C, A, T);
      }, S._stringFor = function(O, C, A) {
        C === void 0 && (C = O), A === void 0 && (A = k);
        var T = this._spacesFor(C);
        return A(this.stringifyProperty(O), T);
      }, S.offsetOf = function(O) {
        var C = 1, A = this._spacesFor("attribute");
        if (C += A.before.length, O === "namespace" || O === "ns")
          return this.namespace ? C : -1;
        if (O === "attributeNS" || (C += this.namespaceString.length, this.namespace && (C += 1), O === "attribute"))
          return C;
        C += this.stringifyProperty("attribute").length, C += A.after.length;
        var T = this._spacesFor("operator");
        C += T.before.length;
        var F = this.stringifyProperty("operator");
        if (O === "operator")
          return F ? C : -1;
        C += F.length, C += T.after.length;
        var U = this._spacesFor("value");
        C += U.before.length;
        var j = this.stringifyProperty("value");
        if (O === "value")
          return j ? C : -1;
        C += j.length, C += U.after.length;
        var $ = this._spacesFor("insensitive");
        return C += $.before.length, O === "insensitive" && this.insensitive ? C : -1;
      }, S.toString = function() {
        var O = this, C = [this.rawSpaceBefore, "["];
        return C.push(this._stringFor("qualifiedAttribute", "attribute")), this.operator && (this.value || this.value === "") && (C.push(this._stringFor("operator")), C.push(this._stringFor("value")), C.push(this._stringFor("insensitiveFlag", "insensitive", function(A, T) {
          return A.length > 0 && !O.quoted && T.before.length === 0 && !(O.spaces.value && O.spaces.value.after) && (T.before = " "), k(A, T);
        }))), C.push("]"), C.push(this.rawSpaceAfter), C.join("");
      }, s(w, [{ key: "quoted", get: function() {
        var O = this.quoteMark;
        return O === "'" || O === '"';
      }, set: function(O) {
        f();
      } }, { key: "quoteMark", get: function() {
        return this._quoteMark;
      }, set: function(O) {
        if (!this._constructed) {
          this._quoteMark = O;
          return;
        }
        this._quoteMark !== O && (this._quoteMark = O, this._syncRawValue());
      } }, { key: "qualifiedAttribute", get: function() {
        return this.qualifiedName(this.raws.attribute || this.attribute);
      } }, { key: "insensitiveFlag", get: function() {
        return this.insensitive ? "i" : "";
      } }, { key: "value", get: function() {
        return this._value;
      }, set: function(O) {
        if (this._constructed) {
          var C = g(O), A = C.deprecatedUsage, T = C.unescaped, F = C.quoteMark;
          if (A && m(), T === this._value && F === this._quoteMark)
            return;
          this._value = T, this._quoteMark = F, this._syncRawValue();
        } else
          this._value = O;
      } }, { key: "insensitive", get: function() {
        return this._insensitive;
      }, set: function(O) {
        O || (this._insensitive = !1, this.raws && (this.raws.insensitiveFlag === "I" || this.raws.insensitiveFlag === "i") && (this.raws.insensitiveFlag = void 0)), this._insensitive = O;
      } }, { key: "attribute", get: function() {
        return this._attribute;
      }, set: function(O) {
        this._handleEscapes("attribute", O), this._attribute = O;
      } }]), w;
    }(n.default);
    e.default = v, v.NO_QUOTE = null, v.SINGLE_QUOTE = "'", v.DOUBLE_QUOTE = '"';
    var x = (o = { "'": { quotes: "single", wrap: !0 }, '"': { quotes: "double", wrap: !0 } }, o[null] = { isIdentifier: !0 }, o);
    function k(y, w) {
      return "" + w.before + y + w.after;
    }
  }), Wr = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Ft()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(p) {
        var c;
        return c = s.call(this, p) || this, c.type = n.UNIVERSAL, c.value = "*", c;
      }
      return l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Br = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Ce()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(p) {
        var c;
        return c = s.call(this, p) || this, c.type = n.COMBINATOR, c;
      }
      return l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Vr = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = i(Ce()), n = ne();
    function i(s) {
      return s && s.__esModule ? s : { default: s };
    }
    function o(s, l) {
      s.prototype = Object.create(l.prototype), s.prototype.constructor = s, a(s, l);
    }
    function a(s, l) {
      return a = Object.setPrototypeOf || function(p, c) {
        return p.__proto__ = c, p;
      }, a(s, l);
    }
    var u = function(s) {
      o(l, s);
      function l(p) {
        var c;
        return c = s.call(this, p) || this, c.type = n.NESTING, c.value = "&", c;
      }
      return l;
    }(r.default);
    e.default = u, t.exports = e.default;
  }), Ci = D((e, t) => {
    e.__esModule = !0, e.default = r;
    function r(n) {
      return n.sort(function(i, o) {
        return i - o;
      });
    }
    t.exports = e.default;
  }), qr = D((e) => {
    e.__esModule = !0, e.combinator = e.word = e.comment = e.str = e.tab = e.newline = e.feed = e.cr = e.backslash = e.bang = e.slash = e.doubleQuote = e.singleQuote = e.space = e.greaterThan = e.pipe = e.equals = e.plus = e.caret = e.tilde = e.dollar = e.closeSquare = e.openSquare = e.closeParenthesis = e.openParenthesis = e.semicolon = e.colon = e.comma = e.at = e.asterisk = e.ampersand = void 0;
    var t = 38;
    e.ampersand = t;
    var r = 42;
    e.asterisk = r;
    var n = 64;
    e.at = n;
    var i = 44;
    e.comma = i;
    var o = 58;
    e.colon = o;
    var a = 59;
    e.semicolon = a;
    var u = 40;
    e.openParenthesis = u;
    var s = 41;
    e.closeParenthesis = s;
    var l = 91;
    e.openSquare = l;
    var p = 93;
    e.closeSquare = p;
    var c = 36;
    e.dollar = c;
    var h = 126;
    e.tilde = h;
    var m = 94;
    e.caret = m;
    var f = 43;
    e.plus = f;
    var d = 61;
    e.equals = d;
    var g = 124;
    e.pipe = g;
    var b = 62;
    e.greaterThan = b;
    var v = 32;
    e.space = v;
    var x = 39;
    e.singleQuote = x;
    var k = 34;
    e.doubleQuote = k;
    var y = 47;
    e.slash = y;
    var w = 33;
    e.bang = w;
    var S = 92;
    e.backslash = S;
    var O = 13;
    e.cr = O;
    var C = 12;
    e.feed = C;
    var A = 10;
    e.newline = A;
    var T = 9;
    e.tab = T;
    var F = x;
    e.str = F;
    var U = -1;
    e.comment = U;
    var j = -2;
    e.word = j;
    var $ = -3;
    e.combinator = $;
  }), Ai = D((e) => {
    e.__esModule = !0, e.default = f, e.FIELDS = void 0;
    var t = o(qr()), r, n;
    function i() {
      if (typeof WeakMap != "function")
        return null;
      var d = /* @__PURE__ */ new WeakMap();
      return i = function() {
        return d;
      }, d;
    }
    function o(d) {
      if (d && d.__esModule)
        return d;
      if (d === null || typeof d != "object" && typeof d != "function")
        return { default: d };
      var g = i();
      if (g && g.has(d))
        return g.get(d);
      var b = {}, v = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var x in d)
        if (Object.prototype.hasOwnProperty.call(d, x)) {
          var k = v ? Object.getOwnPropertyDescriptor(d, x) : null;
          k && (k.get || k.set) ? Object.defineProperty(b, x, k) : b[x] = d[x];
        }
      return b.default = d, g && g.set(d, b), b;
    }
    var a = (r = {}, r[t.tab] = !0, r[t.newline] = !0, r[t.cr] = !0, r[t.feed] = !0, r), u = (n = {}, n[t.space] = !0, n[t.tab] = !0, n[t.newline] = !0, n[t.cr] = !0, n[t.feed] = !0, n[t.ampersand] = !0, n[t.asterisk] = !0, n[t.bang] = !0, n[t.comma] = !0, n[t.colon] = !0, n[t.semicolon] = !0, n[t.openParenthesis] = !0, n[t.closeParenthesis] = !0, n[t.openSquare] = !0, n[t.closeSquare] = !0, n[t.singleQuote] = !0, n[t.doubleQuote] = !0, n[t.plus] = !0, n[t.pipe] = !0, n[t.tilde] = !0, n[t.greaterThan] = !0, n[t.equals] = !0, n[t.dollar] = !0, n[t.caret] = !0, n[t.slash] = !0, n), s = {}, l = "0123456789abcdefABCDEF";
    for (p = 0; p < l.length; p++)
      s[l.charCodeAt(p)] = !0;
    var p;
    function c(d, g) {
      var b = g, v;
      do {
        if (v = d.charCodeAt(b), u[v])
          return b - 1;
        v === t.backslash ? b = h(d, b) + 1 : b++;
      } while (b < d.length);
      return b - 1;
    }
    function h(d, g) {
      var b = g, v = d.charCodeAt(b + 1);
      if (!a[v])
        if (s[v]) {
          var x = 0;
          do
            b++, x++, v = d.charCodeAt(b + 1);
          while (s[v] && x < 6);
          x < 6 && v === t.space && b++;
        } else
          b++;
      return b;
    }
    var m = { TYPE: 0, START_LINE: 1, START_COL: 2, END_LINE: 3, END_COL: 4, START_POS: 5, END_POS: 6 };
    e.FIELDS = m;
    function f(d) {
      var g = [], b = d.css.valueOf(), v = b, x = v.length, k = -1, y = 1, w = 0, S = 0, O, C, A, T, F, U, j, $, L, H, G, pe, ce;
      function I(M, E) {
        if (d.safe)
          b += E, L = b.length - 1;
        else
          throw d.error("Unclosed " + M, y, w - k, w);
      }
      for (; w < x; ) {
        switch (O = b.charCodeAt(w), O === t.newline && (k = w, y += 1), O) {
          case t.space:
          case t.tab:
          case t.newline:
          case t.cr:
          case t.feed:
            L = w;
            do
              L += 1, O = b.charCodeAt(L), O === t.newline && (k = L, y += 1);
            while (O === t.space || O === t.newline || O === t.tab || O === t.cr || O === t.feed);
            ce = t.space, T = y, A = L - k - 1, S = L;
            break;
          case t.plus:
          case t.greaterThan:
          case t.tilde:
          case t.pipe:
            L = w;
            do
              L += 1, O = b.charCodeAt(L);
            while (O === t.plus || O === t.greaterThan || O === t.tilde || O === t.pipe);
            ce = t.combinator, T = y, A = w - k, S = L;
            break;
          case t.asterisk:
          case t.ampersand:
          case t.bang:
          case t.comma:
          case t.equals:
          case t.dollar:
          case t.caret:
          case t.openSquare:
          case t.closeSquare:
          case t.colon:
          case t.semicolon:
          case t.openParenthesis:
          case t.closeParenthesis:
            L = w, ce = O, T = y, A = w - k, S = L + 1;
            break;
          case t.singleQuote:
          case t.doubleQuote:
            pe = O === t.singleQuote ? "'" : '"', L = w;
            do
              for (F = !1, L = b.indexOf(pe, L + 1), L === -1 && I("quote", pe), U = L; b.charCodeAt(U - 1) === t.backslash; )
                U -= 1, F = !F;
            while (F);
            ce = t.str, T = y, A = w - k, S = L + 1;
            break;
          default:
            O === t.slash && b.charCodeAt(w + 1) === t.asterisk ? (L = b.indexOf("*/", w + 2) + 1, L === 0 && I("comment", "*/"), C = b.slice(w, L + 1), $ = C.split(`
`), j = $.length - 1, j > 0 ? (H = y + j, G = L - $[j].length) : (H = y, G = k), ce = t.comment, y = H, T = H, A = L - G) : O === t.slash ? (L = w, ce = O, T = y, A = w - k, S = L + 1) : (L = c(b, w), ce = t.word, T = y, A = L - k), S = L + 1;
            break;
        }
        g.push([ce, y, w - k, T, A, w, S]), G && (k = G, G = null), w = S;
      }
      return g;
    }
  }), Ti = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = S(Ir()), n = S(Mr()), i = S(Rr()), o = S(Ur()), a = S(Fr()), u = S(Lr()), s = S($r()), l = S(Nr()), p = w(zr()), c = S(Wr()), h = S(Br()), m = S(Vr()), f = S(Ci()), d = w(Ai()), g = w(qr()), b = w(ne()), v = st(), x, k;
    function y() {
      if (typeof WeakMap != "function")
        return null;
      var I = /* @__PURE__ */ new WeakMap();
      return y = function() {
        return I;
      }, I;
    }
    function w(I) {
      if (I && I.__esModule)
        return I;
      if (I === null || typeof I != "object" && typeof I != "function")
        return { default: I };
      var M = y();
      if (M && M.has(I))
        return M.get(I);
      var E = {}, _ = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var N in I)
        if (Object.prototype.hasOwnProperty.call(I, N)) {
          var P = _ ? Object.getOwnPropertyDescriptor(I, N) : null;
          P && (P.get || P.set) ? Object.defineProperty(E, N, P) : E[N] = I[N];
        }
      return E.default = I, M && M.set(I, E), E;
    }
    function S(I) {
      return I && I.__esModule ? I : { default: I };
    }
    function O(I, M) {
      for (var E = 0; E < M.length; E++) {
        var _ = M[E];
        _.enumerable = _.enumerable || !1, _.configurable = !0, "value" in _ && (_.writable = !0), Object.defineProperty(I, _.key, _);
      }
    }
    function C(I, M, E) {
      return M && O(I.prototype, M), E && O(I, E), I;
    }
    var A = (x = {}, x[g.space] = !0, x[g.cr] = !0, x[g.feed] = !0, x[g.newline] = !0, x[g.tab] = !0, x), T = Object.assign({}, A, (k = {}, k[g.comment] = !0, k));
    function F(I) {
      return { line: I[d.FIELDS.START_LINE], column: I[d.FIELDS.START_COL] };
    }
    function U(I) {
      return { line: I[d.FIELDS.END_LINE], column: I[d.FIELDS.END_COL] };
    }
    function j(I, M, E, _) {
      return { start: { line: I, column: M }, end: { line: E, column: _ } };
    }
    function $(I) {
      return j(I[d.FIELDS.START_LINE], I[d.FIELDS.START_COL], I[d.FIELDS.END_LINE], I[d.FIELDS.END_COL]);
    }
    function L(I, M) {
      if (I)
        return j(I[d.FIELDS.START_LINE], I[d.FIELDS.START_COL], M[d.FIELDS.END_LINE], M[d.FIELDS.END_COL]);
    }
    function H(I, M) {
      var E = I[M];
      if (typeof E == "string")
        return E.indexOf("\\") !== -1 && ((0, v.ensureObject)(I, "raws"), I[M] = (0, v.unesc)(E), I.raws[M] === void 0 && (I.raws[M] = E)), I;
    }
    function G(I, M) {
      for (var E = -1, _ = []; (E = I.indexOf(M, E + 1)) !== -1; )
        _.push(E);
      return _;
    }
    function pe() {
      var I = Array.prototype.concat.apply([], arguments);
      return I.filter(function(M, E) {
        return E === I.indexOf(M);
      });
    }
    var ce = function() {
      function I(E, _) {
        _ === void 0 && (_ = {}), this.rule = E, this.options = Object.assign({ lossy: !1, safe: !1 }, _), this.position = 0, this.css = typeof this.rule == "string" ? this.rule : this.rule.selector, this.tokens = (0, d.default)({ css: this.css, error: this._errorGenerator(), safe: this.options.safe });
        var N = L(this.tokens[0], this.tokens[this.tokens.length - 1]);
        this.root = new r.default({ source: N }), this.root.errorGenerator = this._errorGenerator();
        var P = new n.default({ source: { start: { line: 1, column: 1 } } });
        this.root.append(P), this.current = P, this.loop();
      }
      var M = I.prototype;
      return M._errorGenerator = function() {
        var E = this;
        return function(_, N) {
          return typeof E.rule == "string" ? new Error(_) : E.rule.error(_, N);
        };
      }, M.attribute = function() {
        var E = [], _ = this.currToken;
        for (this.position++; this.position < this.tokens.length && this.currToken[d.FIELDS.TYPE] !== g.closeSquare; )
          E.push(this.currToken), this.position++;
        if (this.currToken[d.FIELDS.TYPE] !== g.closeSquare)
          return this.expected("closing square bracket", this.currToken[d.FIELDS.START_POS]);
        var N = E.length, P = { source: j(_[1], _[2], this.currToken[3], this.currToken[4]), sourceIndex: _[d.FIELDS.START_POS] };
        if (N === 1 && !~[g.word].indexOf(E[0][d.FIELDS.TYPE]))
          return this.expected("attribute", E[0][d.FIELDS.START_POS]);
        for (var B = 0, q = "", V = "", z = null, Q = !1; B < N; ) {
          var X = E[B], W = this.content(X), Z = E[B + 1];
          switch (X[d.FIELDS.TYPE]) {
            case g.space:
              if (Q = !0, this.options.lossy)
                break;
              if (z) {
                (0, v.ensureObject)(P, "spaces", z);
                var Oe = P.spaces[z].after || "";
                P.spaces[z].after = Oe + W;
                var ke = (0, v.getProp)(P, "raws", "spaces", z, "after") || null;
                ke && (P.raws.spaces[z].after = ke + W);
              } else
                q = q + W, V = V + W;
              break;
            case g.asterisk:
              if (Z[d.FIELDS.TYPE] === g.equals)
                P.operator = W, z = "operator";
              else if ((!P.namespace || z === "namespace" && !Q) && Z) {
                q && ((0, v.ensureObject)(P, "spaces", "attribute"), P.spaces.attribute.before = q, q = ""), V && ((0, v.ensureObject)(P, "raws", "spaces", "attribute"), P.raws.spaces.attribute.before = q, V = ""), P.namespace = (P.namespace || "") + W;
                var ue = (0, v.getProp)(P, "raws", "namespace") || null;
                ue && (P.raws.namespace += W), z = "namespace";
              }
              Q = !1;
              break;
            case g.dollar:
              if (z === "value") {
                var ie = (0, v.getProp)(P, "raws", "value");
                P.value += "$", ie && (P.raws.value = ie + "$");
                break;
              }
            case g.caret:
              Z[d.FIELDS.TYPE] === g.equals && (P.operator = W, z = "operator"), Q = !1;
              break;
            case g.combinator:
              if (W === "~" && Z[d.FIELDS.TYPE] === g.equals && (P.operator = W, z = "operator"), W !== "|") {
                Q = !1;
                break;
              }
              Z[d.FIELDS.TYPE] === g.equals ? (P.operator = W, z = "operator") : !P.namespace && !P.attribute && (P.namespace = !0), Q = !1;
              break;
            case g.word:
              if (Z && this.content(Z) === "|" && E[B + 2] && E[B + 2][d.FIELDS.TYPE] !== g.equals && !P.operator && !P.namespace)
                P.namespace = W, z = "namespace";
              else if (!P.attribute || z === "attribute" && !Q) {
                q && ((0, v.ensureObject)(P, "spaces", "attribute"), P.spaces.attribute.before = q, q = ""), V && ((0, v.ensureObject)(P, "raws", "spaces", "attribute"), P.raws.spaces.attribute.before = V, V = ""), P.attribute = (P.attribute || "") + W;
                var ye = (0, v.getProp)(P, "raws", "attribute") || null;
                ye && (P.raws.attribute += W), z = "attribute";
              } else if (!P.value && P.value !== "" || z === "value" && !(Q || P.quoteMark)) {
                var be = (0, v.unesc)(W), je = (0, v.getProp)(P, "raws", "value") || "", xt = P.value || "";
                P.value = xt + be, P.quoteMark = null, (be !== W || je) && ((0, v.ensureObject)(P, "raws"), P.raws.value = (je || xt) + W), z = "value";
              } else {
                var kt = W === "i" || W === "I";
                (P.value || P.value === "") && (P.quoteMark || Q) ? (P.insensitive = kt, (!kt || W === "I") && ((0, v.ensureObject)(P, "raws"), P.raws.insensitiveFlag = W), z = "insensitive", q && ((0, v.ensureObject)(P, "spaces", "insensitive"), P.spaces.insensitive.before = q, q = ""), V && ((0, v.ensureObject)(P, "raws", "spaces", "insensitive"), P.raws.spaces.insensitive.before = V, V = "")) : (P.value || P.value === "") && (z = "value", P.value += W, P.raws.value && (P.raws.value += W));
              }
              Q = !1;
              break;
            case g.str:
              if (!P.attribute || !P.operator)
                return this.error("Expected an attribute followed by an operator preceding the string.", { index: X[d.FIELDS.START_POS] });
              var Qe = (0, p.unescapeValue)(W), Ia = Qe.unescaped, Ma = Qe.quoteMark;
              P.value = Ia, P.quoteMark = Ma, z = "value", (0, v.ensureObject)(P, "raws"), P.raws.value = W, Q = !1;
              break;
            case g.equals:
              if (!P.attribute)
                return this.expected("attribute", X[d.FIELDS.START_POS], W);
              if (P.value)
                return this.error('Unexpected "=" found; an operator was already defined.', { index: X[d.FIELDS.START_POS] });
              P.operator = P.operator ? P.operator + W : W, z = "operator", Q = !1;
              break;
            case g.comment:
              if (z)
                if (Q || Z && Z[d.FIELDS.TYPE] === g.space || z === "insensitive") {
                  var Ra = (0, v.getProp)(P, "spaces", z, "after") || "", Ua = (0, v.getProp)(P, "raws", "spaces", z, "after") || Ra;
                  (0, v.ensureObject)(P, "raws", "spaces", z), P.raws.spaces[z].after = Ua + W;
                } else {
                  var Fa = P[z] || "", La = (0, v.getProp)(P, "raws", z) || Fa;
                  (0, v.ensureObject)(P, "raws"), P.raws[z] = La + W;
                }
              else
                V = V + W;
              break;
            default:
              return this.error('Unexpected "' + W + '" found.', { index: X[d.FIELDS.START_POS] });
          }
          B++;
        }
        H(P, "attribute"), H(P, "namespace"), this.newNode(new p.default(P)), this.position++;
      }, M.parseWhitespaceEquivalentTokens = function(E) {
        E < 0 && (E = this.tokens.length);
        var _ = this.position, N = [], P = "", B = void 0;
        do
          if (A[this.currToken[d.FIELDS.TYPE]])
            this.options.lossy || (P += this.content());
          else if (this.currToken[d.FIELDS.TYPE] === g.comment) {
            var q = {};
            P && (q.before = P, P = ""), B = new o.default({ value: this.content(), source: $(this.currToken), sourceIndex: this.currToken[d.FIELDS.START_POS], spaces: q }), N.push(B);
          }
        while (++this.position < E);
        if (P) {
          if (B)
            B.spaces.after = P;
          else if (!this.options.lossy) {
            var V = this.tokens[_], z = this.tokens[this.position - 1];
            N.push(new s.default({ value: "", source: j(V[d.FIELDS.START_LINE], V[d.FIELDS.START_COL], z[d.FIELDS.END_LINE], z[d.FIELDS.END_COL]), sourceIndex: V[d.FIELDS.START_POS], spaces: { before: P, after: "" } }));
          }
        }
        return N;
      }, M.convertWhitespaceNodesToSpace = function(E, _) {
        var N = this;
        _ === void 0 && (_ = !1);
        var P = "", B = "";
        E.forEach(function(V) {
          var z = N.lossySpace(V.spaces.before, _), Q = N.lossySpace(V.rawSpaceBefore, _);
          P += z + N.lossySpace(V.spaces.after, _ && z.length === 0), B += z + V.value + N.lossySpace(V.rawSpaceAfter, _ && Q.length === 0);
        }), B === P && (B = void 0);
        var q = { space: P, rawSpace: B };
        return q;
      }, M.isNamedCombinator = function(E) {
        return E === void 0 && (E = this.position), this.tokens[E + 0] && this.tokens[E + 0][d.FIELDS.TYPE] === g.slash && this.tokens[E + 1] && this.tokens[E + 1][d.FIELDS.TYPE] === g.word && this.tokens[E + 2] && this.tokens[E + 2][d.FIELDS.TYPE] === g.slash;
      }, M.namedCombinator = function() {
        if (this.isNamedCombinator()) {
          var E = this.content(this.tokens[this.position + 1]), _ = (0, v.unesc)(E).toLowerCase(), N = {};
          _ !== E && (N.value = "/" + E + "/");
          var P = new h.default({ value: "/" + _ + "/", source: j(this.currToken[d.FIELDS.START_LINE], this.currToken[d.FIELDS.START_COL], this.tokens[this.position + 2][d.FIELDS.END_LINE], this.tokens[this.position + 2][d.FIELDS.END_COL]), sourceIndex: this.currToken[d.FIELDS.START_POS], raws: N });
          return this.position = this.position + 3, P;
        } else
          this.unexpected();
      }, M.combinator = function() {
        var E = this;
        if (this.content() === "|")
          return this.namespace();
        var _ = this.locateNextMeaningfulToken(this.position);
        if (_ < 0 || this.tokens[_][d.FIELDS.TYPE] === g.comma) {
          var N = this.parseWhitespaceEquivalentTokens(_);
          if (N.length > 0) {
            var P = this.current.last;
            if (P) {
              var B = this.convertWhitespaceNodesToSpace(N), q = B.space, V = B.rawSpace;
              V !== void 0 && (P.rawSpaceAfter += V), P.spaces.after += q;
            } else
              N.forEach(function(je) {
                return E.newNode(je);
              });
          }
          return;
        }
        var z = this.currToken, Q = void 0;
        _ > this.position && (Q = this.parseWhitespaceEquivalentTokens(_));
        var X;
        if (this.isNamedCombinator() ? X = this.namedCombinator() : this.currToken[d.FIELDS.TYPE] === g.combinator ? (X = new h.default({ value: this.content(), source: $(this.currToken), sourceIndex: this.currToken[d.FIELDS.START_POS] }), this.position++) : A[this.currToken[d.FIELDS.TYPE]] || Q || this.unexpected(), X) {
          if (Q) {
            var W = this.convertWhitespaceNodesToSpace(Q), Z = W.space, Oe = W.rawSpace;
            X.spaces.before = Z, X.rawSpaceBefore = Oe;
          }
        } else {
          var ke = this.convertWhitespaceNodesToSpace(Q, !0), ue = ke.space, ie = ke.rawSpace;
          ie || (ie = ue);
          var ye = {}, be = { spaces: {} };
          ue.endsWith(" ") && ie.endsWith(" ") ? (ye.before = ue.slice(0, ue.length - 1), be.spaces.before = ie.slice(0, ie.length - 1)) : ue.startsWith(" ") && ie.startsWith(" ") ? (ye.after = ue.slice(1), be.spaces.after = ie.slice(1)) : be.value = ie, X = new h.default({ value: " ", source: L(z, this.tokens[this.position - 1]), sourceIndex: z[d.FIELDS.START_POS], spaces: ye, raws: be });
        }
        return this.currToken && this.currToken[d.FIELDS.TYPE] === g.space && (X.spaces.after = this.optionalSpace(this.content()), this.position++), this.newNode(X);
      }, M.comma = function() {
        if (this.position === this.tokens.length - 1) {
          this.root.trailingComma = !0, this.position++;
          return;
        }
        this.current._inferEndPosition();
        var E = new n.default({ source: { start: F(this.tokens[this.position + 1]) } });
        this.current.parent.append(E), this.current = E, this.position++;
      }, M.comment = function() {
        var E = this.currToken;
        this.newNode(new o.default({ value: this.content(), source: $(E), sourceIndex: E[d.FIELDS.START_POS] })), this.position++;
      }, M.error = function(E, _) {
        throw this.root.error(E, _);
      }, M.missingBackslash = function() {
        return this.error("Expected a backslash preceding the semicolon.", { index: this.currToken[d.FIELDS.START_POS] });
      }, M.missingParenthesis = function() {
        return this.expected("opening parenthesis", this.currToken[d.FIELDS.START_POS]);
      }, M.missingSquareBracket = function() {
        return this.expected("opening square bracket", this.currToken[d.FIELDS.START_POS]);
      }, M.unexpected = function() {
        return this.error("Unexpected '" + this.content() + "'. Escaping special characters with \\ may help.", this.currToken[d.FIELDS.START_POS]);
      }, M.namespace = function() {
        var E = this.prevToken && this.content(this.prevToken) || !0;
        if (this.nextToken[d.FIELDS.TYPE] === g.word)
          return this.position++, this.word(E);
        if (this.nextToken[d.FIELDS.TYPE] === g.asterisk)
          return this.position++, this.universal(E);
      }, M.nesting = function() {
        if (this.nextToken) {
          var E = this.content(this.nextToken);
          if (E === "|") {
            this.position++;
            return;
          }
        }
        var _ = this.currToken;
        this.newNode(new m.default({ value: this.content(), source: $(_), sourceIndex: _[d.FIELDS.START_POS] })), this.position++;
      }, M.parentheses = function() {
        var E = this.current.last, _ = 1;
        if (this.position++, E && E.type === b.PSEUDO) {
          var N = new n.default({ source: { start: F(this.tokens[this.position - 1]) } }), P = this.current;
          for (E.append(N), this.current = N; this.position < this.tokens.length && _; )
            this.currToken[d.FIELDS.TYPE] === g.openParenthesis && _++, this.currToken[d.FIELDS.TYPE] === g.closeParenthesis && _--, _ ? this.parse() : (this.current.source.end = U(this.currToken), this.current.parent.source.end = U(this.currToken), this.position++);
          this.current = P;
        } else {
          for (var B = this.currToken, q = "(", V; this.position < this.tokens.length && _; )
            this.currToken[d.FIELDS.TYPE] === g.openParenthesis && _++, this.currToken[d.FIELDS.TYPE] === g.closeParenthesis && _--, V = this.currToken, q += this.parseParenthesisToken(this.currToken), this.position++;
          E ? E.appendToPropertyAndEscape("value", q, q) : this.newNode(new s.default({ value: q, source: j(B[d.FIELDS.START_LINE], B[d.FIELDS.START_COL], V[d.FIELDS.END_LINE], V[d.FIELDS.END_COL]), sourceIndex: B[d.FIELDS.START_POS] }));
        }
        if (_)
          return this.expected("closing parenthesis", this.currToken[d.FIELDS.START_POS]);
      }, M.pseudo = function() {
        for (var E = this, _ = "", N = this.currToken; this.currToken && this.currToken[d.FIELDS.TYPE] === g.colon; )
          _ += this.content(), this.position++;
        if (!this.currToken)
          return this.expected(["pseudo-class", "pseudo-element"], this.position - 1);
        if (this.currToken[d.FIELDS.TYPE] === g.word)
          this.splitWord(!1, function(P, B) {
            _ += P, E.newNode(new l.default({ value: _, source: L(N, E.currToken), sourceIndex: N[d.FIELDS.START_POS] })), B > 1 && E.nextToken && E.nextToken[d.FIELDS.TYPE] === g.openParenthesis && E.error("Misplaced parenthesis.", { index: E.nextToken[d.FIELDS.START_POS] });
          });
        else
          return this.expected(["pseudo-class", "pseudo-element"], this.currToken[d.FIELDS.START_POS]);
      }, M.space = function() {
        var E = this.content();
        this.position === 0 || this.prevToken[d.FIELDS.TYPE] === g.comma || this.prevToken[d.FIELDS.TYPE] === g.openParenthesis || this.current.nodes.every(function(_) {
          return _.type === "comment";
        }) ? (this.spaces = this.optionalSpace(E), this.position++) : this.position === this.tokens.length - 1 || this.nextToken[d.FIELDS.TYPE] === g.comma || this.nextToken[d.FIELDS.TYPE] === g.closeParenthesis ? (this.current.last.spaces.after = this.optionalSpace(E), this.position++) : this.combinator();
      }, M.string = function() {
        var E = this.currToken;
        this.newNode(new s.default({ value: this.content(), source: $(E), sourceIndex: E[d.FIELDS.START_POS] })), this.position++;
      }, M.universal = function(E) {
        var _ = this.nextToken;
        if (_ && this.content(_) === "|")
          return this.position++, this.namespace();
        var N = this.currToken;
        this.newNode(new c.default({ value: this.content(), source: $(N), sourceIndex: N[d.FIELDS.START_POS] }), E), this.position++;
      }, M.splitWord = function(E, _) {
        for (var N = this, P = this.nextToken, B = this.content(); P && ~[g.dollar, g.caret, g.equals, g.word].indexOf(P[d.FIELDS.TYPE]); ) {
          this.position++;
          var q = this.content();
          if (B += q, q.lastIndexOf("\\") === q.length - 1) {
            var V = this.nextToken;
            V && V[d.FIELDS.TYPE] === g.space && (B += this.requiredSpace(this.content(V)), this.position++);
          }
          P = this.nextToken;
        }
        var z = G(B, ".").filter(function(Z) {
          var Oe = B[Z - 1] === "\\", ke = /^\d+\.\d+%$/.test(B);
          return !Oe && !ke;
        }), Q = G(B, "#").filter(function(Z) {
          return B[Z - 1] !== "\\";
        }), X = G(B, "#{");
        X.length && (Q = Q.filter(function(Z) {
          return !~X.indexOf(Z);
        }));
        var W = (0, f.default)(pe([0].concat(z, Q)));
        W.forEach(function(Z, Oe) {
          var ke = W[Oe + 1] || B.length, ue = B.slice(Z, ke);
          if (Oe === 0 && _)
            return _.call(N, ue, W.length);
          var ie, ye = N.currToken, be = ye[d.FIELDS.START_POS] + W[Oe], je = j(ye[1], ye[2] + Z, ye[3], ye[2] + (ke - 1));
          if (~z.indexOf(Z)) {
            var xt = { value: ue.slice(1), source: je, sourceIndex: be };
            ie = new i.default(H(xt, "value"));
          } else if (~Q.indexOf(Z)) {
            var kt = { value: ue.slice(1), source: je, sourceIndex: be };
            ie = new a.default(H(kt, "value"));
          } else {
            var Qe = { value: ue, source: je, sourceIndex: be };
            H(Qe, "value"), ie = new u.default(Qe);
          }
          N.newNode(ie, E), E = null;
        }), this.position++;
      }, M.word = function(E) {
        var _ = this.nextToken;
        return _ && this.content(_) === "|" ? (this.position++, this.namespace()) : this.splitWord(E);
      }, M.loop = function() {
        for (; this.position < this.tokens.length; )
          this.parse(!0);
        return this.current._inferEndPosition(), this.root;
      }, M.parse = function(E) {
        switch (this.currToken[d.FIELDS.TYPE]) {
          case g.space:
            this.space();
            break;
          case g.comment:
            this.comment();
            break;
          case g.openParenthesis:
            this.parentheses();
            break;
          case g.closeParenthesis:
            E && this.missingParenthesis();
            break;
          case g.openSquare:
            this.attribute();
            break;
          case g.dollar:
          case g.caret:
          case g.equals:
          case g.word:
            this.word();
            break;
          case g.colon:
            this.pseudo();
            break;
          case g.comma:
            this.comma();
            break;
          case g.asterisk:
            this.universal();
            break;
          case g.ampersand:
            this.nesting();
            break;
          case g.slash:
          case g.combinator:
            this.combinator();
            break;
          case g.str:
            this.string();
            break;
          case g.closeSquare:
            this.missingSquareBracket();
          case g.semicolon:
            this.missingBackslash();
          default:
            this.unexpected();
        }
      }, M.expected = function(E, _, N) {
        if (Array.isArray(E)) {
          var P = E.pop();
          E = E.join(", ") + " or " + P;
        }
        var B = /^[aeiou]/.test(E[0]) ? "an" : "a";
        return N ? this.error("Expected " + B + " " + E + ', found "' + N + '" instead.', { index: _ }) : this.error("Expected " + B + " " + E + ".", { index: _ });
      }, M.requiredSpace = function(E) {
        return this.options.lossy ? " " : E;
      }, M.optionalSpace = function(E) {
        return this.options.lossy ? "" : E;
      }, M.lossySpace = function(E, _) {
        return this.options.lossy ? _ ? " " : "" : E;
      }, M.parseParenthesisToken = function(E) {
        var _ = this.content(E);
        return E[d.FIELDS.TYPE] === g.space ? this.requiredSpace(_) : _;
      }, M.newNode = function(E, _) {
        return _ && (/^ +$/.test(_) && (this.options.lossy || (this.spaces = (this.spaces || "") + _), _ = !0), E.namespace = _, H(E, "namespace")), this.spaces && (E.spaces.before = this.spaces, this.spaces = ""), this.current.append(E);
      }, M.content = function(E) {
        return E === void 0 && (E = this.currToken), this.css.slice(E[d.FIELDS.START_POS], E[d.FIELDS.END_POS]);
      }, M.locateNextMeaningfulToken = function(E) {
        E === void 0 && (E = this.position + 1);
        for (var _ = E; _ < this.tokens.length; )
          if (T[this.tokens[_][d.FIELDS.TYPE]]) {
            _++;
            continue;
          } else
            return _;
        return -1;
      }, C(I, [{ key: "currToken", get: function() {
        return this.tokens[this.position];
      } }, { key: "nextToken", get: function() {
        return this.tokens[this.position + 1];
      } }, { key: "prevToken", get: function() {
        return this.tokens[this.position - 1];
      } }]), I;
    }();
    e.default = ce, t.exports = e.default;
  }), Ei = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = n(Ti());
    function n(o) {
      return o && o.__esModule ? o : { default: o };
    }
    var i = function() {
      function o(u, s) {
        this.func = u || function() {
        }, this.funcRes = null, this.options = s;
      }
      var a = o.prototype;
      return a._shouldUpdateSelector = function(u, s) {
        s === void 0 && (s = {});
        var l = Object.assign({}, this.options, s);
        return l.updateSelector === !1 ? !1 : typeof u != "string";
      }, a._isLossy = function(u) {
        u === void 0 && (u = {});
        var s = Object.assign({}, this.options, u);
        return s.lossless === !1;
      }, a._root = function(u, s) {
        s === void 0 && (s = {});
        var l = new r.default(u, this._parseOptions(s));
        return l.root;
      }, a._parseOptions = function(u) {
        return { lossy: this._isLossy(u) };
      }, a._run = function(u, s) {
        var l = this;
        return s === void 0 && (s = {}), new Promise(function(p, c) {
          try {
            var h = l._root(u, s);
            Promise.resolve(l.func(h)).then(function(m) {
              var f = void 0;
              return l._shouldUpdateSelector(u, s) && (f = h.toString(), u.selector = f), { transform: m, root: h, string: f };
            }).then(p, c);
          } catch (m) {
            c(m);
            return;
          }
        });
      }, a._runSync = function(u, s) {
        s === void 0 && (s = {});
        var l = this._root(u, s), p = this.func(l);
        if (p && typeof p.then == "function")
          throw new Error("Selector processor returned a promise to a synchronous call.");
        var c = void 0;
        return s.updateSelector && typeof u != "string" && (c = l.toString(), u.selector = c), { transform: p, root: l, string: c };
      }, a.ast = function(u, s) {
        return this._run(u, s).then(function(l) {
          return l.root;
        });
      }, a.astSync = function(u, s) {
        return this._runSync(u, s).root;
      }, a.transform = function(u, s) {
        return this._run(u, s).then(function(l) {
          return l.transform;
        });
      }, a.transformSync = function(u, s) {
        return this._runSync(u, s).transform;
      }, a.process = function(u, s) {
        return this._run(u, s).then(function(l) {
          return l.string || l.root.toString();
        });
      }, a.processSync = function(u, s) {
        var l = this._runSync(u, s);
        return l.string || l.root.toString();
      }, o;
    }();
    e.default = i, t.exports = e.default;
  }), _i = D((e) => {
    e.__esModule = !0, e.universal = e.tag = e.string = e.selector = e.root = e.pseudo = e.nesting = e.id = e.comment = e.combinator = e.className = e.attribute = void 0;
    var t = m(zr()), r = m(Rr()), n = m(Br()), i = m(Ur()), o = m(Fr()), a = m(Vr()), u = m(Nr()), s = m(Ir()), l = m(Mr()), p = m($r()), c = m(Lr()), h = m(Wr());
    function m(A) {
      return A && A.__esModule ? A : { default: A };
    }
    var f = function(A) {
      return new t.default(A);
    };
    e.attribute = f;
    var d = function(A) {
      return new r.default(A);
    };
    e.className = d;
    var g = function(A) {
      return new n.default(A);
    };
    e.combinator = g;
    var b = function(A) {
      return new i.default(A);
    };
    e.comment = b;
    var v = function(A) {
      return new o.default(A);
    };
    e.id = v;
    var x = function(A) {
      return new a.default(A);
    };
    e.nesting = x;
    var k = function(A) {
      return new u.default(A);
    };
    e.pseudo = k;
    var y = function(A) {
      return new s.default(A);
    };
    e.root = y;
    var w = function(A) {
      return new l.default(A);
    };
    e.selector = w;
    var S = function(A) {
      return new p.default(A);
    };
    e.string = S;
    var O = function(A) {
      return new c.default(A);
    };
    e.tag = O;
    var C = function(A) {
      return new h.default(A);
    };
    e.universal = C;
  }), Pi = D((e) => {
    e.__esModule = !0, e.isNode = i, e.isPseudoElement = v, e.isPseudoClass = x, e.isContainer = k, e.isNamespace = y, e.isUniversal = e.isTag = e.isString = e.isSelector = e.isRoot = e.isPseudo = e.isNesting = e.isIdentifier = e.isComment = e.isCombinator = e.isClassName = e.isAttribute = void 0;
    var t = ne(), r, n = (r = {}, r[t.ATTRIBUTE] = !0, r[t.CLASS] = !0, r[t.COMBINATOR] = !0, r[t.COMMENT] = !0, r[t.ID] = !0, r[t.NESTING] = !0, r[t.PSEUDO] = !0, r[t.ROOT] = !0, r[t.SELECTOR] = !0, r[t.STRING] = !0, r[t.TAG] = !0, r[t.UNIVERSAL] = !0, r);
    function i(w) {
      return typeof w == "object" && n[w.type];
    }
    function o(w, S) {
      return i(S) && S.type === w;
    }
    var a = o.bind(null, t.ATTRIBUTE);
    e.isAttribute = a;
    var u = o.bind(null, t.CLASS);
    e.isClassName = u;
    var s = o.bind(null, t.COMBINATOR);
    e.isCombinator = s;
    var l = o.bind(null, t.COMMENT);
    e.isComment = l;
    var p = o.bind(null, t.ID);
    e.isIdentifier = p;
    var c = o.bind(null, t.NESTING);
    e.isNesting = c;
    var h = o.bind(null, t.PSEUDO);
    e.isPseudo = h;
    var m = o.bind(null, t.ROOT);
    e.isRoot = m;
    var f = o.bind(null, t.SELECTOR);
    e.isSelector = f;
    var d = o.bind(null, t.STRING);
    e.isString = d;
    var g = o.bind(null, t.TAG);
    e.isTag = g;
    var b = o.bind(null, t.UNIVERSAL);
    e.isUniversal = b;
    function v(w) {
      return h(w) && w.value && (w.value.startsWith("::") || w.value.toLowerCase() === ":before" || w.value.toLowerCase() === ":after" || w.value.toLowerCase() === ":first-letter" || w.value.toLowerCase() === ":first-line");
    }
    function x(w) {
      return h(w) && !v(w);
    }
    function k(w) {
      return !!(i(w) && w.walk);
    }
    function y(w) {
      return a(w) || g(w);
    }
  }), ji = D((e) => {
    e.__esModule = !0;
    var t = ne();
    Object.keys(t).forEach(function(i) {
      i === "default" || i === "__esModule" || i in e && e[i] === t[i] || (e[i] = t[i]);
    });
    var r = _i();
    Object.keys(r).forEach(function(i) {
      i === "default" || i === "__esModule" || i in e && e[i] === r[i] || (e[i] = r[i]);
    });
    var n = Pi();
    Object.keys(n).forEach(function(i) {
      i === "default" || i === "__esModule" || i in e && e[i] === n[i] || (e[i] = n[i]);
    });
  }), Ae = D((e, t) => {
    e.__esModule = !0, e.default = void 0;
    var r = a(Ei()), n = o(ji());
    function i() {
      if (typeof WeakMap != "function")
        return null;
      var l = /* @__PURE__ */ new WeakMap();
      return i = function() {
        return l;
      }, l;
    }
    function o(l) {
      if (l && l.__esModule)
        return l;
      if (l === null || typeof l != "object" && typeof l != "function")
        return { default: l };
      var p = i();
      if (p && p.has(l))
        return p.get(l);
      var c = {}, h = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var m in l)
        if (Object.prototype.hasOwnProperty.call(l, m)) {
          var f = h ? Object.getOwnPropertyDescriptor(l, m) : null;
          f && (f.get || f.set) ? Object.defineProperty(c, m, f) : c[m] = l[m];
        }
      return c.default = l, p && p.set(l, c), c;
    }
    function a(l) {
      return l && l.__esModule ? l : { default: l };
    }
    var u = function(l) {
      return new r.default(l);
    };
    Object.assign(u, n), delete u.__esModule;
    var s = u;
    e.default = s, t.exports = e.default;
  }), Di = D((e, t) => {
    var { Rule: r, AtRule: n } = Ne(), i = Ae();
    function o(x, k) {
      let y;
      try {
        i((w) => {
          y = w;
        }).processSync(x);
      } catch (w) {
        throw x.includes(":") ? k ? k.error("Missed semicolon") : w : k ? k.error(w.message) : w;
      }
      return y.at(0);
    }
    function a(x, k) {
      let y = !1;
      return x.each((w) => {
        if (w.type === "nesting") {
          let S = k.clone({});
          w.value !== "&" ? w.replaceWith(o(w.value.replace("&", S.toString()))) : w.replaceWith(S), y = !0;
        } else
          "nodes" in w && w.nodes && a(w, k) && (y = !0);
      }), y;
    }
    function u(x, k) {
      let y = [];
      return x.selectors.forEach((w) => {
        let S = o(w, x);
        k.selectors.forEach((O) => {
          if (!O)
            return;
          let C = o(O, k);
          a(C, S) || (C.prepend(i.combinator({ value: " " })), C.prepend(S.clone({}))), y.push(C.toString());
        });
      }), y;
    }
    function s(x, k) {
      let y = x.prev();
      for (k.after(x); y && y.type === "comment"; ) {
        let w = y.prev();
        k.after(y), y = w;
      }
      return x;
    }
    function l(x) {
      return function k(y, w, S, O = S) {
        let C = [];
        if (w.each((A) => {
          A.type === "rule" && S ? O && (A.selectors = u(y, A)) : A.type === "atrule" && A.nodes ? x[A.name] ? k(y, A, O) : w[d] !== !1 && C.push(A) : C.push(A);
        }), S && C.length) {
          let A = y.clone({ nodes: [] });
          for (let T of C)
            A.append(T);
          w.prepend(A);
        }
      };
    }
    function p(x, k, y) {
      let w = new r({ selector: x, nodes: [] });
      return w.append(k), y.after(w), w;
    }
    function c(x, k) {
      let y = {};
      for (let w of x)
        y[w] = !0;
      if (k)
        for (let w of k)
          y[w.replace(/^@/, "")] = !0;
      return y;
    }
    function h(x) {
      x = x.trim();
      let k = x.match(/^\((.*)\)$/);
      if (!k)
        return { type: "basic", selector: x };
      let y = k[1].match(/^(with(?:out)?):(.+)$/);
      if (y) {
        let w = y[1] === "with", S = Object.fromEntries(y[2].trim().split(/\s+/).map((C) => [C, !0]));
        if (w && S.all)
          return { type: "noop" };
        let O = (C) => !!S[C];
        return S.all ? O = () => !0 : w && (O = (C) => C === "all" ? !1 : !S[C]), { type: "withrules", escapes: O };
      }
      return { type: "unknown" };
    }
    function m(x) {
      let k = [], y = x.parent;
      for (; y && y instanceof n; )
        k.push(y), y = y.parent;
      return k;
    }
    function f(x) {
      let k = x[g];
      if (!k)
        x.after(x.nodes);
      else {
        let y = x.nodes, w, S = -1, O, C, A, T = m(x);
        if (T.forEach((F, U) => {
          if (k(F.name))
            w = F, S = U, C = A;
          else {
            let j = A;
            A = F.clone({ nodes: [] }), j && A.append(j), O = O || A;
          }
        }), w ? C ? (O.append(y), w.after(C)) : w.after(y) : x.after(y), x.next() && w) {
          let F;
          T.slice(0, S + 1).forEach((U, j, $) => {
            let L = F;
            F = U.clone({ nodes: [] }), L && F.append(L);
            let H = [], G = ($[j - 1] || x).next();
            for (; G; )
              H.push(G), G = G.next();
            F.append(H);
          }), F && (C || y[y.length - 1]).after(F);
        }
      }
      x.remove();
    }
    var d = Symbol("rootRuleMergeSel"), g = Symbol("rootRuleEscapes");
    function b(x) {
      let { params: k } = x, { type: y, selector: w, escapes: S } = h(k);
      if (y === "unknown")
        throw x.error(`Unknown @${x.name} parameter ${JSON.stringify(k)}`);
      if (y === "basic" && w) {
        let O = new r({ selector: w, nodes: x.nodes });
        x.removeAll(), x.append(O);
      }
      x[g] = S, x[d] = S ? !S("all") : y === "noop";
    }
    var v = Symbol("hasRootRule");
    t.exports = (x = {}) => {
      let k = c(["media", "supports", "layer"], x.bubble), y = l(k), w = c(["document", "font-face", "keyframes", "-webkit-keyframes", "-moz-keyframes"], x.unwrap), S = (x.rootRuleName || "at-root").replace(/^@/, ""), O = x.preserveEmpty;
      return { postcssPlugin: "postcss-nested", Once(C) {
        C.walkAtRules(S, (A) => {
          b(A), C[v] = !0;
        });
      }, Rule(C) {
        let A = !1, T = C, F = !1, U = [];
        C.each((j) => {
          j.type === "rule" ? (U.length && (T = p(C.selector, U, T), U = []), F = !0, A = !0, j.selectors = u(C, j), T = s(j, T)) : j.type === "atrule" ? (U.length && (T = p(C.selector, U, T), U = []), j.name === S ? (A = !0, y(C, j, !0, j[d]), T = s(j, T)) : k[j.name] ? (F = !0, A = !0, y(C, j, !0), T = s(j, T)) : w[j.name] ? (F = !0, A = !0, y(C, j, !1), T = s(j, T)) : F && U.push(j)) : j.type === "decl" && F && U.push(j);
        }), U.length && (T = p(C.selector, U, T)), A && O !== !0 && (C.raws.semicolon = !0, C.nodes.length === 0 && C.remove());
      }, RootExit(C) {
        C[v] && (C.walkAtRules(S, f), C[v] = !1);
      } };
    }, t.exports.postcss = !0;
  }), Ii = D((e, t) => {
    var r = /-(\w|$)/g, n = function(o, a) {
      return a.toUpperCase();
    }, i = function(o) {
      return o = o.toLowerCase(), o === "float" ? "cssFloat" : o.charCodeAt(0) === 45 && o.charCodeAt(1) === 109 && o.charCodeAt(2) === 115 && o.charCodeAt(3) === 45 ? o.substr(1).replace(r, n) : o.replace(r, n);
    };
    t.exports = i;
  }), Gr = D((e, t) => {
    var r = Ii(), n = { boxFlex: !0, boxFlexGroup: !0, columnCount: !0, flex: !0, flexGrow: !0, flexPositive: !0, flexShrink: !0, flexNegative: !0, fontWeight: !0, lineClamp: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, tabSize: !0, widows: !0, zIndex: !0, zoom: !0, fillOpacity: !0, strokeDashoffset: !0, strokeOpacity: !0, strokeWidth: !0 };
    function i(a) {
      return typeof a.nodes > "u" ? !0 : o(a);
    }
    function o(a) {
      let u, s = {};
      return a.each((l) => {
        if (l.type === "atrule")
          u = "@" + l.name, l.params && (u += " " + l.params), typeof s[u] > "u" ? s[u] = i(l) : Array.isArray(s[u]) ? s[u].push(i(l)) : s[u] = [s[u], i(l)];
        else if (l.type === "rule") {
          let p = o(l);
          if (s[l.selector])
            for (let c in p)
              s[l.selector][c] = p[c];
          else
            s[l.selector] = p;
        } else if (l.type === "decl") {
          l.prop[0] === "-" && l.prop[1] === "-" ? u = l.prop : u = r(l.prop);
          let p = l.value;
          !isNaN(l.value) && n[u] && (p = parseFloat(l.value)), l.important && (p += " !important"), typeof s[u] > "u" ? s[u] = p : Array.isArray(s[u]) ? s[u].push(p) : s[u] = [s[u], p];
        }
      }), s;
    }
    t.exports = o;
  }), Lt = D((e, t) => {
    var r = Ne(), n = /\s*!important\s*$/i, i = { "box-flex": !0, "box-flex-group": !0, "column-count": !0, flex: !0, "flex-grow": !0, "flex-positive": !0, "flex-shrink": !0, "flex-negative": !0, "font-weight": !0, "line-clamp": !0, "line-height": !0, opacity: !0, order: !0, orphans: !0, "tab-size": !0, widows: !0, "z-index": !0, zoom: !0, "fill-opacity": !0, "stroke-dashoffset": !0, "stroke-opacity": !0, "stroke-width": !0 };
    function o(l) {
      return l.replace(/([A-Z])/g, "-$1").replace(/^ms-/, "-ms-").toLowerCase();
    }
    function a(l, p, c) {
      c === !1 || c === null || (p.startsWith("--") || (p = o(p)), typeof c == "number" && (c === 0 || i[p] ? c = c.toString() : c += "px"), p === "css-float" && (p = "float"), n.test(c) ? (c = c.replace(n, ""), l.push(r.decl({ prop: p, value: c, important: !0 }))) : l.push(r.decl({ prop: p, value: c })));
    }
    function u(l, p, c) {
      let h = r.atRule({ name: p[1], params: p[3] || "" });
      typeof c == "object" && (h.nodes = [], s(c, h)), l.push(h);
    }
    function s(l, p) {
      let c, h, m;
      for (c in l)
        if (h = l[c], !(h === null || typeof h > "u"))
          if (c[0] === "@") {
            let f = c.match(/@(\S+)(\s+([\W\w]*)\s*)?/);
            if (Array.isArray(h))
              for (let d of h)
                u(p, f, d);
            else
              u(p, f, h);
          } else if (Array.isArray(h))
            for (let f of h)
              a(p, c, f);
          else
            typeof h == "object" ? (m = r.rule({ selector: c }), s(h, m), p.push(m)) : a(p, c, h);
    }
    t.exports = function(l) {
      let p = r.root();
      return s(l, p), p;
    };
  }), Yr = D((e, t) => {
    var r = Gr();
    t.exports = function(n) {
      return console && console.warn && n.warnings().forEach((i) => {
        let o = i.plugin || "PostCSS";
        console.warn(o + ": " + i.text);
      }), r(n.root);
    };
  }), Mi = D((e, t) => {
    var r = Ne(), n = Yr(), i = Lt();
    t.exports = function(o) {
      let a = r(o);
      return async (u) => {
        let s = await a.process(u, { parser: i, from: void 0 });
        return n(s);
      };
    };
  }), Ri = D((e, t) => {
    var r = Ne(), n = Yr(), i = Lt();
    t.exports = function(o) {
      let a = r(o);
      return (u) => {
        let s = a.process(u, { parser: i, from: void 0 });
        return n(s);
      };
    };
  }), Ui = D((e, t) => {
    var r = Gr(), n = Lt(), i = Mi(), o = Ri();
    t.exports = { objectify: r, parse: n, async: i, sync: o };
  }), Fi = D((e, t) => {
    t.exports = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
  }), Hr = D((e, t) => {
    (function(r, n) {
      typeof e == "object" && typeof t < "u" ? t.exports = function(i, o, a, u, s) {
        for (o = o.split ? o.split(".") : o, u = 0; u < o.length; u++)
          i = i ? i[o[u]] : s;
        return i === s ? a : i;
      } : typeof define == "function" && define.amd ? define(function() {
        return function(i, o, a, u, s) {
          for (o = o.split ? o.split(".") : o, u = 0; u < o.length; u++)
            i = i ? i[o[u]] : s;
          return i === s ? a : i;
        };
      }) : r.dlv = function(i, o, a, u, s) {
        for (o = o.split ? o.split(".") : o, u = 0; u < o.length; u++)
          i = i ? i[o[u]] : s;
        return i === s ? a : i;
      };
    })(e);
  }), Li = D((e, t) => {
    (function() {
      function r(o, a, u) {
        if (!o)
          return null;
        r.caseSensitive || (o = o.toLowerCase());
        var s = r.threshold === null ? null : r.threshold * o.length, l = r.thresholdAbsolute, p;
        s !== null && l !== null ? p = Math.min(s, l) : s !== null ? p = s : l !== null ? p = l : p = null;
        var c, h, m, f, d, g = a.length;
        for (d = 0; d < g; d++)
          if (h = a[d], u && (h = h[u]), !!h && (r.caseSensitive ? m = h : m = h.toLowerCase(), f = i(o, m, p), (p === null || f < p) && (p = f, u && r.returnWinningObject ? c = a[d] : c = h, r.returnFirstMatch)))
            return c;
        return c || r.nullResultValue;
      }
      r.threshold = 0.4, r.thresholdAbsolute = 20, r.caseSensitive = !1, r.nullResultValue = null, r.returnWinningObject = null, r.returnFirstMatch = !1, typeof t < "u" && t.exports ? t.exports = r : window.didYouMean = r;
      var n = Math.pow(2, 32) - 1;
      function i(o, a, u) {
        u = u || u === 0 ? u : n;
        var s = o.length, l = a.length;
        if (s === 0)
          return Math.min(u + 1, l);
        if (l === 0)
          return Math.min(u + 1, s);
        if (Math.abs(s - l) > u)
          return u + 1;
        var p = [], c, h, m, f, d;
        for (c = 0; c <= l; c++)
          p[c] = [c];
        for (h = 0; h <= s; h++)
          p[0][h] = h;
        for (c = 1; c <= l; c++) {
          for (m = n, f = 1, c > u && (f = c - u), d = l + 1, d > u + c && (d = u + c), h = 1; h <= s; h++)
            h < f || h > d ? p[c][h] = u + 1 : a.charAt(c - 1) === o.charAt(h - 1) ? p[c][h] = p[c - 1][h - 1] : p[c][h] = Math.min(p[c - 1][h - 1] + 1, Math.min(p[c][h - 1] + 1, p[c - 1][h] + 1)), p[c][h] < m && (m = p[c][h]);
          if (m > u)
            return u + 1;
        }
        return p[l][s];
      }
    })();
  }), $i = D((e, t) => {
    var r = "(".charCodeAt(0), n = ")".charCodeAt(0), i = "'".charCodeAt(0), o = '"'.charCodeAt(0), a = "\\".charCodeAt(0), u = "/".charCodeAt(0), s = ",".charCodeAt(0), l = ":".charCodeAt(0), p = "*".charCodeAt(0), c = "u".charCodeAt(0), h = "U".charCodeAt(0), m = "+".charCodeAt(0), f = /^[a-f0-9?-]+$/i;
    t.exports = function(d) {
      for (var g = [], b = d, v, x, k, y, w, S, O, C, A = 0, T = b.charCodeAt(A), F = b.length, U = [{ nodes: g }], j = 0, $, L = "", H = "", G = ""; A < F; )
        if (T <= 32) {
          v = A;
          do
            v += 1, T = b.charCodeAt(v);
          while (T <= 32);
          y = b.slice(A, v), k = g[g.length - 1], T === n && j ? G = y : k && k.type === "div" ? (k.after = y, k.sourceEndIndex += y.length) : T === s || T === l || T === u && b.charCodeAt(v + 1) !== p && (!$ || $ && $.type === "function" && $.value !== "calc") ? H = y : g.push({ type: "space", sourceIndex: A, sourceEndIndex: v, value: y }), A = v;
        } else if (T === i || T === o) {
          v = A, x = T === i ? "'" : '"', y = { type: "string", sourceIndex: A, quote: x };
          do
            if (w = !1, v = b.indexOf(x, v + 1), ~v)
              for (S = v; b.charCodeAt(S - 1) === a; )
                S -= 1, w = !w;
            else
              b += x, v = b.length - 1, y.unclosed = !0;
          while (w);
          y.value = b.slice(A + 1, v), y.sourceEndIndex = y.unclosed ? v : v + 1, g.push(y), A = v + 1, T = b.charCodeAt(A);
        } else if (T === u && b.charCodeAt(A + 1) === p)
          v = b.indexOf("*/", A), y = { type: "comment", sourceIndex: A, sourceEndIndex: v + 2 }, v === -1 && (y.unclosed = !0, v = b.length, y.sourceEndIndex = v), y.value = b.slice(A + 2, v), g.push(y), A = v + 2, T = b.charCodeAt(A);
        else if ((T === u || T === p) && $ && $.type === "function" && $.value === "calc")
          y = b[A], g.push({ type: "word", sourceIndex: A - H.length, sourceEndIndex: A + y.length, value: y }), A += 1, T = b.charCodeAt(A);
        else if (T === u || T === s || T === l)
          y = b[A], g.push({ type: "div", sourceIndex: A - H.length, sourceEndIndex: A + y.length, value: y, before: H, after: "" }), H = "", A += 1, T = b.charCodeAt(A);
        else if (r === T) {
          v = A;
          do
            v += 1, T = b.charCodeAt(v);
          while (T <= 32);
          if (C = A, y = { type: "function", sourceIndex: A - L.length, value: L, before: b.slice(C + 1, v) }, A = v, L === "url" && T !== i && T !== o) {
            v -= 1;
            do
              if (w = !1, v = b.indexOf(")", v + 1), ~v)
                for (S = v; b.charCodeAt(S - 1) === a; )
                  S -= 1, w = !w;
              else
                b += ")", v = b.length - 1, y.unclosed = !0;
            while (w);
            O = v;
            do
              O -= 1, T = b.charCodeAt(O);
            while (T <= 32);
            C < O ? (A !== O + 1 ? y.nodes = [{ type: "word", sourceIndex: A, sourceEndIndex: O + 1, value: b.slice(A, O + 1) }] : y.nodes = [], y.unclosed && O + 1 !== v ? (y.after = "", y.nodes.push({ type: "space", sourceIndex: O + 1, sourceEndIndex: v, value: b.slice(O + 1, v) })) : (y.after = b.slice(O + 1, v), y.sourceEndIndex = v)) : (y.after = "", y.nodes = []), A = v + 1, y.sourceEndIndex = y.unclosed ? v : A, T = b.charCodeAt(A), g.push(y);
          } else
            j += 1, y.after = "", y.sourceEndIndex = A + 1, g.push(y), U.push(y), g = y.nodes = [], $ = y;
          L = "";
        } else if (n === T && j)
          A += 1, T = b.charCodeAt(A), $.after = G, $.sourceEndIndex += G.length, G = "", j -= 1, U[U.length - 1].sourceEndIndex = A, U.pop(), $ = U[j], g = $.nodes;
        else {
          v = A;
          do
            T === a && (v += 1), v += 1, T = b.charCodeAt(v);
          while (v < F && !(T <= 32 || T === i || T === o || T === s || T === l || T === u || T === r || T === p && $ && $.type === "function" && $.value === "calc" || T === u && $.type === "function" && $.value === "calc" || T === n && j));
          y = b.slice(A, v), r === T ? L = y : (c === y.charCodeAt(0) || h === y.charCodeAt(0)) && m === y.charCodeAt(1) && f.test(y.slice(2)) ? g.push({ type: "unicode-range", sourceIndex: A, sourceEndIndex: v, value: y }) : g.push({ type: "word", sourceIndex: A, sourceEndIndex: v, value: y }), A = v;
        }
      for (A = U.length - 1; A; A -= 1)
        U[A].unclosed = !0, U[A].sourceEndIndex = b.length;
      return U[0].nodes;
    };
  }), Ni = D((e, t) => {
    t.exports = function r(n, i, o) {
      var a, u, s, l;
      for (a = 0, u = n.length; a < u; a += 1)
        s = n[a], o || (l = i(s, a, n)), l !== !1 && s.type === "function" && Array.isArray(s.nodes) && r(s.nodes, i, o), o && i(s, a, n);
    };
  }), zi = D((e, t) => {
    function r(i, o) {
      var a = i.type, u = i.value, s, l;
      return o && (l = o(i)) !== void 0 ? l : a === "word" || a === "space" ? u : a === "string" ? (s = i.quote || "", s + u + (i.unclosed ? "" : s)) : a === "comment" ? "/*" + u + (i.unclosed ? "" : "*/") : a === "div" ? (i.before || "") + u + (i.after || "") : Array.isArray(i.nodes) ? (s = n(i.nodes, o), a !== "function" ? s : u + "(" + (i.before || "") + s + (i.after || "") + (i.unclosed ? "" : ")")) : u;
    }
    function n(i, o) {
      var a, u;
      if (Array.isArray(i)) {
        for (a = "", u = i.length - 1; ~u; u -= 1)
          a = r(i[u], o) + a;
        return a;
      }
      return r(i, o);
    }
    t.exports = n;
  }), Wi = D((e, t) => {
    var r = "-".charCodeAt(0), n = "+".charCodeAt(0), i = ".".charCodeAt(0), o = "e".charCodeAt(0), a = "E".charCodeAt(0);
    function u(s) {
      var l = s.charCodeAt(0), p;
      if (l === n || l === r) {
        if (p = s.charCodeAt(1), p >= 48 && p <= 57)
          return !0;
        var c = s.charCodeAt(2);
        return p === i && c >= 48 && c <= 57;
      }
      return l === i ? (p = s.charCodeAt(1), p >= 48 && p <= 57) : l >= 48 && l <= 57;
    }
    t.exports = function(s) {
      var l = 0, p = s.length, c, h, m;
      if (p === 0 || !u(s))
        return !1;
      for (c = s.charCodeAt(l), (c === n || c === r) && l++; l < p && (c = s.charCodeAt(l), !(c < 48 || c > 57)); )
        l += 1;
      if (c = s.charCodeAt(l), h = s.charCodeAt(l + 1), c === i && h >= 48 && h <= 57)
        for (l += 2; l < p && (c = s.charCodeAt(l), !(c < 48 || c > 57)); )
          l += 1;
      if (c = s.charCodeAt(l), h = s.charCodeAt(l + 1), m = s.charCodeAt(l + 2), (c === o || c === a) && (h >= 48 && h <= 57 || (h === n || h === r) && m >= 48 && m <= 57))
        for (l += h === n || h === r ? 3 : 2; l < p && (c = s.charCodeAt(l), !(c < 48 || c > 57)); )
          l += 1;
      return { number: s.slice(0, l), unit: s.slice(l) };
    };
  }), Bi = D((e, t) => {
    var r = $i(), n = Ni(), i = zi();
    function o(a) {
      return this instanceof o ? (this.nodes = r(a), this) : new o(a);
    }
    o.prototype.toString = function() {
      return Array.isArray(this.nodes) ? i(this.nodes) : "";
    }, o.prototype.walk = function(a, u) {
      return n(this.nodes, a, u), this;
    }, o.unit = Wi(), o.walk = n, o.stringify = i, t.exports = o;
  }), Vi = D((e, t) => {
    t.exports = { content: [], presets: [], darkMode: "media", theme: { accentColor: ({ theme: r }) => ({ ...r("colors"), auto: "auto" }), animation: { none: "none", spin: "spin 1s linear infinite", ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite", pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite", bounce: "bounce 1s infinite" }, aria: { checked: 'checked="true"', disabled: 'disabled="true"', expanded: 'expanded="true"', hidden: 'hidden="true"', pressed: 'pressed="true"', readonly: 'readonly="true"', required: 'required="true"', selected: 'selected="true"' }, aspectRatio: { auto: "auto", square: "1 / 1", video: "16 / 9" }, backdropBlur: ({ theme: r }) => r("blur"), backdropBrightness: ({ theme: r }) => r("brightness"), backdropContrast: ({ theme: r }) => r("contrast"), backdropGrayscale: ({ theme: r }) => r("grayscale"), backdropHueRotate: ({ theme: r }) => r("hueRotate"), backdropInvert: ({ theme: r }) => r("invert"), backdropOpacity: ({ theme: r }) => r("opacity"), backdropSaturate: ({ theme: r }) => r("saturate"), backdropSepia: ({ theme: r }) => r("sepia"), backgroundColor: ({ theme: r }) => r("colors"), backgroundImage: { none: "none", "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))", "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))", "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))", "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))", "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))", "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))", "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))", "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))" }, backgroundOpacity: ({ theme: r }) => r("opacity"), backgroundPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, backgroundSize: { auto: "auto", cover: "cover", contain: "contain" }, blur: { 0: "0", none: "0", sm: "4px", DEFAULT: "8px", md: "12px", lg: "16px", xl: "24px", "2xl": "40px", "3xl": "64px" }, borderColor: ({ theme: r }) => ({ ...r("colors"), DEFAULT: r("colors.gray.200", "currentColor") }), borderOpacity: ({ theme: r }) => r("opacity"), borderRadius: { none: "0px", sm: "0.125rem", DEFAULT: "0.25rem", md: "0.375rem", lg: "0.5rem", xl: "0.75rem", "2xl": "1rem", "3xl": "1.5rem", full: "9999px" }, borderSpacing: ({ theme: r }) => ({ ...r("spacing") }), borderWidth: { DEFAULT: "1px", 0: "0px", 2: "2px", 4: "4px", 8: "8px" }, boxShadow: { sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)", DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)", md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)", lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)", xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)", "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)", inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)", none: "none" }, boxShadowColor: ({ theme: r }) => r("colors"), brightness: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", 200: "2" }, caretColor: ({ theme: r }) => r("colors"), colors: ({ colors: r }) => ({ inherit: r.inherit, current: r.current, transparent: r.transparent, black: r.black, white: r.white, slate: r.slate, gray: r.gray, zinc: r.zinc, neutral: r.neutral, stone: r.stone, red: r.red, orange: r.orange, amber: r.amber, yellow: r.yellow, lime: r.lime, green: r.green, emerald: r.emerald, teal: r.teal, cyan: r.cyan, sky: r.sky, blue: r.blue, indigo: r.indigo, violet: r.violet, purple: r.purple, fuchsia: r.fuchsia, pink: r.pink, rose: r.rose }), columns: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", "3xs": "16rem", "2xs": "18rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem" }, container: {}, content: { none: "none" }, contrast: { 0: "0", 50: ".5", 75: ".75", 100: "1", 125: "1.25", 150: "1.5", 200: "2" }, cursor: { auto: "auto", default: "default", pointer: "pointer", wait: "wait", text: "text", move: "move", help: "help", "not-allowed": "not-allowed", none: "none", "context-menu": "context-menu", progress: "progress", cell: "cell", crosshair: "crosshair", "vertical-text": "vertical-text", alias: "alias", copy: "copy", "no-drop": "no-drop", grab: "grab", grabbing: "grabbing", "all-scroll": "all-scroll", "col-resize": "col-resize", "row-resize": "row-resize", "n-resize": "n-resize", "e-resize": "e-resize", "s-resize": "s-resize", "w-resize": "w-resize", "ne-resize": "ne-resize", "nw-resize": "nw-resize", "se-resize": "se-resize", "sw-resize": "sw-resize", "ew-resize": "ew-resize", "ns-resize": "ns-resize", "nesw-resize": "nesw-resize", "nwse-resize": "nwse-resize", "zoom-in": "zoom-in", "zoom-out": "zoom-out" }, divideColor: ({ theme: r }) => r("borderColor"), divideOpacity: ({ theme: r }) => r("borderOpacity"), divideWidth: ({ theme: r }) => r("borderWidth"), dropShadow: { sm: "0 1px 1px rgb(0 0 0 / 0.05)", DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"], md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"], lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"], xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"], "2xl": "0 25px 25px rgb(0 0 0 / 0.15)", none: "0 0 #0000" }, fill: ({ theme: r }) => ({ none: "none", ...r("colors") }), flex: { 1: "1 1 0%", auto: "1 1 auto", initial: "0 1 auto", none: "none" }, flexBasis: ({ theme: r }) => ({ auto: "auto", ...r("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%" }), flexGrow: { 0: "0", DEFAULT: "1" }, flexShrink: { 0: "0", DEFAULT: "1" }, fontFamily: { sans: ["ui-sans-serif", "system-ui", "-apple-system", "BlinkMacSystemFont", '"Segoe UI"', "Roboto", '"Helvetica Neue"', "Arial", '"Noto Sans"', "sans-serif", '"Apple Color Emoji"', '"Segoe UI Emoji"', '"Segoe UI Symbol"', '"Noto Color Emoji"'], serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"], mono: ["ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", '"Liberation Mono"', '"Courier New"', "monospace"] }, fontSize: { xs: ["0.75rem", { lineHeight: "1rem" }], sm: ["0.875rem", { lineHeight: "1.25rem" }], base: ["1rem", { lineHeight: "1.5rem" }], lg: ["1.125rem", { lineHeight: "1.75rem" }], xl: ["1.25rem", { lineHeight: "1.75rem" }], "2xl": ["1.5rem", { lineHeight: "2rem" }], "3xl": ["1.875rem", { lineHeight: "2.25rem" }], "4xl": ["2.25rem", { lineHeight: "2.5rem" }], "5xl": ["3rem", { lineHeight: "1" }], "6xl": ["3.75rem", { lineHeight: "1" }], "7xl": ["4.5rem", { lineHeight: "1" }], "8xl": ["6rem", { lineHeight: "1" }], "9xl": ["8rem", { lineHeight: "1" }] }, fontWeight: { thin: "100", extralight: "200", light: "300", normal: "400", medium: "500", semibold: "600", bold: "700", extrabold: "800", black: "900" }, gap: ({ theme: r }) => r("spacing"), gradientColorStops: ({ theme: r }) => r("colors"), gradientColorStopPositions: { "0%": "0%", "5%": "5%", "10%": "10%", "15%": "15%", "20%": "20%", "25%": "25%", "30%": "30%", "35%": "35%", "40%": "40%", "45%": "45%", "50%": "50%", "55%": "55%", "60%": "60%", "65%": "65%", "70%": "70%", "75%": "75%", "80%": "80%", "85%": "85%", "90%": "90%", "95%": "95%", "100%": "100%" }, grayscale: { 0: "0", DEFAULT: "100%" }, gridAutoColumns: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridAutoRows: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridColumn: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridColumnEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13" }, gridColumnStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13" }, gridRow: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-full": "1 / -1" }, gridRowEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7" }, gridRowStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7" }, gridTemplateColumns: { none: "none", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))" }, gridTemplateRows: { none: "none", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))" }, height: ({ theme: r }) => ({ auto: "auto", ...r("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", full: "100%", screen: "100vh", min: "min-content", max: "max-content", fit: "fit-content" }), hueRotate: { 0: "0deg", 15: "15deg", 30: "30deg", 60: "60deg", 90: "90deg", 180: "180deg" }, inset: ({ theme: r }) => ({ auto: "auto", ...r("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%" }), invert: { 0: "0", DEFAULT: "100%" }, keyframes: { spin: { to: { transform: "rotate(360deg)" } }, ping: { "75%, 100%": { transform: "scale(2)", opacity: "0" } }, pulse: { "50%": { opacity: ".5" } }, bounce: { "0%, 100%": { transform: "translateY(-25%)", animationTimingFunction: "cubic-bezier(0.8,0,1,1)" }, "50%": { transform: "none", animationTimingFunction: "cubic-bezier(0,0,0.2,1)" } } }, letterSpacing: { tighter: "-0.05em", tight: "-0.025em", normal: "0em", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, lineHeight: { none: "1", tight: "1.25", snug: "1.375", normal: "1.5", relaxed: "1.625", loose: "2", 3: ".75rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem" }, listStyleType: { none: "none", disc: "disc", decimal: "decimal" }, listStyleImage: { none: "none" }, margin: ({ theme: r }) => ({ auto: "auto", ...r("spacing") }), lineClamp: { 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6" }, maxHeight: ({ theme: r }) => ({ ...r("spacing"), none: "none", full: "100%", screen: "100vh", min: "min-content", max: "max-content", fit: "fit-content" }), maxWidth: ({ theme: r, breakpoints: n }) => ({ none: "none", 0: "0rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", prose: "65ch", ...n(r("screens")) }), minHeight: { 0: "0px", full: "100%", screen: "100vh", min: "min-content", max: "max-content", fit: "fit-content" }, minWidth: { 0: "0px", full: "100%", min: "min-content", max: "max-content", fit: "fit-content" }, objectPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, opacity: { 0: "0", 5: "0.05", 10: "0.1", 20: "0.2", 25: "0.25", 30: "0.3", 40: "0.4", 50: "0.5", 60: "0.6", 70: "0.7", 75: "0.75", 80: "0.8", 90: "0.9", 95: "0.95", 100: "1" }, order: { first: "-9999", last: "9999", none: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12" }, outlineColor: ({ theme: r }) => r("colors"), outlineOffset: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, outlineWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, padding: ({ theme: r }) => r("spacing"), placeholderColor: ({ theme: r }) => r("colors"), placeholderOpacity: ({ theme: r }) => r("opacity"), ringColor: ({ theme: r }) => ({ DEFAULT: r("colors.blue.500", "#3b82f6"), ...r("colors") }), ringOffsetColor: ({ theme: r }) => r("colors"), ringOffsetWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, ringOpacity: ({ theme: r }) => ({ DEFAULT: "0.5", ...r("opacity") }), ringWidth: { DEFAULT: "3px", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, rotate: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", 45: "45deg", 90: "90deg", 180: "180deg" }, saturate: { 0: "0", 50: ".5", 100: "1", 150: "1.5", 200: "2" }, scale: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5" }, screens: { sm: "640px", md: "768px", lg: "1024px", xl: "1280px", "2xl": "1536px" }, scrollMargin: ({ theme: r }) => ({ ...r("spacing") }), scrollPadding: ({ theme: r }) => r("spacing"), sepia: { 0: "0", DEFAULT: "100%" }, skew: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg" }, space: ({ theme: r }) => ({ ...r("spacing") }), spacing: { px: "1px", 0: "0px", 0.5: "0.125rem", 1: "0.25rem", 1.5: "0.375rem", 2: "0.5rem", 2.5: "0.625rem", 3: "0.75rem", 3.5: "0.875rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem", 11: "2.75rem", 12: "3rem", 14: "3.5rem", 16: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, stroke: ({ theme: r }) => ({ none: "none", ...r("colors") }), strokeWidth: { 0: "0", 1: "1", 2: "2" }, supports: {}, data: {}, textColor: ({ theme: r }) => r("colors"), textDecorationColor: ({ theme: r }) => r("colors"), textDecorationThickness: { auto: "auto", "from-font": "from-font", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, textIndent: ({ theme: r }) => ({ ...r("spacing") }), textOpacity: ({ theme: r }) => r("opacity"), textUnderlineOffset: { auto: "auto", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, transformOrigin: { center: "center", top: "top", "top-right": "top right", right: "right", "bottom-right": "bottom right", bottom: "bottom", "bottom-left": "bottom left", left: "left", "top-left": "top left" }, transitionDelay: { 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms" }, transitionDuration: { DEFAULT: "150ms", 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms" }, transitionProperty: { none: "none", all: "all", DEFAULT: "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter", colors: "color, background-color, border-color, text-decoration-color, fill, stroke", opacity: "opacity", shadow: "box-shadow", transform: "transform" }, transitionTimingFunction: { DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)", linear: "linear", in: "cubic-bezier(0.4, 0, 1, 1)", out: "cubic-bezier(0, 0, 0.2, 1)", "in-out": "cubic-bezier(0.4, 0, 0.2, 1)" }, translate: ({ theme: r }) => ({ ...r("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%" }), width: ({ theme: r }) => ({ auto: "auto", ...r("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", screen: "100vw", min: "min-content", max: "max-content", fit: "fit-content" }), willChange: { auto: "auto", scroll: "scroll-position", contents: "contents", transform: "transform" }, zIndex: { auto: "auto", 0: "0", 10: "10", 20: "20", 30: "30", 40: "40", 50: "50" } }, plugins: [] };
  }), J = te(Ne(), 1), K = J.default;
  J.default.stringify, J.default.fromJSON, J.default.plugin, J.default.parse, J.default.list, J.default.document, J.default.comment, J.default.atRule, J.default.rule, J.default.decl, J.default.root, J.default.CssSyntaxError, J.default.Declaration, J.default.Container, J.default.Processor, J.default.Document, J.default.Comment, J.default.Warning, J.default.AtRule, J.default.Result, J.default.Input, J.default.Rule, J.default.Root, J.default.Node;
  function $t() {
  }
  var fe = { info: $t, warn: $t, risk: $t };
  function qi(e) {
    let t = /* @__PURE__ */ new Set(), r = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ new Set();
    if (e.walkAtRules((i) => {
      i.name === "apply" && n.add(i), i.name === "import" && (i.params === '"tailwindcss/base"' || i.params === "'tailwindcss/base'" ? (i.name = "tailwind", i.params = "base") : i.params === '"tailwindcss/components"' || i.params === "'tailwindcss/components'" ? (i.name = "tailwind", i.params = "components") : i.params === '"tailwindcss/utilities"' || i.params === "'tailwindcss/utilities'" ? (i.name = "tailwind", i.params = "utilities") : (i.params === '"tailwindcss/screens"' || i.params === "'tailwindcss/screens'" || i.params === '"tailwindcss/variants"' || i.params === "'tailwindcss/variants'") && (i.name = "tailwind", i.params = "variants")), i.name === "tailwind" && (i.params === "screens" && (i.params = "variants"), t.add(i.params)), ["layer", "responsive", "variants"].includes(i.name) && (["responsive", "variants"].includes(i.name) && fe.warn(`${i.name}-at-rule-deprecated`, [`The \`@${i.name}\` directive has been deprecated in Tailwind CSS v3.0.`, "Use `@layer utilities` or `@layer components` instead.", "https://tailwindcss.com/docs/upgrade-guide#replace-variants-with-layer"]), r.add(i));
    }), !t.has("base") || !t.has("components") || !t.has("utilities")) {
      for (let i of r)
        if (i.name === "layer" && ["base", "components", "utilities"].includes(i.params)) {
          if (!t.has(i.params))
            throw i.error(`\`@layer ${i.params}\` is used but no matching \`@tailwind ${i.params}\` directive is present.`);
        } else if (i.name === "responsive") {
          if (!t.has("utilities"))
            throw i.error("`@responsive` is used but `@tailwind utilities` is missing.");
        } else if (i.name === "variants" && !t.has("utilities"))
          throw i.error("`@variants` is used but `@tailwind utilities` is missing.");
    }
    return { tailwindDirectives: t, applyDirectives: n };
  }
  Et();
  var Gi = te(wi()), Qr = "3.3.0", Jr = { name: "tailwindcss", version: Qr, description: "A utility-first CSS framework for rapidly building custom user interfaces.", license: "MIT", main: "lib/index.js", types: "types/index.d.ts", repository: "https://github.com/tailwindlabs/tailwindcss.git", bugs: "https://github.com/tailwindlabs/tailwindcss/issues", homepage: "https://tailwindcss.com", bin: { tailwind: "lib/cli.js", tailwindcss: "lib/cli.js" }, tailwindcss: { engine: "stable" }, scripts: { prebuild: "npm run generate && rimraf lib", build: "swc src --out-dir lib --copy-files", postbuild: "esbuild lib/cli-peer-dependencies.js --bundle --platform=node --outfile=peers/index.js --define:process.env.CSS_TRANSFORMER_WASM=false", "rebuild-fixtures": "npm run build && node -r @swc/register scripts/rebuildFixtures.js", style: "eslint .", pretest: "npm run generate", test: "jest", "test:integrations": "npm run test --prefix ./integrations", "install:integrations": "node scripts/install-integrations.js", "generate:plugin-list": "node -r @swc/register scripts/create-plugin-list.js", "generate:types": "node -r @swc/register scripts/generate-types.js", generate: "npm run generate:plugin-list && npm run generate:types", "release-channel": "node ./scripts/release-channel.js", "release-notes": "node ./scripts/release-notes.js", prepublishOnly: "npm install --force && npm run build" }, files: ["src/*", "cli/*", "lib/*", "peers/*", "scripts/*.js", "stubs/*", "nesting/*", "types/**/*", "*.d.ts", "*.css", "*.js"], devDependencies: { "@swc/cli": "0.1.59", "@swc/core": "1.3.24", "@swc/jest": "0.2.24", "@swc/register": "0.1.10", autoprefixer: "^10.4.13", browserslist: "^4.21.4", concurrently: "^7.5.0", cssnano: "^5.1.14", esbuild: "^0.16.10", eslint: "^8.31.0", "eslint-config-prettier": "^8.6.0", "eslint-plugin-prettier": "^4.2.1", jest: "^28.1.3", "jest-diff": "^28.1.3", lightningcss: "^1.18.0", prettier: "^2.8.1", rimraf: "^3.0.0", "source-map-js": "^1.0.2", turbo: "^1.6.3" }, peerDependencies: { postcss: "^8.0.9" }, dependencies: { arg: "^5.0.2", chokidar: "^3.5.3", "color-name": "^1.1.4", didyoumean: "^1.2.2", dlv: "^1.1.3", "fast-glob": "^3.2.12", "glob-parent": "^6.0.2", "is-glob": "^4.0.3", jiti: "^1.17.2", lilconfig: "^2.0.6", micromatch: "^4.0.5", "normalize-path": "^3.0.0", "object-hash": "^3.0.0", picocolors: "^1.0.0", postcss: "^8.0.9", "postcss-import": "^14.1.0", "postcss-js": "^4.0.0", "postcss-load-config": "^3.1.4", "postcss-nested": "6.0.0", "postcss-selector-parser": "^6.0.11", "postcss-value-parser": "^4.2.0", "quick-lru": "^5.1.1", resolve: "^1.22.1", sucrase: "^3.29.0" }, browserslist: ["> 1%", "not edge <= 18", "not ie 11", "not op_mini all"], jest: { testTimeout: 3e4, setupFilesAfterEnv: ["<rootDir>/jest/customMatchers.js"], testPathIgnorePatterns: ["/node_modules/", "/integrations/", "/standalone-cli/", "\\.test\\.skip\\.js$"], transformIgnorePatterns: ["node_modules/(?!lightningcss)"], transform: { "\\.js$": "@swc/jest", "\\.ts$": "@swc/jest" } }, engines: { node: ">=12.13.0" } }, Yi = Jr.tailwindcss.engine === "oxide", ze = { NODE_ENV: "production", DEBUG: Ji(void 0), ENGINE: Jr.tailwindcss.engine, OXIDE: Qi(void 0, Yi) }, Hi = /* @__PURE__ */ new Map(), Me = new String("*"), Nt = Symbol("__NONE__");
  function Qi(e, t) {
    return e === void 0 ? t : !(e === "0" || e === "false");
  }
  function Ji(e) {
    if (e === void 0)
      return !1;
    if (e === "true" || e === "1")
      return !0;
    if (e === "false" || e === "0")
      return !1;
    if (e === "*")
      return !0;
    let t = e.split(",").map((r) => r.split(":")[0]);
    return t.includes("-tailwindcss") ? !1 : !!t.includes("tailwindcss");
  }
  var zt = te(Ae()), Xi = te(Di()), We = te(Ui(), 1), Zi = We.default;
  We.default.objectify, We.default.parse, We.default.async, We.default.sync;
  function Wt(e) {
    return Array.isArray(e) ? e.flatMap((t) => K([(0, Xi.default)({ bubble: ["screen"] })]).process(t, { parser: Zi }).root.nodes) : Wt([e]);
  }
  function he(e) {
    if (Object.prototype.toString.call(e) !== "[object Object]")
      return !1;
    let t = Object.getPrototypeOf(e);
    return t === null || t === Object.prototype;
  }
  var Ki = te(Ae());
  function Bt(e, t, r = !1) {
    if (e === "")
      return t;
    let n = typeof t == "string" ? (0, Ki.default)().astSync(t) : t;
    return n.walkClasses((i) => {
      let o = i.value, a = r && o.startsWith("-");
      i.value = a ? `-${e}${o.slice(1)}` : `${e}${o}`;
    }), typeof t == "string" ? n.toString() : n;
  }
  function Vt(e) {
    return e.replace(/\\,/g, "\\2c ");
  }
  var Xr = te(Fi()), eo = /^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i, to = /^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i, Te = /(?:\d+|\d*\.\d+)%?/, at = /(?:\s*,\s*|\s+)/, Zr = /\s*[,/]\s*/, Ee = /var\(--(?:[^ )]*?)\)/, ro = new RegExp(`^(rgba?)\\(\\s*(${Te.source}|${Ee.source})(?:${at.source}(${Te.source}|${Ee.source}))?(?:${at.source}(${Te.source}|${Ee.source}))?(?:${Zr.source}(${Te.source}|${Ee.source}))?\\s*\\)$`), no = new RegExp(`^(hsla?)\\(\\s*((?:${Te.source})(?:deg|rad|grad|turn)?|${Ee.source})(?:${at.source}(${Te.source}|${Ee.source}))?(?:${at.source}(${Te.source}|${Ee.source}))?(?:${Zr.source}(${Te.source}|${Ee.source}))?\\s*\\)$`);
  function qt(e, { loose: t = !1 } = {}) {
    var o, a;
    if (typeof e != "string")
      return null;
    if (e = e.trim(), e === "transparent")
      return { mode: "rgb", color: ["0", "0", "0"], alpha: "0" };
    if (e in Xr.default)
      return { mode: "rgb", color: Xr.default[e].map((u) => u.toString()) };
    let r = e.replace(to, (u, s, l, p, c) => ["#", s, s, l, l, p, p, c ? c + c : ""].join("")).match(eo);
    if (r !== null)
      return { mode: "rgb", color: [parseInt(r[1], 16), parseInt(r[2], 16), parseInt(r[3], 16)].map((u) => u.toString()), alpha: r[4] ? (parseInt(r[4], 16) / 255).toString() : void 0 };
    let n = e.match(ro) ?? e.match(no);
    if (n === null)
      return null;
    let i = [n[2], n[3], n[4]].filter(Boolean).map((u) => u.toString());
    return i.length === 2 && i[0].startsWith("var(") ? { mode: n[1], color: [i[0]], alpha: i[1] } : !t && i.length !== 3 || i.length < 3 && !i.some((u) => /^var\(.*?\)$/.test(u)) ? null : { mode: n[1], color: i, alpha: (a = (o = n[5]) == null ? void 0 : o.toString) == null ? void 0 : a.call(o) };
  }
  function Kr({ mode: e, color: t, alpha: r }) {
    let n = r !== void 0;
    return e === "rgba" || e === "hsla" ? `${e}(${t.join(", ")}${n ? `, ${r}` : ""})` : `${e}(${t.join(" ")}${n ? ` / ${r}` : ""})`;
  }
  function Re(e, t, r) {
    if (typeof e == "function")
      return e({ opacityValue: t });
    let n = qt(e, { loose: !0 });
    return n === null ? r : Kr({ ...n, alpha: t });
  }
  function oe({ color: e, property: t, variable: r }) {
    let n = [].concat(t);
    if (typeof e == "function")
      return { [r]: "1", ...Object.fromEntries(n.map((o) => [o, e({ opacityVariable: r, opacityValue: `var(${r})` })])) };
    let i = qt(e);
    return i === null ? Object.fromEntries(n.map((o) => [o, e])) : i.alpha !== void 0 ? Object.fromEntries(n.map((o) => [o, e])) : { [r]: "1", ...Object.fromEntries(n.map((o) => [o, Kr({ ...i, alpha: `var(${r})` })])) };
  }
  function de(e, t) {
    let r = [], n = [], i = 0, o = !1;
    for (let a = 0; a < e.length; a++) {
      let u = e[a];
      r.length === 0 && u === t[0] && !o && (t.length === 1 || e.slice(a, a + t.length) === t) && (n.push(e.slice(i, a)), i = a + t.length), o ? o = !1 : u === "\\" && (o = !0), u === "(" || u === "[" || u === "{" ? r.push(u) : (u === ")" && r[r.length - 1] === "(" || u === "]" && r[r.length - 1] === "[" || u === "}" && r[r.length - 1] === "{") && r.pop();
    }
    return n.push(e.slice(i)), n;
  }
  var io = /* @__PURE__ */ new Set(["inset", "inherit", "initial", "revert", "unset"]), oo = /\ +(?![^(]*\))/g, en = /^-?(\d+|\.\d+)(.*?)$/g;
  function tn(e) {
    return de(e, ",").map((t) => {
      let r = t.trim(), n = { raw: r }, i = r.split(oo), o = /* @__PURE__ */ new Set();
      for (let a of i)
        en.lastIndex = 0, !o.has("KEYWORD") && io.has(a) ? (n.keyword = a, o.add("KEYWORD")) : en.test(a) ? o.has("X") ? o.has("Y") ? o.has("BLUR") ? o.has("SPREAD") || (n.spread = a, o.add("SPREAD")) : (n.blur = a, o.add("BLUR")) : (n.y = a, o.add("Y")) : (n.x = a, o.add("X")) : n.color ? (n.unknown || (n.unknown = []), n.unknown.push(a)) : n.color = a;
      return n.valid = n.x !== void 0 && n.y !== void 0, n;
    });
  }
  function so(e) {
    return e.map((t) => t.valid ? [t.keyword, t.x, t.y, t.blur, t.spread, t.color].filter(Boolean).join(" ") : t.raw).join(", ");
  }
  var ao = ["min", "max", "clamp", "calc"];
  function Gt(e) {
    return ao.some((t) => new RegExp(`^${t}\\(.*\\)`).test(e));
  }
  var rn = "--tw-placeholder", lo = new RegExp(rn, "g");
  function ee(e, t = !0) {
    return e.startsWith("--") ? `var(${e})` : e.includes("url(") ? e.split(/(url\(.*?\))/g).filter(Boolean).map((r) => /^url\(.*?\)$/.test(r) ? r : ee(r, !1)).join("") : (e = e.replace(/([^\\])_+/g, (r, n) => n + " ".repeat(r.length - 1)).replace(/^_/g, " ").replace(/\\_/g, "_"), t && (e = e.trim()), e = e.replace(/(calc|min|max|clamp)\(.+\)/g, (r) => {
      let n = [];
      return r.replace(/var\((--.+?)[,)]/g, (i, o) => (n.push(o), i.replace(o, rn))).replace(/(-?\d*\.?\d(?!\b-\d.+[,)](?![^+\-/*])\D)(?:%|[a-z]+)?|\))([+\-/*])/g, "$1 $2 ").replace(lo, () => n.shift());
    }), e);
  }
  function nn(e) {
    return e.startsWith("url(");
  }
  function on(e) {
    return !isNaN(Number(e)) || Gt(e);
  }
  function Yt(e) {
    return e.endsWith("%") && on(e.slice(0, -1)) || Gt(e);
  }
  var co = ["cm", "mm", "Q", "in", "pc", "pt", "px", "em", "ex", "ch", "rem", "lh", "rlh", "vw", "vh", "vmin", "vmax", "vb", "vi", "svw", "svh", "lvw", "lvh", "dvw", "dvh", "cqw", "cqh", "cqi", "cqb", "cqmin", "cqmax"], uo = `(?:${co.join("|")})`;
  function Ht(e) {
    return e === "0" || new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${uo}$`).test(e) || Gt(e);
  }
  var po = /* @__PURE__ */ new Set(["thin", "medium", "thick"]);
  function fo(e) {
    return po.has(e);
  }
  function ho(e) {
    let t = tn(ee(e));
    for (let r of t)
      if (!r.valid)
        return !1;
    return !0;
  }
  function mo(e) {
    let t = 0;
    return de(e, "_").every((r) => (r = ee(r), r.startsWith("var(") ? !0 : qt(r, { loose: !0 }) !== null ? (t++, !0) : !1)) ? t > 0 : !1;
  }
  function go(e) {
    let t = 0;
    return de(e, ",").every((r) => (r = ee(r), r.startsWith("var(") ? !0 : nn(r) || yo(r) || ["element(", "image(", "cross-fade(", "image-set("].some((n) => r.startsWith(n)) ? (t++, !0) : !1)) ? t > 0 : !1;
  }
  var vo = /* @__PURE__ */ new Set(["linear-gradient", "radial-gradient", "repeating-linear-gradient", "repeating-radial-gradient", "conic-gradient"]);
  function yo(e) {
    e = ee(e);
    for (let t of vo)
      if (e.startsWith(`${t}(`))
        return !0;
    return !1;
  }
  var bo = /* @__PURE__ */ new Set(["center", "top", "right", "bottom", "left"]);
  function wo(e) {
    let t = 0;
    return de(e, "_").every((r) => (r = ee(r), r.startsWith("var(") ? !0 : bo.has(r) || Ht(r) || Yt(r) ? (t++, !0) : !1)) ? t > 0 : !1;
  }
  function xo(e) {
    let t = 0;
    return de(e, ",").every((r) => (r = ee(r), r.startsWith("var(") ? !0 : r.includes(" ") && !/(['"])([^"']+)\1/g.test(r) || /^\d/g.test(r) ? !1 : (t++, !0))) ? t > 0 : !1;
  }
  var ko = /* @__PURE__ */ new Set(["serif", "sans-serif", "monospace", "cursive", "fantasy", "system-ui", "ui-serif", "ui-sans-serif", "ui-monospace", "ui-rounded", "math", "emoji", "fangsong"]);
  function So(e) {
    return ko.has(e);
  }
  var Oo = /* @__PURE__ */ new Set(["xx-small", "x-small", "small", "medium", "large", "x-large", "x-large", "xxx-large"]);
  function Co(e) {
    return Oo.has(e);
  }
  var Ao = /* @__PURE__ */ new Set(["larger", "smaller"]);
  function To(e) {
    return Ao.has(e);
  }
  function lt(e) {
    if (e = `${e}`, e === "0")
      return "0";
    if (/^[+-]?(\d+|\d*\.\d+)(e[+-]?\d+)?(%|\w+)?$/.test(e))
      return e.replace(/^[+-]?/, (r) => r === "-" ? "" : "-");
    let t = ["var", "calc", "min", "max", "clamp"];
    for (let r of t)
      if (e.includes(`${r}(`))
        return `calc(${e} * -1)`;
  }
  function Eo(e) {
    let t = ["cover", "contain"];
    return de(e, ",").every((r) => {
      let n = de(r, "_").filter(Boolean);
      return n.length === 1 && t.includes(n[0]) ? !0 : n.length !== 1 && n.length !== 2 ? !1 : n.every((i) => Ht(i) || Yt(i) || i === "auto");
    });
  }
  wr();
  var sn = { optimizeUniversalDefaults: !1, generalizedModifiers: !0, get disableColorOpacityUtilitiesByDefault() {
    return ze.OXIDE;
  }, get relativeContentPathsByDefault() {
    return ze.OXIDE;
  } }, an = { future: ["hoverOnlyWhenSupported", "respectDefaultRingColorOpacity", "disableColorOpacityUtilitiesByDefault", "relativeContentPathsByDefault"], experimental: ["optimizeUniversalDefaults", "generalizedModifiers"] };
  function se(e, t) {
    var r, n;
    return an.future.includes(t) ? e.future === "all" || (((r = e == null ? void 0 : e.future) == null ? void 0 : r[t]) ?? sn[t] ?? !1) : an.experimental.includes(t) ? e.experimental === "all" || (((n = e == null ? void 0 : e.experimental) == null ? void 0 : n[t]) ?? sn[t] ?? !1) : !1;
  }
  function $a(e) {
  }
  function _o(e, t) {
    e.walkClasses((r) => {
      r.value = t(r.value), r.raws && r.raws.value && (r.raws.value = Vt(r.raws.value));
    });
  }
  function ln(e, t) {
    if (!_e(e))
      return;
    let r = e.slice(1, -1);
    if (t(r))
      return ee(r);
  }
  function Po(e, t = {}, r) {
    let n = t[e];
    if (n !== void 0)
      return lt(n);
    if (_e(e)) {
      let i = ln(e, r);
      return i === void 0 ? void 0 : lt(i);
    }
  }
  function ct(e, t = {}, { validate: r = () => !0 } = {}) {
    var i;
    let n = (i = t.values) == null ? void 0 : i[e];
    return n !== void 0 ? n : t.supportsNegativeValues && e.startsWith("-") ? Po(e.slice(1), t.values, r) : ln(e, r);
  }
  function _e(e) {
    return e.startsWith("[") && e.endsWith("]");
  }
  function cn(e) {
    let t = e.lastIndexOf("/");
    return t === -1 || t === e.length - 1 ? [e, void 0] : _e(e) && !e.includes("]/[") ? [e, void 0] : [e.slice(0, t), e.slice(t + 1)];
  }
  function ut(e) {
    if (typeof e == "string" && e.includes("<alpha-value>")) {
      let t = e;
      return ({ opacityValue: r = 1 }) => t.replace("<alpha-value>", r);
    }
    return e;
  }
  function un(e) {
    return e = e.slice(1, -1), e.startsWith("--") && (e = `var(${e})`), e;
  }
  function jo(e, t = {}, { tailwindConfig: r = {} } = {}) {
    var o, a, u, s, l;
    if (((o = t.values) == null ? void 0 : o[e]) !== void 0)
      return ut((a = t.values) == null ? void 0 : a[e]);
    let [n, i] = cn(e);
    if (i !== void 0) {
      let p = ((u = t.values) == null ? void 0 : u[n]) ?? (_e(n) ? n.slice(1, -1) : void 0);
      return p === void 0 ? void 0 : (p = ut(p), _e(i) ? Re(p, un(i)) : ((l = (s = r.theme) == null ? void 0 : s.opacity) == null ? void 0 : l[i]) === void 0 ? void 0 : Re(p, r.theme.opacity[i]));
    }
    return ct(e, t, { validate: mo });
  }
  function Do(e, t = {}) {
    var r;
    return (r = t.values) == null ? void 0 : r[e];
  }
  function ae(e) {
    return (t, r) => ct(t, r, { validate: e });
  }
  var Qt = { any: ct, color: jo, url: ae(nn), image: ae(go), length: ae(Ht), percentage: ae(Yt), position: ae(wo), lookup: Do, "generic-name": ae(So), "family-name": ae(xo), number: ae(on), "line-width": ae(fo), "absolute-size": ae(Co), "relative-size": ae(To), shadow: ae(ho), size: ae(Eo) }, dn = Object.keys(Qt);
  function Io(e, t) {
    let r = e.indexOf(t);
    return r === -1 ? [void 0, e] : [e.slice(0, r), e.slice(r + 1)];
  }
  function pn(e, t, r, n) {
    if (r.values && t in r.values)
      for (let { type: o } of e ?? []) {
        let a = Qt[o](t, r, { tailwindConfig: n });
        if (a !== void 0)
          return [a, o, null];
      }
    if (_e(t)) {
      let o = t.slice(1, -1), [a, u] = Io(o, ":");
      if (!/^[\w-_]+$/g.test(a))
        u = o;
      else if (a !== void 0 && !dn.includes(a))
        return [];
      if (u.length > 0 && dn.includes(a))
        return [ct(`[${u}]`, r), a, null];
    }
    let i = fn(e, t, r, n);
    for (let o of i)
      return o;
    return [];
  }
  function* fn(e, t, r, n) {
    var u;
    let i = se(n, "generalizedModifiers"), [o, a] = cn(t);
    if (i && r.modifiers != null && (r.modifiers === "any" || typeof r.modifiers == "object" && (a && _e(a) || a in r.modifiers)) || (o = t, a = void 0), a !== void 0 && o === "" && (o = "DEFAULT"), a !== void 0 && typeof r.modifiers == "object") {
      let s = ((u = r.modifiers) == null ? void 0 : u[a]) ?? null;
      s !== null ? a = s : _e(a) && (a = un(a));
    }
    for (let { type: s } of e ?? []) {
      let l = Qt[s](o, r, { tailwindConfig: n });
      l !== void 0 && (yield [l, s, a ?? null]);
    }
  }
  var Se = te(Ae()), Mo = te(Mt()), Ro = te(Ae());
  function Pe(e) {
    var r;
    let t = Ro.default.className();
    return t.value = e, Vt(((r = t == null ? void 0 : t.raws) == null ? void 0 : r.value) ?? t.value);
  }
  var Jt = ":merge";
  function dt(e, { context: t, candidate: r }) {
    let n = (t == null ? void 0 : t.tailwindConfig.prefix) ?? "", i = e.map((a) => {
      let u = (0, Se.default)().astSync(a.format);
      return { ...a, ast: a.isArbitraryVariant ? u : Bt(n, u) };
    }), o = Se.default.root({ nodes: [Se.default.selector({ nodes: [Se.default.className({ value: Pe(r) })] })] });
    for (let { ast: a } of i)
      [o, a] = Fo(o, a), a.walkNesting((u) => u.replaceWith(...o.nodes[0].nodes)), o = a;
    return o;
  }
  function hn(e) {
    let t = [];
    for (; e.prev() && e.prev().type !== "combinator"; )
      e = e.prev();
    for (; e && e.type !== "combinator"; )
      t.push(e), e = e.next();
    return t;
  }
  function Uo(e) {
    return e.sort((t, r) => t.type === "tag" && r.type === "class" ? -1 : t.type === "class" && r.type === "tag" ? 1 : t.type === "class" && r.type === "pseudo" && r.value.startsWith("::") ? -1 : t.type === "pseudo" && t.value.startsWith("::") && r.type === "class" ? 1 : e.index(t) - e.index(r)), e;
  }
  function mn(e, t) {
    let r = !1;
    e.walk((n) => {
      if (n.type === "class" && n.value === t)
        return r = !0, !1;
    }), r || e.remove();
  }
  function gn(e, t, { context: r, candidate: n, base: i }) {
    var p;
    let o = ((p = r == null ? void 0 : r.tailwindConfig) == null ? void 0 : p.separator) ?? ":";
    i = i ?? n.split(new RegExp(`\\${o}(?![^[]*\\])`)).pop();
    let a = (0, Se.default)().astSync(e);
    a.walkClasses((c) => {
      c.raws && c.value.includes(i) && (c.raws.value = Pe((0, Mo.default)(c.raws.value)));
    }), a.each((c) => mn(c, i));
    let u = Array.isArray(t) ? dt(t, { context: r, candidate: n }) : t;
    if (u === null)
      return a.toString();
    let s = Se.default.comment({ value: "/*__simple__*/" }), l = Se.default.comment({ value: "/*__simple__*/" });
    return a.walkClasses((c) => {
      if (c.value !== i)
        return;
      let h = c.parent, m = u.nodes[0].nodes;
      if (h.nodes.length === 1) {
        c.replaceWith(...m);
        return;
      }
      let f = hn(c);
      h.insertBefore(f[0], s), h.insertAfter(f[f.length - 1], l);
      for (let g of m)
        h.insertBefore(f[0], g.clone());
      c.remove(), f = hn(s);
      let d = h.index(s);
      h.nodes.splice(d, f.length, ...Uo(Se.default.selector({ nodes: f })).nodes), s.remove(), l.remove();
    }), a.walkPseudos((c) => {
      c.value === Jt && c.replaceWith(c.nodes);
    }), a.each((c) => {
      let h = vn(c);
      h.length > 0 && c.nodes.push(h.sort(No));
    }), a.toString();
  }
  function Fo(e, t) {
    let r = [];
    return e.walkPseudos((n) => {
      n.value === Jt && r.push({ pseudo: n, value: n.nodes[0].toString() });
    }), t.walkPseudos((n) => {
      if (n.value !== Jt)
        return;
      let i = n.nodes[0].toString(), o = r.find((l) => l.value === i);
      if (!o)
        return;
      let a = [], u = n.next();
      for (; u && u.type !== "combinator"; )
        a.push(u), u = u.next();
      let s = u;
      o.pseudo.parent.insertAfter(o.pseudo, Se.default.selector({ nodes: a.map((l) => l.clone()) })), n.remove(), a.forEach((l) => l.remove()), s && s.type === "combinator" && s.remove();
    }), [e, t];
  }
  var Lo = [":before", ":after", ":first-line", ":first-letter"], $o = ["::file-selector-button", "::-webkit-scrollbar", "::-webkit-scrollbar-button", "::-webkit-scrollbar-thumb", "::-webkit-scrollbar-track", "::-webkit-scrollbar-track-piece", "::-webkit-scrollbar-corner", "::-webkit-resizer"];
  function vn(e) {
    let t = [];
    for (let r of e.nodes)
      Xt(r) && (t.push(r), e.removeChild(r)), r != null && r.nodes && t.push(...vn(r));
    return t;
  }
  function No(e, t) {
    return e.type !== "pseudo" && t.type !== "pseudo" || e.type === "combinator" ^ t.type === "combinator" ? 0 : e.type === "pseudo" ^ t.type === "pseudo" ? (e.type === "pseudo") - (t.type === "pseudo") : Xt(e) - Xt(t);
  }
  function Xt(e) {
    return e.type !== "pseudo" || $o.includes(e.value) ? !1 : e.value.startsWith("::") || Lo.includes(e.value);
  }
  function yn(e) {
    return Vt(`.${Pe(e)}`);
  }
  function bn(e, t) {
    return yn(pt(e, t));
  }
  function pt(e, t) {
    return t === "DEFAULT" ? e : t === "-" || t === "-DEFAULT" ? `-${e}` : t.startsWith("-") ? `-${e}${t}` : t.startsWith("/") ? `${e}${t}` : `${e}-${t}`;
  }
  var zo = te(Hr()), wn = te(Ae());
  function ft(e) {
    return ["fontSize", "outline"].includes(e) ? (t) => (typeof t == "function" && (t = t({})), Array.isArray(t) && (t = t[0]), t) : e === "fontFamily" ? (t) => {
      typeof t == "function" && (t = t({}));
      let r = Array.isArray(t) && he(t[1]) ? t[0] : t;
      return Array.isArray(r) ? r.join(", ") : r;
    } : ["boxShadow", "transitionProperty", "transitionDuration", "transitionDelay", "transitionTimingFunction", "backgroundImage", "backgroundSize", "backgroundColor", "cursor", "animation"].includes(e) ? (t) => (typeof t == "function" && (t = t({})), Array.isArray(t) && (t = t.join(", ")), t) : ["gridTemplateColumns", "gridTemplateRows", "objectPosition"].includes(e) ? (t) => (typeof t == "function" && (t = t({})), typeof t == "string" && (t = K.list.comma(t).join(" ")), t) : (t, r = {}) => (typeof t == "function" && (t = t(r)), t);
  }
  Et(), rt();
  function R(e, t = [[e, [e]]], { filterDefault: r = !1, ...n } = {}) {
    let i = ft(e);
    return function({ matchUtilities: o, theme: a }) {
      for (let u of t) {
        let s = Array.isArray(u[0]) ? u : [u];
        o(s.reduce((l, [p, c]) => Object.assign(l, { [p]: (h) => c.reduce((m, f) => Array.isArray(f) ? Object.assign(m, { [f[0]]: f[1] }) : Object.assign(m, { [f]: i(h) }), {}) }), {}), { ...n, values: r ? Object.fromEntries(Object.entries(a(e) ?? {}).filter(([l]) => l !== "DEFAULT")) : a(e) });
      }
    };
  }
  function ht(e) {
    return e = Array.isArray(e) ? e : [e], e.map((t) => {
      let r = t.values.map((n) => n.raw !== void 0 ? n.raw : [n.min && `(min-width: ${n.min})`, n.max && `(max-width: ${n.max})`].filter(Boolean).join(" and "));
      return t.not ? `not all and ${r}` : r;
    }).join(", ");
  }
  var Wo = /* @__PURE__ */ new Set(["normal", "reverse", "alternate", "alternate-reverse"]), Bo = /* @__PURE__ */ new Set(["running", "paused"]), Vo = /* @__PURE__ */ new Set(["none", "forwards", "backwards", "both"]), qo = /* @__PURE__ */ new Set(["infinite"]), Go = /* @__PURE__ */ new Set(["linear", "ease", "ease-in", "ease-out", "ease-in-out", "step-start", "step-end"]), Yo = ["cubic-bezier", "steps"], Ho = /\,(?![^(]*\))/g, Qo = /\ +(?![^(]*\))/g, xn = /^(-?[\d.]+m?s)$/, Jo = /^(\d+)$/;
  function Xo(e) {
    return e.split(Ho).map((t) => {
      let r = t.trim(), n = { value: r }, i = r.split(Qo), o = /* @__PURE__ */ new Set();
      for (let a of i)
        !o.has("DIRECTIONS") && Wo.has(a) ? (n.direction = a, o.add("DIRECTIONS")) : !o.has("PLAY_STATES") && Bo.has(a) ? (n.playState = a, o.add("PLAY_STATES")) : !o.has("FILL_MODES") && Vo.has(a) ? (n.fillMode = a, o.add("FILL_MODES")) : !o.has("ITERATION_COUNTS") && (qo.has(a) || Jo.test(a)) ? (n.iterationCount = a, o.add("ITERATION_COUNTS")) : !o.has("TIMING_FUNCTION") && Go.has(a) || !o.has("TIMING_FUNCTION") && Yo.some((u) => a.startsWith(`${u}(`)) ? (n.timingFunction = a, o.add("TIMING_FUNCTION")) : !o.has("DURATION") && xn.test(a) ? (n.duration = a, o.add("DURATION")) : !o.has("DELAY") && xn.test(a) ? (n.delay = a, o.add("DELAY")) : o.has("NAME") ? (n.unknown || (n.unknown = []), n.unknown.push(a)) : (n.name = a, o.add("NAME"));
      return n;
    });
  }
  var kn = (e) => Object.assign({}, ...Object.entries(e ?? {}).flatMap(([t, r]) => typeof r == "object" ? Object.entries(kn(r)).map(([n, i]) => ({ [t + (n === "DEFAULT" ? "" : `-${n}`)]: i })) : [{ [`${t}`]: r }])), re = kn;
  function Y(e) {
    return typeof e == "function" ? e({}) : e;
  }
  function Be(e, t = !0) {
    return Array.isArray(e) ? e.map((r) => {
      if (t && Array.isArray(r))
        throw new Error("The tuple syntax is not supported for `screens`.");
      if (typeof r == "string")
        return { name: r.toString(), not: !1, values: [{ min: r, max: void 0 }] };
      let [n, i] = r;
      return n = n.toString(), typeof i == "string" ? { name: n, not: !1, values: [{ min: i, max: void 0 }] } : Array.isArray(i) ? { name: n, not: !1, values: i.map((o) => Sn(o)) } : { name: n, not: !1, values: [Sn(i)] };
    }) : Be(Object.entries(e ?? {}), !1);
  }
  function Zt(e) {
    return e.values.length !== 1 ? { result: !1, reason: "multiple-values" } : e.values[0].raw !== void 0 ? { result: !1, reason: "raw-values" } : e.values[0].min !== void 0 && e.values[0].max !== void 0 ? { result: !1, reason: "min-and-max" } : { result: !0, reason: null };
  }
  function Zo(e, t, r) {
    let n = Kt(t, e), i = Kt(r, e), o = Zt(n), a = Zt(i);
    if (o.reason === "multiple-values" || a.reason === "multiple-values")
      throw new Error("Attempted to sort a screen with multiple values. This should never happen. Please open a bug report.");
    if (o.reason === "raw-values" || a.reason === "raw-values")
      throw new Error("Attempted to sort a screen with raw values. This should never happen. Please open a bug report.");
    if (o.reason === "min-and-max" || a.reason === "min-and-max")
      throw new Error("Attempted to sort a screen with both min and max values. This should never happen. Please open a bug report.");
    let { min: u, max: s } = n.values[0], { min: l, max: p } = i.values[0];
    t.not && ([u, s] = [s, u]), r.not && ([l, p] = [p, l]), u = u === void 0 ? u : parseFloat(u), s = s === void 0 ? s : parseFloat(s), l = l === void 0 ? l : parseFloat(l), p = p === void 0 ? p : parseFloat(p);
    let [c, h] = e === "min" ? [u, l] : [p, s];
    return c - h;
  }
  function Kt(e, t) {
    return typeof e == "object" ? e : { name: "arbitrary-screen", values: [{ [t]: e }] };
  }
  function Sn({ "min-width": e, min: t = e, max: r, raw: n } = {}) {
    return { min: t, max: r, raw: n };
  }
  function er(e, t) {
    e.walkDecls((r) => {
      if (t.includes(r.prop)) {
        r.remove();
        return;
      }
      for (let n of t)
        r.value.includes(`/ var(${n})`) && (r.value = r.value.replace(`/ var(${n})`, ""));
    });
  }
  var le = { pseudoElementVariants: ({ addVariant: e }) => {
    e("first-letter", "&::first-letter"), e("first-line", "&::first-line"), e("marker", [({ container: t }) => (er(t, ["--tw-text-opacity"]), "& *::marker"), ({ container: t }) => (er(t, ["--tw-text-opacity"]), "&::marker")]), e("selection", ["& *::selection", "&::selection"]), e("file", "&::file-selector-button"), e("placeholder", "&::placeholder"), e("backdrop", "&::backdrop"), e("before", ({ container: t }) => (t.walkRules((r) => {
      let n = !1;
      r.walkDecls("content", () => {
        n = !0;
      }), n || r.prepend(K.decl({ prop: "content", value: "var(--tw-content)" }));
    }), "&::before")), e("after", ({ container: t }) => (t.walkRules((r) => {
      let n = !1;
      r.walkDecls("content", () => {
        n = !0;
      }), n || r.prepend(K.decl({ prop: "content", value: "var(--tw-content)" }));
    }), "&::after"));
  }, pseudoClassVariants: ({ addVariant: e, matchVariant: t, config: r }) => {
    let n = [["first", "&:first-child"], ["last", "&:last-child"], ["only", "&:only-child"], ["odd", "&:nth-child(odd)"], ["even", "&:nth-child(even)"], "first-of-type", "last-of-type", "only-of-type", ["visited", ({ container: o }) => (er(o, ["--tw-text-opacity", "--tw-border-opacity", "--tw-bg-opacity"]), "&:visited")], "target", ["open", "&[open]"], "default", "checked", "indeterminate", "placeholder-shown", "autofill", "optional", "required", "valid", "invalid", "in-range", "out-of-range", "read-only", "empty", "focus-within", ["hover", se(r(), "hoverOnlyWhenSupported") ? "@media (hover: hover) and (pointer: fine) { &:hover }" : "&:hover"], "focus", "focus-visible", "active", "enabled", "disabled"].map((o) => Array.isArray(o) ? o : [o, `&:${o}`]);
    for (let [o, a] of n)
      e(o, (u) => typeof a == "function" ? a(u) : a);
    let i = { group: (o, { modifier: a }) => a ? [`:merge(.group\\/${Pe(a)})`, " &"] : [":merge(.group)", " &"], peer: (o, { modifier: a }) => a ? [`:merge(.peer\\/${Pe(a)})`, " ~ &"] : [":merge(.peer)", " ~ &"] };
    for (let [o, a] of Object.entries(i))
      t(o, (u = "", s) => {
        let l = ee(typeof u == "function" ? u(s) : u);
        l.includes("&") || (l = "&" + l);
        let [p, c] = a("", s), h = null, m = null, f = 0;
        for (let d = 0; d < l.length; ++d) {
          let g = l[d];
          g === "&" ? h = d : g === "'" || g === '"' ? f += 1 : h !== null && g === " " && !f && (m = d);
        }
        return h !== null && m === null && (m = l.length), l.slice(0, h) + p + l.slice(h + 1, m) + c + l.slice(m);
      }, { values: Object.fromEntries(n) });
  }, directionVariants: ({ addVariant: e }) => {
    e("ltr", ':is([dir="ltr"] &)'), e("rtl", ':is([dir="rtl"] &)');
  }, reducedMotionVariants: ({ addVariant: e }) => {
    e("motion-safe", "@media (prefers-reduced-motion: no-preference)"), e("motion-reduce", "@media (prefers-reduced-motion: reduce)");
  }, darkVariants: ({ config: e, addVariant: t }) => {
    let [r, n = ".dark"] = [].concat(e("darkMode", "media"));
    r === !1 && (r = "media", fe.warn("darkmode-false", ["The `darkMode` option in your Tailwind CSS configuration is set to `false`, which now behaves the same as `media`.", "Change `darkMode` to `media` or remove it entirely.", "https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration"])), r === "class" ? t("dark", `:is(${n} &)`) : r === "media" && t("dark", "@media (prefers-color-scheme: dark)");
  }, printVariant: ({ addVariant: e }) => {
    e("print", "@media print");
  }, screenVariants: ({ theme: e, addVariant: t, matchVariant: r }) => {
    let n = e("screens") ?? {}, i = Object.values(n).every((b) => typeof b == "string"), o = Be(e("screens")), a = /* @__PURE__ */ new Set([]);
    function u(b) {
      var v;
      return ((v = b.match(/(\D+)$/)) == null ? void 0 : v[1]) ?? "(none)";
    }
    function s(b) {
      b !== void 0 && a.add(u(b));
    }
    function l(b) {
      return s(b), a.size === 1;
    }
    for (let b of o)
      for (let v of b.values)
        s(v.min), s(v.max);
    let p = a.size <= 1;
    function c(b) {
      return Object.fromEntries(o.filter((v) => Zt(v).result).map((v) => {
        let { min: x, max: k } = v.values[0];
        if (b === "min" && x !== void 0)
          return v;
        if (b === "min" && k !== void 0)
          return { ...v, not: !v.not };
        if (b === "max" && k !== void 0)
          return v;
        if (b === "max" && x !== void 0)
          return { ...v, not: !v.not };
      }).map((v) => [v.name, v]));
    }
    function h(b) {
      return (v, x) => Zo(b, v.value, x.value);
    }
    let m = h("max"), f = h("min");
    function d(b) {
      return (v) => {
        if (i)
          if (p) {
            if (typeof v == "string" && !l(v))
              return [];
          } else
            return [];
        else
          return [];
        return [`@media ${ht(Kt(v, b))}`];
      };
    }
    r("max", d("max"), { sort: m, values: i ? c("max") : {} });
    let g = "min-screens";
    for (let b of o)
      t(b.name, `@media ${ht(b)}`, { id: g, sort: i && p ? f : void 0, value: b });
    r("min", d("min"), { id: g, sort: f });
  }, supportsVariants: ({ matchVariant: e, theme: t }) => {
    e("supports", (r = "") => {
      let n = ee(r), i = /^\w*\s*\(/.test(n);
      return n = i ? n.replace(/\b(and|or|not)\b/g, " $1 ") : n, i ? `@supports ${n}` : (n.includes(":") || (n = `${n}: var(--tw)`), n.startsWith("(") && n.endsWith(")") || (n = `(${n})`), `@supports ${n}`);
    }, { values: t("supports") ?? {} });
  }, ariaVariants: ({ matchVariant: e, theme: t }) => {
    e("aria", (r) => `&[aria-${ee(r)}]`, { values: t("aria") ?? {} }), e("group-aria", (r, { modifier: n }) => n ? `:merge(.group\\/${n})[aria-${ee(r)}] &` : `:merge(.group)[aria-${ee(r)}] &`, { values: t("aria") ?? {} }), e("peer-aria", (r, { modifier: n }) => n ? `:merge(.peer\\/${n})[aria-${ee(r)}] ~ &` : `:merge(.peer)[aria-${ee(r)}] ~ &`, { values: t("aria") ?? {} });
  }, dataVariants: ({ matchVariant: e, theme: t }) => {
    e("data", (r) => `&[data-${ee(r)}]`, { values: t("data") ?? {} }), e("group-data", (r, { modifier: n }) => n ? `:merge(.group\\/${n})[data-${ee(r)}] &` : `:merge(.group)[data-${ee(r)}] &`, { values: t("data") ?? {} }), e("peer-data", (r, { modifier: n }) => n ? `:merge(.peer\\/${n})[data-${ee(r)}] ~ &` : `:merge(.peer)[data-${ee(r)}] ~ &`, { values: t("data") ?? {} });
  }, orientationVariants: ({ addVariant: e }) => {
    e("portrait", "@media (orientation: portrait)"), e("landscape", "@media (orientation: landscape)");
  }, prefersContrastVariants: ({ addVariant: e }) => {
    e("contrast-more", "@media (prefers-contrast: more)"), e("contrast-less", "@media (prefers-contrast: less)");
  } }, me = ["translate(var(--tw-translate-x), var(--tw-translate-y))", "rotate(var(--tw-rotate))", "skewX(var(--tw-skew-x))", "skewY(var(--tw-skew-y))", "scaleX(var(--tw-scale-x))", "scaleY(var(--tw-scale-y))"].join(" "), we = ["var(--tw-blur)", "var(--tw-brightness)", "var(--tw-contrast)", "var(--tw-grayscale)", "var(--tw-hue-rotate)", "var(--tw-invert)", "var(--tw-saturate)", "var(--tw-sepia)", "var(--tw-drop-shadow)"].join(" "), xe = ["var(--tw-backdrop-blur)", "var(--tw-backdrop-brightness)", "var(--tw-backdrop-contrast)", "var(--tw-backdrop-grayscale)", "var(--tw-backdrop-hue-rotate)", "var(--tw-backdrop-invert)", "var(--tw-backdrop-opacity)", "var(--tw-backdrop-saturate)", "var(--tw-backdrop-sepia)"].join(" "), Ko = { preflight: ({ addBase: e }) => {
    let t = K.parse(nt.readFileSync(At("/", "./css/preflight.css"), "utf8"));
    e([K.comment({ text: `! tailwindcss v${Qr} | MIT License | https://tailwindcss.com` }), ...t.nodes]);
  }, container: (() => {
    function e(r = []) {
      return r.flatMap((n) => n.values.map((i) => i.min)).filter((n) => n !== void 0);
    }
    function t(r, n, i) {
      if (typeof i > "u")
        return [];
      if (!(typeof i == "object" && i !== null))
        return [{ screen: "DEFAULT", minWidth: 0, padding: i }];
      let o = [];
      i.DEFAULT && o.push({ screen: "DEFAULT", minWidth: 0, padding: i.DEFAULT });
      for (let a of r)
        for (let u of n)
          for (let { min: s } of u.values)
            s === a && o.push({ minWidth: a, padding: i[u.name] });
      return o;
    }
    return function({ addComponents: r, theme: n }) {
      let i = Be(n("container.screens", n("screens"))), o = e(i), a = t(o, i, n("container.padding")), u = (l) => {
        let p = a.find((c) => c.minWidth === l);
        return p ? { paddingRight: p.padding, paddingLeft: p.padding } : {};
      }, s = Array.from(new Set(o.slice().sort((l, p) => parseInt(l) - parseInt(p)))).map((l) => ({ [`@media (min-width: ${l})`]: { ".container": { "max-width": l, ...u(l) } } }));
      r([{ ".container": Object.assign({ width: "100%" }, n("container.center", !1) ? { marginRight: "auto", marginLeft: "auto" } : {}, u(0)) }, ...s]);
    };
  })(), accessibility: ({ addUtilities: e }) => {
    e({ ".sr-only": { position: "absolute", width: "1px", height: "1px", padding: "0", margin: "-1px", overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0" }, ".not-sr-only": { position: "static", width: "auto", height: "auto", padding: "0", margin: "0", overflow: "visible", clip: "auto", whiteSpace: "normal" } });
  }, pointerEvents: ({ addUtilities: e }) => {
    e({ ".pointer-events-none": { "pointer-events": "none" }, ".pointer-events-auto": { "pointer-events": "auto" } });
  }, visibility: ({ addUtilities: e }) => {
    e({ ".visible": { visibility: "visible" }, ".invisible": { visibility: "hidden" }, ".collapse": { visibility: "collapse" } });
  }, position: ({ addUtilities: e }) => {
    e({ ".static": { position: "static" }, ".fixed": { position: "fixed" }, ".absolute": { position: "absolute" }, ".relative": { position: "relative" }, ".sticky": { position: "sticky" } });
  }, inset: R("inset", [["inset", ["inset"]], [["inset-x", ["left", "right"]], ["inset-y", ["top", "bottom"]]], [["start", ["inset-inline-start"]], ["end", ["inset-inline-end"]], ["top", ["top"]], ["right", ["right"]], ["bottom", ["bottom"]], ["left", ["left"]]]], { supportsNegativeValues: !0 }), isolation: ({ addUtilities: e }) => {
    e({ ".isolate": { isolation: "isolate" }, ".isolation-auto": { isolation: "auto" } });
  }, zIndex: R("zIndex", [["z", ["zIndex"]]], { supportsNegativeValues: !0 }), order: R("order", void 0, { supportsNegativeValues: !0 }), gridColumn: R("gridColumn", [["col", ["gridColumn"]]]), gridColumnStart: R("gridColumnStart", [["col-start", ["gridColumnStart"]]]), gridColumnEnd: R("gridColumnEnd", [["col-end", ["gridColumnEnd"]]]), gridRow: R("gridRow", [["row", ["gridRow"]]]), gridRowStart: R("gridRowStart", [["row-start", ["gridRowStart"]]]), gridRowEnd: R("gridRowEnd", [["row-end", ["gridRowEnd"]]]), float: ({ addUtilities: e }) => {
    e({ ".float-right": { float: "right" }, ".float-left": { float: "left" }, ".float-none": { float: "none" } });
  }, clear: ({ addUtilities: e }) => {
    e({ ".clear-left": { clear: "left" }, ".clear-right": { clear: "right" }, ".clear-both": { clear: "both" }, ".clear-none": { clear: "none" } });
  }, margin: R("margin", [["m", ["margin"]], [["mx", ["margin-left", "margin-right"]], ["my", ["margin-top", "margin-bottom"]]], [["ms", ["margin-inline-start"]], ["me", ["margin-inline-end"]], ["mt", ["margin-top"]], ["mr", ["margin-right"]], ["mb", ["margin-bottom"]], ["ml", ["margin-left"]]]], { supportsNegativeValues: !0 }), boxSizing: ({ addUtilities: e }) => {
    e({ ".box-border": { "box-sizing": "border-box" }, ".box-content": { "box-sizing": "content-box" } });
  }, lineClamp: ({ matchUtilities: e, addUtilities: t, theme: r }) => {
    e({ "line-clamp": (n) => ({ overflow: "hidden", display: "-webkit-box", "-webkit-box-orient": "vertical", "-webkit-line-clamp": `${n}` }) }, { values: r("lineClamp") }), t({ ".line-clamp-none": { overflow: "visible", display: "block", "-webkit-box-orient": "horizontal", "-webkit-line-clamp": "none" } });
  }, display: ({ addUtilities: e }) => {
    e({ ".block": { display: "block" }, ".inline-block": { display: "inline-block" }, ".inline": { display: "inline" }, ".flex": { display: "flex" }, ".inline-flex": { display: "inline-flex" }, ".table": { display: "table" }, ".inline-table": { display: "inline-table" }, ".table-caption": { display: "table-caption" }, ".table-cell": { display: "table-cell" }, ".table-column": { display: "table-column" }, ".table-column-group": { display: "table-column-group" }, ".table-footer-group": { display: "table-footer-group" }, ".table-header-group": { display: "table-header-group" }, ".table-row-group": { display: "table-row-group" }, ".table-row": { display: "table-row" }, ".flow-root": { display: "flow-root" }, ".grid": { display: "grid" }, ".inline-grid": { display: "inline-grid" }, ".contents": { display: "contents" }, ".list-item": { display: "list-item" }, ".hidden": { display: "none" } });
  }, aspectRatio: R("aspectRatio", [["aspect", ["aspect-ratio"]]]), height: R("height", [["h", ["height"]]]), maxHeight: R("maxHeight", [["max-h", ["maxHeight"]]]), minHeight: R("minHeight", [["min-h", ["minHeight"]]]), width: R("width", [["w", ["width"]]]), minWidth: R("minWidth", [["min-w", ["minWidth"]]]), maxWidth: R("maxWidth", [["max-w", ["maxWidth"]]]), flex: R("flex"), flexShrink: R("flexShrink", [["flex-shrink", ["flex-shrink"]], ["shrink", ["flex-shrink"]]]), flexGrow: R("flexGrow", [["flex-grow", ["flex-grow"]], ["grow", ["flex-grow"]]]), flexBasis: R("flexBasis", [["basis", ["flex-basis"]]]), tableLayout: ({ addUtilities: e }) => {
    e({ ".table-auto": { "table-layout": "auto" }, ".table-fixed": { "table-layout": "fixed" } });
  }, captionSide: ({ addUtilities: e }) => {
    e({ ".caption-top": { "caption-side": "top" }, ".caption-bottom": { "caption-side": "bottom" } });
  }, borderCollapse: ({ addUtilities: e }) => {
    e({ ".border-collapse": { "border-collapse": "collapse" }, ".border-separate": { "border-collapse": "separate" } });
  }, borderSpacing: ({ addDefaults: e, matchUtilities: t, theme: r }) => {
    e("border-spacing", { "--tw-border-spacing-x": 0, "--tw-border-spacing-y": 0 }), t({ "border-spacing": (n) => ({ "--tw-border-spacing-x": n, "--tw-border-spacing-y": n, "@defaults border-spacing": {}, "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)" }), "border-spacing-x": (n) => ({ "--tw-border-spacing-x": n, "@defaults border-spacing": {}, "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)" }), "border-spacing-y": (n) => ({ "--tw-border-spacing-y": n, "@defaults border-spacing": {}, "border-spacing": "var(--tw-border-spacing-x) var(--tw-border-spacing-y)" }) }, { values: r("borderSpacing") });
  }, transformOrigin: R("transformOrigin", [["origin", ["transformOrigin"]]]), translate: R("translate", [[["translate-x", [["@defaults transform", {}], "--tw-translate-x", ["transform", me]]], ["translate-y", [["@defaults transform", {}], "--tw-translate-y", ["transform", me]]]]], { supportsNegativeValues: !0 }), rotate: R("rotate", [["rotate", [["@defaults transform", {}], "--tw-rotate", ["transform", me]]]], { supportsNegativeValues: !0 }), skew: R("skew", [[["skew-x", [["@defaults transform", {}], "--tw-skew-x", ["transform", me]]], ["skew-y", [["@defaults transform", {}], "--tw-skew-y", ["transform", me]]]]], { supportsNegativeValues: !0 }), scale: R("scale", [["scale", [["@defaults transform", {}], "--tw-scale-x", "--tw-scale-y", ["transform", me]]], [["scale-x", [["@defaults transform", {}], "--tw-scale-x", ["transform", me]]], ["scale-y", [["@defaults transform", {}], "--tw-scale-y", ["transform", me]]]]], { supportsNegativeValues: !0 }), transform: ({ addDefaults: e, addUtilities: t }) => {
    e("transform", { "--tw-translate-x": "0", "--tw-translate-y": "0", "--tw-rotate": "0", "--tw-skew-x": "0", "--tw-skew-y": "0", "--tw-scale-x": "1", "--tw-scale-y": "1" }), t({ ".transform": { "@defaults transform": {}, transform: me }, ".transform-cpu": { transform: me }, ".transform-gpu": { transform: me.replace("translate(var(--tw-translate-x), var(--tw-translate-y))", "translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)") }, ".transform-none": { transform: "none" } });
  }, animation: ({ matchUtilities: e, theme: t, config: r }) => {
    let n = (o) => `${r("prefix")}${Pe(o)}`, i = Object.fromEntries(Object.entries(t("keyframes") ?? {}).map(([o, a]) => [o, { [`@keyframes ${n(o)}`]: a }]));
    e({ animate: (o) => {
      let a = Xo(o);
      return [...a.flatMap((u) => i[u.name]), { animation: a.map(({ name: u, value: s }) => u === void 0 || i[u] === void 0 ? s : s.replace(u, n(u))).join(", ") }];
    } }, { values: t("animation") });
  }, cursor: R("cursor"), touchAction: ({ addDefaults: e, addUtilities: t }) => {
    e("touch-action", { "--tw-pan-x": " ", "--tw-pan-y": " ", "--tw-pinch-zoom": " " });
    let r = "var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom)";
    t({ ".touch-auto": { "touch-action": "auto" }, ".touch-none": { "touch-action": "none" }, ".touch-pan-x": { "@defaults touch-action": {}, "--tw-pan-x": "pan-x", "touch-action": r }, ".touch-pan-left": { "@defaults touch-action": {}, "--tw-pan-x": "pan-left", "touch-action": r }, ".touch-pan-right": { "@defaults touch-action": {}, "--tw-pan-x": "pan-right", "touch-action": r }, ".touch-pan-y": { "@defaults touch-action": {}, "--tw-pan-y": "pan-y", "touch-action": r }, ".touch-pan-up": { "@defaults touch-action": {}, "--tw-pan-y": "pan-up", "touch-action": r }, ".touch-pan-down": { "@defaults touch-action": {}, "--tw-pan-y": "pan-down", "touch-action": r }, ".touch-pinch-zoom": { "@defaults touch-action": {}, "--tw-pinch-zoom": "pinch-zoom", "touch-action": r }, ".touch-manipulation": { "touch-action": "manipulation" } });
  }, userSelect: ({ addUtilities: e }) => {
    e({ ".select-none": { "user-select": "none" }, ".select-text": { "user-select": "text" }, ".select-all": { "user-select": "all" }, ".select-auto": { "user-select": "auto" } });
  }, resize: ({ addUtilities: e }) => {
    e({ ".resize-none": { resize: "none" }, ".resize-y": { resize: "vertical" }, ".resize-x": { resize: "horizontal" }, ".resize": { resize: "both" } });
  }, scrollSnapType: ({ addDefaults: e, addUtilities: t }) => {
    e("scroll-snap-type", { "--tw-scroll-snap-strictness": "proximity" }), t({ ".snap-none": { "scroll-snap-type": "none" }, ".snap-x": { "@defaults scroll-snap-type": {}, "scroll-snap-type": "x var(--tw-scroll-snap-strictness)" }, ".snap-y": { "@defaults scroll-snap-type": {}, "scroll-snap-type": "y var(--tw-scroll-snap-strictness)" }, ".snap-both": { "@defaults scroll-snap-type": {}, "scroll-snap-type": "both var(--tw-scroll-snap-strictness)" }, ".snap-mandatory": { "--tw-scroll-snap-strictness": "mandatory" }, ".snap-proximity": { "--tw-scroll-snap-strictness": "proximity" } });
  }, scrollSnapAlign: ({ addUtilities: e }) => {
    e({ ".snap-start": { "scroll-snap-align": "start" }, ".snap-end": { "scroll-snap-align": "end" }, ".snap-center": { "scroll-snap-align": "center" }, ".snap-align-none": { "scroll-snap-align": "none" } });
  }, scrollSnapStop: ({ addUtilities: e }) => {
    e({ ".snap-normal": { "scroll-snap-stop": "normal" }, ".snap-always": { "scroll-snap-stop": "always" } });
  }, scrollMargin: R("scrollMargin", [["scroll-m", ["scroll-margin"]], [["scroll-mx", ["scroll-margin-left", "scroll-margin-right"]], ["scroll-my", ["scroll-margin-top", "scroll-margin-bottom"]]], [["scroll-ms", ["scroll-margin-inline-start"]], ["scroll-me", ["scroll-margin-inline-end"]], ["scroll-mt", ["scroll-margin-top"]], ["scroll-mr", ["scroll-margin-right"]], ["scroll-mb", ["scroll-margin-bottom"]], ["scroll-ml", ["scroll-margin-left"]]]], { supportsNegativeValues: !0 }), scrollPadding: R("scrollPadding", [["scroll-p", ["scroll-padding"]], [["scroll-px", ["scroll-padding-left", "scroll-padding-right"]], ["scroll-py", ["scroll-padding-top", "scroll-padding-bottom"]]], [["scroll-ps", ["scroll-padding-inline-start"]], ["scroll-pe", ["scroll-padding-inline-end"]], ["scroll-pt", ["scroll-padding-top"]], ["scroll-pr", ["scroll-padding-right"]], ["scroll-pb", ["scroll-padding-bottom"]], ["scroll-pl", ["scroll-padding-left"]]]]), listStylePosition: ({ addUtilities: e }) => {
    e({ ".list-inside": { "list-style-position": "inside" }, ".list-outside": { "list-style-position": "outside" } });
  }, listStyleType: R("listStyleType", [["list", ["listStyleType"]]]), listStyleImage: R("listStyleImage", [["list-image", ["listStyleImage"]]]), appearance: ({ addUtilities: e }) => {
    e({ ".appearance-none": { appearance: "none" } });
  }, columns: R("columns", [["columns", ["columns"]]]), breakBefore: ({ addUtilities: e }) => {
    e({ ".break-before-auto": { "break-before": "auto" }, ".break-before-avoid": { "break-before": "avoid" }, ".break-before-all": { "break-before": "all" }, ".break-before-avoid-page": { "break-before": "avoid-page" }, ".break-before-page": { "break-before": "page" }, ".break-before-left": { "break-before": "left" }, ".break-before-right": { "break-before": "right" }, ".break-before-column": { "break-before": "column" } });
  }, breakInside: ({ addUtilities: e }) => {
    e({ ".break-inside-auto": { "break-inside": "auto" }, ".break-inside-avoid": { "break-inside": "avoid" }, ".break-inside-avoid-page": { "break-inside": "avoid-page" }, ".break-inside-avoid-column": { "break-inside": "avoid-column" } });
  }, breakAfter: ({ addUtilities: e }) => {
    e({ ".break-after-auto": { "break-after": "auto" }, ".break-after-avoid": { "break-after": "avoid" }, ".break-after-all": { "break-after": "all" }, ".break-after-avoid-page": { "break-after": "avoid-page" }, ".break-after-page": { "break-after": "page" }, ".break-after-left": { "break-after": "left" }, ".break-after-right": { "break-after": "right" }, ".break-after-column": { "break-after": "column" } });
  }, gridAutoColumns: R("gridAutoColumns", [["auto-cols", ["gridAutoColumns"]]]), gridAutoFlow: ({ addUtilities: e }) => {
    e({ ".grid-flow-row": { gridAutoFlow: "row" }, ".grid-flow-col": { gridAutoFlow: "column" }, ".grid-flow-dense": { gridAutoFlow: "dense" }, ".grid-flow-row-dense": { gridAutoFlow: "row dense" }, ".grid-flow-col-dense": { gridAutoFlow: "column dense" } });
  }, gridAutoRows: R("gridAutoRows", [["auto-rows", ["gridAutoRows"]]]), gridTemplateColumns: R("gridTemplateColumns", [["grid-cols", ["gridTemplateColumns"]]]), gridTemplateRows: R("gridTemplateRows", [["grid-rows", ["gridTemplateRows"]]]), flexDirection: ({ addUtilities: e }) => {
    e({ ".flex-row": { "flex-direction": "row" }, ".flex-row-reverse": { "flex-direction": "row-reverse" }, ".flex-col": { "flex-direction": "column" }, ".flex-col-reverse": { "flex-direction": "column-reverse" } });
  }, flexWrap: ({ addUtilities: e }) => {
    e({ ".flex-wrap": { "flex-wrap": "wrap" }, ".flex-wrap-reverse": { "flex-wrap": "wrap-reverse" }, ".flex-nowrap": { "flex-wrap": "nowrap" } });
  }, placeContent: ({ addUtilities: e }) => {
    e({ ".place-content-center": { "place-content": "center" }, ".place-content-start": { "place-content": "start" }, ".place-content-end": { "place-content": "end" }, ".place-content-between": { "place-content": "space-between" }, ".place-content-around": { "place-content": "space-around" }, ".place-content-evenly": { "place-content": "space-evenly" }, ".place-content-baseline": { "place-content": "baseline" }, ".place-content-stretch": { "place-content": "stretch" } });
  }, placeItems: ({ addUtilities: e }) => {
    e({ ".place-items-start": { "place-items": "start" }, ".place-items-end": { "place-items": "end" }, ".place-items-center": { "place-items": "center" }, ".place-items-baseline": { "place-items": "baseline" }, ".place-items-stretch": { "place-items": "stretch" } });
  }, alignContent: ({ addUtilities: e }) => {
    e({ ".content-normal": { "align-content": "normal" }, ".content-center": { "align-content": "center" }, ".content-start": { "align-content": "flex-start" }, ".content-end": { "align-content": "flex-end" }, ".content-between": { "align-content": "space-between" }, ".content-around": { "align-content": "space-around" }, ".content-evenly": { "align-content": "space-evenly" }, ".content-baseline": { "align-content": "baseline" }, ".content-stretch": { "align-content": "stretch" } });
  }, alignItems: ({ addUtilities: e }) => {
    e({ ".items-start": { "align-items": "flex-start" }, ".items-end": { "align-items": "flex-end" }, ".items-center": { "align-items": "center" }, ".items-baseline": { "align-items": "baseline" }, ".items-stretch": { "align-items": "stretch" } });
  }, justifyContent: ({ addUtilities: e }) => {
    e({ ".justify-normal": { "justify-content": "normal" }, ".justify-start": { "justify-content": "flex-start" }, ".justify-end": { "justify-content": "flex-end" }, ".justify-center": { "justify-content": "center" }, ".justify-between": { "justify-content": "space-between" }, ".justify-around": { "justify-content": "space-around" }, ".justify-evenly": { "justify-content": "space-evenly" }, ".justify-stretch": { "justify-content": "stretch" } });
  }, justifyItems: ({ addUtilities: e }) => {
    e({ ".justify-items-start": { "justify-items": "start" }, ".justify-items-end": { "justify-items": "end" }, ".justify-items-center": { "justify-items": "center" }, ".justify-items-stretch": { "justify-items": "stretch" } });
  }, gap: R("gap", [["gap", ["gap"]], [["gap-x", ["columnGap"]], ["gap-y", ["rowGap"]]]]), space: ({ matchUtilities: e, addUtilities: t, theme: r }) => {
    e({ "space-x": (n) => (n = n === "0" ? "0px" : n, ze.OXIDE ? { "& > :not([hidden]) ~ :not([hidden])": { "--tw-space-x-reverse": "0", "margin-inline-end": `calc(${n} * var(--tw-space-x-reverse))`, "margin-inline-start": `calc(${n} * calc(1 - var(--tw-space-x-reverse)))` } } : { "& > :not([hidden]) ~ :not([hidden])": { "--tw-space-x-reverse": "0", "margin-right": `calc(${n} * var(--tw-space-x-reverse))`, "margin-left": `calc(${n} * calc(1 - var(--tw-space-x-reverse)))` } }), "space-y": (n) => (n = n === "0" ? "0px" : n, { "& > :not([hidden]) ~ :not([hidden])": { "--tw-space-y-reverse": "0", "margin-top": `calc(${n} * calc(1 - var(--tw-space-y-reverse)))`, "margin-bottom": `calc(${n} * var(--tw-space-y-reverse))` } }) }, { values: r("space"), supportsNegativeValues: !0 }), t({ ".space-y-reverse > :not([hidden]) ~ :not([hidden])": { "--tw-space-y-reverse": "1" }, ".space-x-reverse > :not([hidden]) ~ :not([hidden])": { "--tw-space-x-reverse": "1" } });
  }, divideWidth: ({ matchUtilities: e, addUtilities: t, theme: r }) => {
    e({ "divide-x": (n) => (n = n === "0" ? "0px" : n, ze.OXIDE ? { "& > :not([hidden]) ~ :not([hidden])": { "@defaults border-width": {}, "--tw-divide-x-reverse": "0", "border-inline-end-width": `calc(${n} * var(--tw-divide-x-reverse))`, "border-inline-start-width": `calc(${n} * calc(1 - var(--tw-divide-x-reverse)))` } } : { "& > :not([hidden]) ~ :not([hidden])": { "@defaults border-width": {}, "--tw-divide-x-reverse": "0", "border-right-width": `calc(${n} * var(--tw-divide-x-reverse))`, "border-left-width": `calc(${n} * calc(1 - var(--tw-divide-x-reverse)))` } }), "divide-y": (n) => (n = n === "0" ? "0px" : n, { "& > :not([hidden]) ~ :not([hidden])": { "@defaults border-width": {}, "--tw-divide-y-reverse": "0", "border-top-width": `calc(${n} * calc(1 - var(--tw-divide-y-reverse)))`, "border-bottom-width": `calc(${n} * var(--tw-divide-y-reverse))` } }) }, { values: r("divideWidth"), type: ["line-width", "length", "any"] }), t({ ".divide-y-reverse > :not([hidden]) ~ :not([hidden])": { "@defaults border-width": {}, "--tw-divide-y-reverse": "1" }, ".divide-x-reverse > :not([hidden]) ~ :not([hidden])": { "@defaults border-width": {}, "--tw-divide-x-reverse": "1" } });
  }, divideStyle: ({ addUtilities: e }) => {
    e({ ".divide-solid > :not([hidden]) ~ :not([hidden])": { "border-style": "solid" }, ".divide-dashed > :not([hidden]) ~ :not([hidden])": { "border-style": "dashed" }, ".divide-dotted > :not([hidden]) ~ :not([hidden])": { "border-style": "dotted" }, ".divide-double > :not([hidden]) ~ :not([hidden])": { "border-style": "double" }, ".divide-none > :not([hidden]) ~ :not([hidden])": { "border-style": "none" } });
  }, divideColor: ({ matchUtilities: e, theme: t, corePlugins: r }) => {
    e({ divide: (n) => r("divideOpacity") ? { "& > :not([hidden]) ~ :not([hidden])": oe({ color: n, property: "border-color", variable: "--tw-divide-opacity" }) } : { "& > :not([hidden]) ~ :not([hidden])": { "border-color": Y(n) } } }, { values: (({ DEFAULT: n, ...i }) => i)(re(t("divideColor"))), type: ["color", "any"] });
  }, divideOpacity: ({ matchUtilities: e, theme: t }) => {
    e({ "divide-opacity": (r) => ({ "& > :not([hidden]) ~ :not([hidden])": { "--tw-divide-opacity": r } }) }, { values: t("divideOpacity") });
  }, placeSelf: ({ addUtilities: e }) => {
    e({ ".place-self-auto": { "place-self": "auto" }, ".place-self-start": { "place-self": "start" }, ".place-self-end": { "place-self": "end" }, ".place-self-center": { "place-self": "center" }, ".place-self-stretch": { "place-self": "stretch" } });
  }, alignSelf: ({ addUtilities: e }) => {
    e({ ".self-auto": { "align-self": "auto" }, ".self-start": { "align-self": "flex-start" }, ".self-end": { "align-self": "flex-end" }, ".self-center": { "align-self": "center" }, ".self-stretch": { "align-self": "stretch" }, ".self-baseline": { "align-self": "baseline" } });
  }, justifySelf: ({ addUtilities: e }) => {
    e({ ".justify-self-auto": { "justify-self": "auto" }, ".justify-self-start": { "justify-self": "start" }, ".justify-self-end": { "justify-self": "end" }, ".justify-self-center": { "justify-self": "center" }, ".justify-self-stretch": { "justify-self": "stretch" } });
  }, overflow: ({ addUtilities: e }) => {
    e({ ".overflow-auto": { overflow: "auto" }, ".overflow-hidden": { overflow: "hidden" }, ".overflow-clip": { overflow: "clip" }, ".overflow-visible": { overflow: "visible" }, ".overflow-scroll": { overflow: "scroll" }, ".overflow-x-auto": { "overflow-x": "auto" }, ".overflow-y-auto": { "overflow-y": "auto" }, ".overflow-x-hidden": { "overflow-x": "hidden" }, ".overflow-y-hidden": { "overflow-y": "hidden" }, ".overflow-x-clip": { "overflow-x": "clip" }, ".overflow-y-clip": { "overflow-y": "clip" }, ".overflow-x-visible": { "overflow-x": "visible" }, ".overflow-y-visible": { "overflow-y": "visible" }, ".overflow-x-scroll": { "overflow-x": "scroll" }, ".overflow-y-scroll": { "overflow-y": "scroll" } });
  }, overscrollBehavior: ({ addUtilities: e }) => {
    e({ ".overscroll-auto": { "overscroll-behavior": "auto" }, ".overscroll-contain": { "overscroll-behavior": "contain" }, ".overscroll-none": { "overscroll-behavior": "none" }, ".overscroll-y-auto": { "overscroll-behavior-y": "auto" }, ".overscroll-y-contain": { "overscroll-behavior-y": "contain" }, ".overscroll-y-none": { "overscroll-behavior-y": "none" }, ".overscroll-x-auto": { "overscroll-behavior-x": "auto" }, ".overscroll-x-contain": { "overscroll-behavior-x": "contain" }, ".overscroll-x-none": { "overscroll-behavior-x": "none" } });
  }, scrollBehavior: ({ addUtilities: e }) => {
    e({ ".scroll-auto": { "scroll-behavior": "auto" }, ".scroll-smooth": { "scroll-behavior": "smooth" } });
  }, textOverflow: ({ addUtilities: e }) => {
    e({ ".truncate": { overflow: "hidden", "text-overflow": "ellipsis", "white-space": "nowrap" }, ".overflow-ellipsis": { "text-overflow": "ellipsis" }, ".text-ellipsis": { "text-overflow": "ellipsis" }, ".text-clip": { "text-overflow": "clip" } });
  }, hyphens: ({ addUtilities: e }) => {
    e({ ".hyphens-none": { hyphens: "none" }, ".hyphens-manual": { hyphens: "manual" }, ".hyphens-auto": { hyphens: "auto" } });
  }, whitespace: ({ addUtilities: e }) => {
    e({ ".whitespace-normal": { "white-space": "normal" }, ".whitespace-nowrap": { "white-space": "nowrap" }, ".whitespace-pre": { "white-space": "pre" }, ".whitespace-pre-line": { "white-space": "pre-line" }, ".whitespace-pre-wrap": { "white-space": "pre-wrap" }, ".whitespace-break-spaces": { "white-space": "break-spaces" } });
  }, wordBreak: ({ addUtilities: e }) => {
    e({ ".break-normal": { "overflow-wrap": "normal", "word-break": "normal" }, ".break-words": { "overflow-wrap": "break-word" }, ".break-all": { "word-break": "break-all" }, ".break-keep": { "word-break": "keep-all" } });
  }, borderRadius: R("borderRadius", [["rounded", ["border-radius"]], [["rounded-s", ["border-start-start-radius", "border-end-start-radius"]], ["rounded-e", ["border-start-end-radius", "border-end-end-radius"]], ["rounded-t", ["border-top-left-radius", "border-top-right-radius"]], ["rounded-r", ["border-top-right-radius", "border-bottom-right-radius"]], ["rounded-b", ["border-bottom-right-radius", "border-bottom-left-radius"]], ["rounded-l", ["border-top-left-radius", "border-bottom-left-radius"]]], [["rounded-ss", ["border-start-start-radius"]], ["rounded-se", ["border-start-end-radius"]], ["rounded-ee", ["border-end-end-radius"]], ["rounded-es", ["border-end-start-radius"]], ["rounded-tl", ["border-top-left-radius"]], ["rounded-tr", ["border-top-right-radius"]], ["rounded-br", ["border-bottom-right-radius"]], ["rounded-bl", ["border-bottom-left-radius"]]]]), borderWidth: R("borderWidth", [["border", [["@defaults border-width", {}], "border-width"]], [["border-x", [["@defaults border-width", {}], "border-left-width", "border-right-width"]], ["border-y", [["@defaults border-width", {}], "border-top-width", "border-bottom-width"]]], [["border-s", [["@defaults border-width", {}], "border-inline-start-width"]], ["border-e", [["@defaults border-width", {}], "border-inline-end-width"]], ["border-t", [["@defaults border-width", {}], "border-top-width"]], ["border-r", [["@defaults border-width", {}], "border-right-width"]], ["border-b", [["@defaults border-width", {}], "border-bottom-width"]], ["border-l", [["@defaults border-width", {}], "border-left-width"]]]], { type: ["line-width", "length"] }), borderStyle: ({ addUtilities: e }) => {
    e({ ".border-solid": { "border-style": "solid" }, ".border-dashed": { "border-style": "dashed" }, ".border-dotted": { "border-style": "dotted" }, ".border-double": { "border-style": "double" }, ".border-hidden": { "border-style": "hidden" }, ".border-none": { "border-style": "none" } });
  }, borderColor: ({ matchUtilities: e, theme: t, corePlugins: r }) => {
    e({ border: (n) => r("borderOpacity") ? oe({ color: n, property: "border-color", variable: "--tw-border-opacity" }) : { "border-color": Y(n) } }, { values: (({ DEFAULT: n, ...i }) => i)(re(t("borderColor"))), type: ["color", "any"] }), e({ "border-x": (n) => r("borderOpacity") ? oe({ color: n, property: ["border-left-color", "border-right-color"], variable: "--tw-border-opacity" }) : { "border-left-color": Y(n), "border-right-color": Y(n) }, "border-y": (n) => r("borderOpacity") ? oe({ color: n, property: ["border-top-color", "border-bottom-color"], variable: "--tw-border-opacity" }) : { "border-top-color": Y(n), "border-bottom-color": Y(n) } }, { values: (({ DEFAULT: n, ...i }) => i)(re(t("borderColor"))), type: ["color", "any"] }), e({ "border-s": (n) => r("borderOpacity") ? oe({ color: n, property: "border-inline-start-color", variable: "--tw-border-opacity" }) : { "border-inline-start-color": Y(n) }, "border-e": (n) => r("borderOpacity") ? oe({ color: n, property: "border-inline-end-color", variable: "--tw-border-opacity" }) : { "border-inline-end-color": Y(n) }, "border-t": (n) => r("borderOpacity") ? oe({ color: n, property: "border-top-color", variable: "--tw-border-opacity" }) : { "border-top-color": Y(n) }, "border-r": (n) => r("borderOpacity") ? oe({ color: n, property: "border-right-color", variable: "--tw-border-opacity" }) : { "border-right-color": Y(n) }, "border-b": (n) => r("borderOpacity") ? oe({ color: n, property: "border-bottom-color", variable: "--tw-border-opacity" }) : { "border-bottom-color": Y(n) }, "border-l": (n) => r("borderOpacity") ? oe({ color: n, property: "border-left-color", variable: "--tw-border-opacity" }) : { "border-left-color": Y(n) } }, { values: (({ DEFAULT: n, ...i }) => i)(re(t("borderColor"))), type: ["color", "any"] });
  }, borderOpacity: R("borderOpacity", [["border-opacity", ["--tw-border-opacity"]]]), backgroundColor: ({ matchUtilities: e, theme: t, corePlugins: r }) => {
    e({ bg: (n) => r("backgroundOpacity") ? oe({ color: n, property: "background-color", variable: "--tw-bg-opacity" }) : { "background-color": Y(n) } }, { values: re(t("backgroundColor")), type: ["color", "any"] });
  }, backgroundOpacity: R("backgroundOpacity", [["bg-opacity", ["--tw-bg-opacity"]]]), backgroundImage: R("backgroundImage", [["bg", ["background-image"]]], { type: ["lookup", "image", "url"] }), gradientColorStops: (() => {
    function e(t) {
      return Re(t, 0, "rgb(255 255 255 / 0)");
    }
    return function({ matchUtilities: t, theme: r }) {
      let n = { values: re(r("gradientColorStops")), type: ["color", "any"] }, i = { values: r("gradientColorStopPositions"), type: ["length", "percentage"] };
      t({ from: (o) => {
        let a = e(o);
        return { "--tw-gradient-from": `${Y(o)} var(--tw-gradient-from-position)`, "--tw-gradient-from-position": " ", "--tw-gradient-to": `${a}  var(--tw-gradient-from-position)`, "--tw-gradient-to-position": " ", "--tw-gradient-stops": "var(--tw-gradient-from), var(--tw-gradient-to)" };
      } }, n), t({ from: (o) => ({ "--tw-gradient-from-position": o }) }, i), t({ via: (o) => ({ "--tw-gradient-via-position": " ", "--tw-gradient-to": `${e(o)}  var(--tw-gradient-to-position)`, "--tw-gradient-to-position": " ", "--tw-gradient-stops": `var(--tw-gradient-from), ${Y(o)} var(--tw-gradient-via-position), var(--tw-gradient-to)` }) }, n), t({ via: (o) => ({ "--tw-gradient-via-position": o }) }, i), t({ to: (o) => ({ "--tw-gradient-to": `${Y(o)} var(--tw-gradient-to-position)`, "--tw-gradient-to-position": " " }) }, n), t({ to: (o) => ({ "--tw-gradient-to-position": o }) }, i);
    };
  })(), boxDecorationBreak: ({ addUtilities: e }) => {
    e({ ".decoration-slice": { "box-decoration-break": "slice" }, ".decoration-clone": { "box-decoration-break": "clone" }, ".box-decoration-slice": { "box-decoration-break": "slice" }, ".box-decoration-clone": { "box-decoration-break": "clone" } });
  }, backgroundSize: R("backgroundSize", [["bg", ["background-size"]]], { type: ["lookup", "length", "percentage", "size"] }), backgroundAttachment: ({ addUtilities: e }) => {
    e({ ".bg-fixed": { "background-attachment": "fixed" }, ".bg-local": { "background-attachment": "local" }, ".bg-scroll": { "background-attachment": "scroll" } });
  }, backgroundClip: ({ addUtilities: e }) => {
    e({ ".bg-clip-border": { "background-clip": "border-box" }, ".bg-clip-padding": { "background-clip": "padding-box" }, ".bg-clip-content": { "background-clip": "content-box" }, ".bg-clip-text": { "background-clip": "text" } });
  }, backgroundPosition: R("backgroundPosition", [["bg", ["background-position"]]], { type: ["lookup", ["position", { preferOnConflict: !0 }]] }), backgroundRepeat: ({ addUtilities: e }) => {
    e({ ".bg-repeat": { "background-repeat": "repeat" }, ".bg-no-repeat": { "background-repeat": "no-repeat" }, ".bg-repeat-x": { "background-repeat": "repeat-x" }, ".bg-repeat-y": { "background-repeat": "repeat-y" }, ".bg-repeat-round": { "background-repeat": "round" }, ".bg-repeat-space": { "background-repeat": "space" } });
  }, backgroundOrigin: ({ addUtilities: e }) => {
    e({ ".bg-origin-border": { "background-origin": "border-box" }, ".bg-origin-padding": { "background-origin": "padding-box" }, ".bg-origin-content": { "background-origin": "content-box" } });
  }, fill: ({ matchUtilities: e, theme: t }) => {
    e({ fill: (r) => ({ fill: Y(r) }) }, { values: re(t("fill")), type: ["color", "any"] });
  }, stroke: ({ matchUtilities: e, theme: t }) => {
    e({ stroke: (r) => ({ stroke: Y(r) }) }, { values: re(t("stroke")), type: ["color", "url", "any"] });
  }, strokeWidth: R("strokeWidth", [["stroke", ["stroke-width"]]], { type: ["length", "number", "percentage"] }), objectFit: ({ addUtilities: e }) => {
    e({ ".object-contain": { "object-fit": "contain" }, ".object-cover": { "object-fit": "cover" }, ".object-fill": { "object-fit": "fill" }, ".object-none": { "object-fit": "none" }, ".object-scale-down": { "object-fit": "scale-down" } });
  }, objectPosition: R("objectPosition", [["object", ["object-position"]]]), padding: R("padding", [["p", ["padding"]], [["px", ["padding-left", "padding-right"]], ["py", ["padding-top", "padding-bottom"]]], [["ps", ["padding-inline-start"]], ["pe", ["padding-inline-end"]], ["pt", ["padding-top"]], ["pr", ["padding-right"]], ["pb", ["padding-bottom"]], ["pl", ["padding-left"]]]]), textAlign: ({ addUtilities: e }) => {
    e({ ".text-left": { "text-align": "left" }, ".text-center": { "text-align": "center" }, ".text-right": { "text-align": "right" }, ".text-justify": { "text-align": "justify" }, ".text-start": { "text-align": "start" }, ".text-end": { "text-align": "end" } });
  }, textIndent: R("textIndent", [["indent", ["text-indent"]]], { supportsNegativeValues: !0 }), verticalAlign: ({ addUtilities: e, matchUtilities: t }) => {
    e({ ".align-baseline": { "vertical-align": "baseline" }, ".align-top": { "vertical-align": "top" }, ".align-middle": { "vertical-align": "middle" }, ".align-bottom": { "vertical-align": "bottom" }, ".align-text-top": { "vertical-align": "text-top" }, ".align-text-bottom": { "vertical-align": "text-bottom" }, ".align-sub": { "vertical-align": "sub" }, ".align-super": { "vertical-align": "super" } }), t({ align: (r) => ({ "vertical-align": r }) });
  }, fontFamily: ({ matchUtilities: e, theme: t }) => {
    e({ font: (r) => {
      let [n, i = {}] = Array.isArray(r) && he(r[1]) ? r : [r], { fontFeatureSettings: o, fontVariationSettings: a } = i;
      return { "font-family": Array.isArray(n) ? n.join(", ") : n, ...o === void 0 ? {} : { "font-feature-settings": o }, ...a === void 0 ? {} : { "font-variation-settings": a } };
    } }, { values: t("fontFamily"), type: ["lookup", "generic-name", "family-name"] });
  }, fontSize: ({ matchUtilities: e, theme: t }) => {
    e({ text: (r, { modifier: n }) => {
      let [i, o] = Array.isArray(r) ? r : [r];
      if (n)
        return { "font-size": i, "line-height": n };
      let { lineHeight: a, letterSpacing: u, fontWeight: s } = he(o) ? o : { lineHeight: o };
      return { "font-size": i, ...a === void 0 ? {} : { "line-height": a }, ...u === void 0 ? {} : { "letter-spacing": u }, ...s === void 0 ? {} : { "font-weight": s } };
    } }, { values: t("fontSize"), modifiers: t("lineHeight"), type: ["absolute-size", "relative-size", "length", "percentage"] });
  }, fontWeight: R("fontWeight", [["font", ["fontWeight"]]], { type: ["lookup", "number", "any"] }), textTransform: ({ addUtilities: e }) => {
    e({ ".uppercase": { "text-transform": "uppercase" }, ".lowercase": { "text-transform": "lowercase" }, ".capitalize": { "text-transform": "capitalize" }, ".normal-case": { "text-transform": "none" } });
  }, fontStyle: ({ addUtilities: e }) => {
    e({ ".italic": { "font-style": "italic" }, ".not-italic": { "font-style": "normal" } });
  }, fontVariantNumeric: ({ addDefaults: e, addUtilities: t }) => {
    let r = "var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)";
    e("font-variant-numeric", { "--tw-ordinal": " ", "--tw-slashed-zero": " ", "--tw-numeric-figure": " ", "--tw-numeric-spacing": " ", "--tw-numeric-fraction": " " }), t({ ".normal-nums": { "font-variant-numeric": "normal" }, ".ordinal": { "@defaults font-variant-numeric": {}, "--tw-ordinal": "ordinal", "font-variant-numeric": r }, ".slashed-zero": { "@defaults font-variant-numeric": {}, "--tw-slashed-zero": "slashed-zero", "font-variant-numeric": r }, ".lining-nums": { "@defaults font-variant-numeric": {}, "--tw-numeric-figure": "lining-nums", "font-variant-numeric": r }, ".oldstyle-nums": { "@defaults font-variant-numeric": {}, "--tw-numeric-figure": "oldstyle-nums", "font-variant-numeric": r }, ".proportional-nums": { "@defaults font-variant-numeric": {}, "--tw-numeric-spacing": "proportional-nums", "font-variant-numeric": r }, ".tabular-nums": { "@defaults font-variant-numeric": {}, "--tw-numeric-spacing": "tabular-nums", "font-variant-numeric": r }, ".diagonal-fractions": { "@defaults font-variant-numeric": {}, "--tw-numeric-fraction": "diagonal-fractions", "font-variant-numeric": r }, ".stacked-fractions": { "@defaults font-variant-numeric": {}, "--tw-numeric-fraction": "stacked-fractions", "font-variant-numeric": r } });
  }, lineHeight: R("lineHeight", [["leading", ["lineHeight"]]]), letterSpacing: R("letterSpacing", [["tracking", ["letterSpacing"]]], { supportsNegativeValues: !0 }), textColor: ({ matchUtilities: e, theme: t, corePlugins: r }) => {
    e({ text: (n) => r("textOpacity") ? oe({ color: n, property: "color", variable: "--tw-text-opacity" }) : { color: Y(n) } }, { values: re(t("textColor")), type: ["color", "any"] });
  }, textOpacity: R("textOpacity", [["text-opacity", ["--tw-text-opacity"]]]), textDecoration: ({ addUtilities: e }) => {
    e({ ".underline": { "text-decoration-line": "underline" }, ".overline": { "text-decoration-line": "overline" }, ".line-through": { "text-decoration-line": "line-through" }, ".no-underline": { "text-decoration-line": "none" } });
  }, textDecorationColor: ({ matchUtilities: e, theme: t }) => {
    e({ decoration: (r) => ({ "text-decoration-color": Y(r) }) }, { values: re(t("textDecorationColor")), type: ["color", "any"] });
  }, textDecorationStyle: ({ addUtilities: e }) => {
    e({ ".decoration-solid": { "text-decoration-style": "solid" }, ".decoration-double": { "text-decoration-style": "double" }, ".decoration-dotted": { "text-decoration-style": "dotted" }, ".decoration-dashed": { "text-decoration-style": "dashed" }, ".decoration-wavy": { "text-decoration-style": "wavy" } });
  }, textDecorationThickness: R("textDecorationThickness", [["decoration", ["text-decoration-thickness"]]], { type: ["length", "percentage"] }), textUnderlineOffset: R("textUnderlineOffset", [["underline-offset", ["text-underline-offset"]]], { type: ["length", "percentage", "any"] }), fontSmoothing: ({ addUtilities: e }) => {
    e({ ".antialiased": { "-webkit-font-smoothing": "antialiased", "-moz-osx-font-smoothing": "grayscale" }, ".subpixel-antialiased": { "-webkit-font-smoothing": "auto", "-moz-osx-font-smoothing": "auto" } });
  }, placeholderColor: ({ matchUtilities: e, theme: t, corePlugins: r }) => {
    e({ placeholder: (n) => r("placeholderOpacity") ? { "&::placeholder": oe({ color: n, property: "color", variable: "--tw-placeholder-opacity" }) } : { "&::placeholder": { color: Y(n) } } }, { values: re(t("placeholderColor")), type: ["color", "any"] });
  }, placeholderOpacity: ({ matchUtilities: e, theme: t }) => {
    e({ "placeholder-opacity": (r) => ({ "&::placeholder": { "--tw-placeholder-opacity": r } }) }, { values: t("placeholderOpacity") });
  }, caretColor: ({ matchUtilities: e, theme: t }) => {
    e({ caret: (r) => ({ "caret-color": Y(r) }) }, { values: re(t("caretColor")), type: ["color", "any"] });
  }, accentColor: ({ matchUtilities: e, theme: t }) => {
    e({ accent: (r) => ({ "accent-color": Y(r) }) }, { values: re(t("accentColor")), type: ["color", "any"] });
  }, opacity: R("opacity", [["opacity", ["opacity"]]]), backgroundBlendMode: ({ addUtilities: e }) => {
    e({ ".bg-blend-normal": { "background-blend-mode": "normal" }, ".bg-blend-multiply": { "background-blend-mode": "multiply" }, ".bg-blend-screen": { "background-blend-mode": "screen" }, ".bg-blend-overlay": { "background-blend-mode": "overlay" }, ".bg-blend-darken": { "background-blend-mode": "darken" }, ".bg-blend-lighten": { "background-blend-mode": "lighten" }, ".bg-blend-color-dodge": { "background-blend-mode": "color-dodge" }, ".bg-blend-color-burn": { "background-blend-mode": "color-burn" }, ".bg-blend-hard-light": { "background-blend-mode": "hard-light" }, ".bg-blend-soft-light": { "background-blend-mode": "soft-light" }, ".bg-blend-difference": { "background-blend-mode": "difference" }, ".bg-blend-exclusion": { "background-blend-mode": "exclusion" }, ".bg-blend-hue": { "background-blend-mode": "hue" }, ".bg-blend-saturation": { "background-blend-mode": "saturation" }, ".bg-blend-color": { "background-blend-mode": "color" }, ".bg-blend-luminosity": { "background-blend-mode": "luminosity" } });
  }, mixBlendMode: ({ addUtilities: e }) => {
    e({ ".mix-blend-normal": { "mix-blend-mode": "normal" }, ".mix-blend-multiply": { "mix-blend-mode": "multiply" }, ".mix-blend-screen": { "mix-blend-mode": "screen" }, ".mix-blend-overlay": { "mix-blend-mode": "overlay" }, ".mix-blend-darken": { "mix-blend-mode": "darken" }, ".mix-blend-lighten": { "mix-blend-mode": "lighten" }, ".mix-blend-color-dodge": { "mix-blend-mode": "color-dodge" }, ".mix-blend-color-burn": { "mix-blend-mode": "color-burn" }, ".mix-blend-hard-light": { "mix-blend-mode": "hard-light" }, ".mix-blend-soft-light": { "mix-blend-mode": "soft-light" }, ".mix-blend-difference": { "mix-blend-mode": "difference" }, ".mix-blend-exclusion": { "mix-blend-mode": "exclusion" }, ".mix-blend-hue": { "mix-blend-mode": "hue" }, ".mix-blend-saturation": { "mix-blend-mode": "saturation" }, ".mix-blend-color": { "mix-blend-mode": "color" }, ".mix-blend-luminosity": { "mix-blend-mode": "luminosity" }, ".mix-blend-plus-lighter": { "mix-blend-mode": "plus-lighter" } });
  }, boxShadow: (() => {
    let e = ft("boxShadow"), t = ["var(--tw-ring-offset-shadow, 0 0 #0000)", "var(--tw-ring-shadow, 0 0 #0000)", "var(--tw-shadow)"].join(", ");
    return function({ matchUtilities: r, addDefaults: n, theme: i }) {
      n(" box-shadow", { "--tw-ring-offset-shadow": "0 0 #0000", "--tw-ring-shadow": "0 0 #0000", "--tw-shadow": "0 0 #0000", "--tw-shadow-colored": "0 0 #0000" }), r({ shadow: (o) => {
        o = e(o);
        let a = tn(o);
        for (let u of a)
          !u.valid || (u.color = "var(--tw-shadow-color)");
        return { "@defaults box-shadow": {}, "--tw-shadow": o === "none" ? "0 0 #0000" : o, "--tw-shadow-colored": o === "none" ? "0 0 #0000" : so(a), "box-shadow": t };
      } }, { values: i("boxShadow"), type: ["shadow"] });
    };
  })(), boxShadowColor: ({ matchUtilities: e, theme: t }) => {
    e({ shadow: (r) => ({ "--tw-shadow-color": Y(r), "--tw-shadow": "var(--tw-shadow-colored)" }) }, { values: re(t("boxShadowColor")), type: ["color", "any"] });
  }, outlineStyle: ({ addUtilities: e }) => {
    e({ ".outline-none": { outline: "2px solid transparent", "outline-offset": "2px" }, ".outline": { "outline-style": "solid" }, ".outline-dashed": { "outline-style": "dashed" }, ".outline-dotted": { "outline-style": "dotted" }, ".outline-double": { "outline-style": "double" } });
  }, outlineWidth: R("outlineWidth", [["outline", ["outline-width"]]], { type: ["length", "number", "percentage"] }), outlineOffset: R("outlineOffset", [["outline-offset", ["outline-offset"]]], { type: ["length", "number", "percentage", "any"], supportsNegativeValues: !0 }), outlineColor: ({ matchUtilities: e, theme: t }) => {
    e({ outline: (r) => ({ "outline-color": Y(r) }) }, { values: re(t("outlineColor")), type: ["color", "any"] });
  }, ringWidth: ({ matchUtilities: e, addDefaults: t, addUtilities: r, theme: n, config: i }) => {
    let o = (() => {
      var u, s;
      if (se(i(), "respectDefaultRingColorOpacity"))
        return n("ringColor.DEFAULT");
      let a = n("ringOpacity.DEFAULT", "0.5");
      return (u = n("ringColor")) != null && u.DEFAULT ? Re((s = n("ringColor")) == null ? void 0 : s.DEFAULT, a, `rgb(147 197 253 / ${a})`) : `rgb(147 197 253 / ${a})`;
    })();
    t("ring-width", { "--tw-ring-inset": " ", "--tw-ring-offset-width": n("ringOffsetWidth.DEFAULT", "0px"), "--tw-ring-offset-color": n("ringOffsetColor.DEFAULT", "#fff"), "--tw-ring-color": o, "--tw-ring-offset-shadow": "0 0 #0000", "--tw-ring-shadow": "0 0 #0000", "--tw-shadow": "0 0 #0000", "--tw-shadow-colored": "0 0 #0000" }), e({ ring: (a) => ({ "@defaults ring-width": {}, "--tw-ring-offset-shadow": "var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)", "--tw-ring-shadow": `var(--tw-ring-inset) 0 0 0 calc(${a} + var(--tw-ring-offset-width)) var(--tw-ring-color)`, "box-shadow": ["var(--tw-ring-offset-shadow)", "var(--tw-ring-shadow)", "var(--tw-shadow, 0 0 #0000)"].join(", ") }) }, { values: n("ringWidth"), type: "length" }), r({ ".ring-inset": { "@defaults ring-width": {}, "--tw-ring-inset": "inset" } });
  }, ringColor: ({ matchUtilities: e, theme: t, corePlugins: r }) => {
    e({ ring: (n) => r("ringOpacity") ? oe({ color: n, property: "--tw-ring-color", variable: "--tw-ring-opacity" }) : { "--tw-ring-color": Y(n) } }, { values: Object.fromEntries(Object.entries(re(t("ringColor"))).filter(([n]) => n !== "DEFAULT")), type: ["color", "any"] });
  }, ringOpacity: (e) => {
    let { config: t } = e;
    return R("ringOpacity", [["ring-opacity", ["--tw-ring-opacity"]]], { filterDefault: !se(t(), "respectDefaultRingColorOpacity") })(e);
  }, ringOffsetWidth: R("ringOffsetWidth", [["ring-offset", ["--tw-ring-offset-width"]]], { type: "length" }), ringOffsetColor: ({ matchUtilities: e, theme: t }) => {
    e({ "ring-offset": (r) => ({ "--tw-ring-offset-color": Y(r) }) }, { values: re(t("ringOffsetColor")), type: ["color", "any"] });
  }, blur: ({ matchUtilities: e, theme: t }) => {
    e({ blur: (r) => ({ "--tw-blur": `blur(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("blur") });
  }, brightness: ({ matchUtilities: e, theme: t }) => {
    e({ brightness: (r) => ({ "--tw-brightness": `brightness(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("brightness") });
  }, contrast: ({ matchUtilities: e, theme: t }) => {
    e({ contrast: (r) => ({ "--tw-contrast": `contrast(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("contrast") });
  }, dropShadow: ({ matchUtilities: e, theme: t }) => {
    e({ "drop-shadow": (r) => ({ "--tw-drop-shadow": Array.isArray(r) ? r.map((n) => `drop-shadow(${n})`).join(" ") : `drop-shadow(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("dropShadow") });
  }, grayscale: ({ matchUtilities: e, theme: t }) => {
    e({ grayscale: (r) => ({ "--tw-grayscale": `grayscale(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("grayscale") });
  }, hueRotate: ({ matchUtilities: e, theme: t }) => {
    e({ "hue-rotate": (r) => ({ "--tw-hue-rotate": `hue-rotate(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("hueRotate"), supportsNegativeValues: !0 });
  }, invert: ({ matchUtilities: e, theme: t }) => {
    e({ invert: (r) => ({ "--tw-invert": `invert(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("invert") });
  }, saturate: ({ matchUtilities: e, theme: t }) => {
    e({ saturate: (r) => ({ "--tw-saturate": `saturate(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("saturate") });
  }, sepia: ({ matchUtilities: e, theme: t }) => {
    e({ sepia: (r) => ({ "--tw-sepia": `sepia(${r})`, "@defaults filter": {}, filter: we }) }, { values: t("sepia") });
  }, filter: ({ addDefaults: e, addUtilities: t }) => {
    e("filter", { "--tw-blur": " ", "--tw-brightness": " ", "--tw-contrast": " ", "--tw-grayscale": " ", "--tw-hue-rotate": " ", "--tw-invert": " ", "--tw-saturate": " ", "--tw-sepia": " ", "--tw-drop-shadow": " " }), t({ ".filter": { "@defaults filter": {}, filter: we }, ".filter-none": { filter: "none" } });
  }, backdropBlur: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-blur": (r) => ({ "--tw-backdrop-blur": `blur(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropBlur") });
  }, backdropBrightness: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-brightness": (r) => ({ "--tw-backdrop-brightness": `brightness(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropBrightness") });
  }, backdropContrast: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-contrast": (r) => ({ "--tw-backdrop-contrast": `contrast(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropContrast") });
  }, backdropGrayscale: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-grayscale": (r) => ({ "--tw-backdrop-grayscale": `grayscale(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropGrayscale") });
  }, backdropHueRotate: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-hue-rotate": (r) => ({ "--tw-backdrop-hue-rotate": `hue-rotate(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropHueRotate"), supportsNegativeValues: !0 });
  }, backdropInvert: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-invert": (r) => ({ "--tw-backdrop-invert": `invert(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropInvert") });
  }, backdropOpacity: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-opacity": (r) => ({ "--tw-backdrop-opacity": `opacity(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropOpacity") });
  }, backdropSaturate: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-saturate": (r) => ({ "--tw-backdrop-saturate": `saturate(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropSaturate") });
  }, backdropSepia: ({ matchUtilities: e, theme: t }) => {
    e({ "backdrop-sepia": (r) => ({ "--tw-backdrop-sepia": `sepia(${r})`, "@defaults backdrop-filter": {}, "backdrop-filter": xe }) }, { values: t("backdropSepia") });
  }, backdropFilter: ({ addDefaults: e, addUtilities: t }) => {
    e("backdrop-filter", { "--tw-backdrop-blur": " ", "--tw-backdrop-brightness": " ", "--tw-backdrop-contrast": " ", "--tw-backdrop-grayscale": " ", "--tw-backdrop-hue-rotate": " ", "--tw-backdrop-invert": " ", "--tw-backdrop-opacity": " ", "--tw-backdrop-saturate": " ", "--tw-backdrop-sepia": " " }), t({ ".backdrop-filter": { "@defaults backdrop-filter": {}, "backdrop-filter": xe }, ".backdrop-filter-none": { "backdrop-filter": "none" } });
  }, transitionProperty: ({ matchUtilities: e, theme: t }) => {
    let r = t("transitionTimingFunction.DEFAULT"), n = t("transitionDuration.DEFAULT");
    e({ transition: (i) => ({ "transition-property": i, ...i === "none" ? {} : { "transition-timing-function": r, "transition-duration": n } }) }, { values: t("transitionProperty") });
  }, transitionDelay: R("transitionDelay", [["delay", ["transitionDelay"]]]), transitionDuration: R("transitionDuration", [["duration", ["transitionDuration"]]], { filterDefault: !0 }), transitionTimingFunction: R("transitionTimingFunction", [["ease", ["transitionTimingFunction"]]], { filterDefault: !0 }), willChange: R("willChange", [["will-change", ["will-change"]]]), content: R("content", [["content", ["--tw-content", ["content", "var(--tw-content)"]]]]) };
  function Ve(e) {
    if (Array.isArray(e))
      return e;
    let t = e.split("[").length - 1, r = e.split("]").length - 1;
    if (t !== r)
      throw new Error(`Path is invalid. Has unbalanced brackets: ${e}`);
    return e.split(/\.(?![^\[]*\])|[\[\]]/g).filter(Boolean);
  }
  var On = /* @__PURE__ */ new Map([["{", "}"], ["[", "]"], ["(", ")"]]), Cn = new Map(Array.from(On.entries()).map(([e, t]) => [t, e])), es = /* @__PURE__ */ new Set(['"', "'", "`"]);
  function tr(e) {
    let t = [], r = !1;
    for (let n = 0; n < e.length; n++) {
      let i = e[n];
      if (i === ":" && !r && t.length === 0)
        return !1;
      if (es.has(i) && e[n - 1] !== "\\" && (r = !r), !r && e[n - 1] !== "\\") {
        if (On.has(i))
          t.push(i);
        else if (Cn.has(i)) {
          let o = Cn.get(i);
          if (t.length <= 0 || t.pop() !== o)
            return !1;
        }
      }
    }
    return !(t.length > 0);
  }
  function An(e) {
    return (e > 0n) - (e < 0n);
  }
  function ts(e, t) {
    let r = 0n, n = 0n;
    for (let [i, o] of t)
      e & i && (r = r | i, n = n | o);
    return e & ~r | n;
  }
  var rs = class {
    constructor() {
      this.offsets = { defaults: 0n, base: 0n, components: 0n, utilities: 0n, variants: 0n, user: 0n }, this.layerPositions = { defaults: 0n, base: 1n, components: 2n, utilities: 3n, user: 4n, variants: 5n }, this.reservedVariantBits = 0n, this.variantOffsets = /* @__PURE__ */ new Map();
    }
    create(e) {
      return { layer: e, parentLayer: e, arbitrary: 0n, variants: 0n, parallelIndex: 0n, index: this.offsets[e]++, options: [] };
    }
    arbitraryProperty() {
      return { ...this.create("utilities"), arbitrary: 1n };
    }
    forVariant(e, t = 0) {
      let r = this.variantOffsets.get(e);
      if (r === void 0)
        throw new Error(`Cannot find offset for unknown variant ${e}`);
      return { ...this.create("variants"), variants: r << BigInt(t) };
    }
    applyVariantOffset(e, t, r) {
      return r.variant = t.variants, { ...e, layer: "variants", parentLayer: e.layer === "variants" ? e.parentLayer : e.layer, variants: e.variants | t.variants, options: r.sort ? [].concat(r, e.options) : e.options, parallelIndex: Tn([e.parallelIndex, t.parallelIndex]) };
    }
    applyParallelOffset(e, t) {
      return { ...e, parallelIndex: BigInt(t) };
    }
    recordVariants(e, t) {
      for (let r of e)
        this.recordVariant(r, t(r));
    }
    recordVariant(e, t = 1) {
      return this.variantOffsets.set(e, 1n << this.reservedVariantBits), this.reservedVariantBits += BigInt(t), { ...this.create("variants"), variants: this.variantOffsets.get(e) };
    }
    compare(e, t) {
      if (e.layer !== t.layer)
        return this.layerPositions[e.layer] - this.layerPositions[t.layer];
      if (e.parentLayer !== t.parentLayer)
        return this.layerPositions[e.parentLayer] - this.layerPositions[t.parentLayer];
      for (let r of e.options)
        for (let n of t.options) {
          if (r.id !== n.id || !r.sort || !n.sort)
            continue;
          let i = Tn([r.variant, n.variant]) ?? 0n, o = ~(i | i - 1n), a = e.variants & o, u = t.variants & o;
          if (a !== u)
            continue;
          let s = r.sort({ value: r.value, modifier: r.modifier }, { value: n.value, modifier: n.modifier });
          if (s !== 0)
            return s;
        }
      return e.variants !== t.variants ? e.variants - t.variants : e.parallelIndex !== t.parallelIndex ? e.parallelIndex - t.parallelIndex : e.arbitrary !== t.arbitrary ? e.arbitrary - t.arbitrary : e.index - t.index;
    }
    recalculateVariantOffsets() {
      let e = Array.from(this.variantOffsets.entries()).filter(([r]) => r.startsWith("[")).sort(([r], [n]) => ns(r, n)), t = e.map(([, r]) => r).sort((r, n) => An(r - n));
      return e.map(([, r], n) => [r, t[n]]).filter(([r, n]) => r !== n);
    }
    remapArbitraryVariantOffsets(e) {
      let t = this.recalculateVariantOffsets();
      return t.length === 0 ? e : e.map((r) => {
        let [n, i] = r;
        return n = { ...n, variants: ts(n.variants, t) }, [n, i];
      });
    }
    sort(e) {
      return e = this.remapArbitraryVariantOffsets(e), e.sort(([t], [r]) => An(this.compare(t, r)));
    }
  };
  function Tn(e) {
    let t = null;
    for (let r of e)
      t = t ?? r, t = t > r ? t : r;
    return t;
  }
  function ns(e, t) {
    let r = e.length, n = t.length, i = r < n ? r : n;
    for (let o = 0; o < i; o++) {
      let a = e.charCodeAt(o) - t.charCodeAt(o);
      if (a !== 0)
        return a;
    }
    return r - n;
  }
  var rr = { AddVariant: Symbol.for("ADD_VARIANT"), MatchVariant: Symbol.for("MATCH_VARIANT") }, nr = { Base: 1, Dynamic: 2 };
  function ir(e, t) {
    let r = e.tailwindConfig.prefix;
    return typeof r == "function" ? r(t) : r + t;
  }
  function En({ type: e = "any", ...t }) {
    let r = [].concat(e);
    return { ...t, types: r.map((n) => Array.isArray(n) ? { type: n[0], ...n[1] } : { type: n, preferOnConflict: !1 }) };
  }
  function is(e) {
    let t = [], r = "", n = 0;
    for (let i = 0; i < e.length; i++) {
      let o = e[i];
      if (o === "\\")
        r += "\\" + e[++i];
      else if (o === "{")
        ++n, t.push(r.trim()), r = "";
      else if (o === "}") {
        if (--n < 0)
          throw new Error("Your { and } are unbalanced.");
        t.push(r.trim()), r = "";
      } else
        r += o;
    }
    return r.length > 0 && t.push(r.trim()), t = t.filter((i) => i !== ""), t;
  }
  function os(e, t, { before: r = [] } = {}) {
    if (r = [].concat(r), r.length <= 0) {
      e.push(t);
      return;
    }
    let n = e.length - 1;
    for (let i of r) {
      let o = e.indexOf(i);
      o !== -1 && (n = Math.min(n, o));
    }
    e.splice(n, 0, t);
  }
  function _n(e) {
    return Array.isArray(e) ? e.flatMap((t) => !Array.isArray(t) && !he(t) ? t : Wt(t)) : _n([e]);
  }
  function Pn(e, t) {
    return (0, wn.default)((r) => {
      let n = [];
      return t && t(r), r.walkClasses((i) => {
        n.push(i.value);
      }), n;
    }).transformSync(e);
  }
  function ss(e, t = { containsNonOnDemandable: !1 }, r = 0) {
    let n = [];
    if (e.type === "rule") {
      let i = function(o) {
        o.walkPseudos((a) => {
          a.value === ":not" && a.remove();
        });
      };
      for (let o of e.selectors) {
        let a = Pn(o, i);
        a.length === 0 && (t.containsNonOnDemandable = !0);
        for (let u of a)
          n.push(u);
      }
    } else
      e.type === "atrule" && e.walkRules((i) => {
        for (let o of i.selectors.flatMap((a) => Pn(a)))
          n.push(o);
      });
    return r === 0 ? [t.containsNonOnDemandable || n.length === 0, n] : n;
  }
  function mt(e) {
    return _n(e).flatMap((t) => {
      let r = /* @__PURE__ */ new Map(), [n, i] = ss(t);
      return n && i.unshift(Me), i.map((o) => (r.has(t) || r.set(t, t), [o, r.get(t)]));
    });
  }
  function or(e) {
    return e.startsWith("@") || e.includes("&");
  }
  function gt(e) {
    e = e.replace(/\n+/g, "").replace(/\s{1,}/g, " ").trim();
    let t = is(e).map((r) => {
      if (!r.startsWith("@"))
        return ({ format: o }) => o(r);
      let [, n, i] = /@(.*?)( .+|[({].*)/g.exec(r);
      return ({ wrap: o }) => o(K.atRule({ name: n, params: i.trim() }));
    }).reverse();
    return (r) => {
      for (let n of t)
        n(r);
    };
  }
  function as(e, t, { variantList: r, variantMap: n, offsets: i, classList: o }) {
    function a(h, m) {
      return h ? (0, zo.default)(e, h, m) : e;
    }
    function u(h) {
      return Bt(e.prefix, h);
    }
    function s(h, m) {
      return h === Me ? Me : m.respectPrefix ? t.tailwindConfig.prefix + h : h;
    }
    function l(h, m, f = {}) {
      let d = Ve(h), g = a(["theme", ...d], m);
      return ft(d[0])(g, f);
    }
    let p = 0, c = { postcss: K, prefix: u, e: Pe, config: a, theme: l, corePlugins: (h) => Array.isArray(e.corePlugins) ? e.corePlugins.includes(h) : a(["corePlugins", h], !0), variants: () => [], addBase(h) {
      for (let [m, f] of mt(h)) {
        let d = s(m, {}), g = i.create("base");
        t.candidateRuleMap.has(d) || t.candidateRuleMap.set(d, []), t.candidateRuleMap.get(d).push([{ sort: g, layer: "base" }, f]);
      }
    }, addDefaults(h, m) {
      let f = { [`@defaults ${h}`]: m };
      for (let [d, g] of mt(f)) {
        let b = s(d, {});
        t.candidateRuleMap.has(b) || t.candidateRuleMap.set(b, []), t.candidateRuleMap.get(b).push([{ sort: i.create("defaults"), layer: "defaults" }, g]);
      }
    }, addComponents(h, m) {
      m = Object.assign({}, { preserveSource: !1, respectPrefix: !0, respectImportant: !1 }, Array.isArray(m) ? {} : m);
      for (let [f, d] of mt(h)) {
        let g = s(f, m);
        o.add(g), t.candidateRuleMap.has(g) || t.candidateRuleMap.set(g, []), t.candidateRuleMap.get(g).push([{ sort: i.create("components"), layer: "components", options: m }, d]);
      }
    }, addUtilities(h, m) {
      m = Object.assign({}, { preserveSource: !1, respectPrefix: !0, respectImportant: !0 }, Array.isArray(m) ? {} : m);
      for (let [f, d] of mt(h)) {
        let g = s(f, m);
        o.add(g), t.candidateRuleMap.has(g) || t.candidateRuleMap.set(g, []), t.candidateRuleMap.get(g).push([{ sort: i.create("utilities"), layer: "utilities", options: m }, d]);
      }
    }, matchUtilities: function(h, m) {
      m = En({ respectPrefix: !0, respectImportant: !0, modifiers: !1, ...m });
      let f = i.create("utilities");
      for (let d in h) {
        let g = function(k, { isOnlyPlugin: y }) {
          let [w, S, O] = pn(m.types, k, m, e);
          if (w === void 0)
            return [];
          if (!m.types.some(({ type: T }) => T === S))
            if (y)
              fe.warn([`Unnecessary typehint \`${S}\` in \`${d}-${k}\`.`, `You can safely update it to \`${d}-${k.replace(S + ":", "")}\`.`]);
            else
              return [];
          if (!tr(w))
            return [];
          let C = { get modifier() {
            return m.modifiers || fe.warn(`modifier-used-without-options-for-${d}`, ["Your plugin must set `modifiers: true` in its options to support modifiers."]), O;
          } }, A = se(e, "generalizedModifiers");
          return [].concat(A ? v(w, C) : v(w)).filter(Boolean).map((T) => ({ [bn(d, k)]: T }));
        }, b = s(d, m), v = h[d];
        o.add([b, m]);
        let x = [{ sort: f, layer: "utilities", options: m }, g];
        t.candidateRuleMap.has(b) || t.candidateRuleMap.set(b, []), t.candidateRuleMap.get(b).push(x);
      }
    }, matchComponents: function(h, m) {
      m = En({ respectPrefix: !0, respectImportant: !1, modifiers: !1, ...m });
      let f = i.create("components");
      for (let d in h) {
        let g = function(k, { isOnlyPlugin: y }) {
          let [w, S, O] = pn(m.types, k, m, e);
          if (w === void 0)
            return [];
          if (!m.types.some(({ type: T }) => T === S))
            if (y)
              fe.warn([`Unnecessary typehint \`${S}\` in \`${d}-${k}\`.`, `You can safely update it to \`${d}-${k.replace(S + ":", "")}\`.`]);
            else
              return [];
          if (!tr(w))
            return [];
          let C = { get modifier() {
            return m.modifiers || fe.warn(`modifier-used-without-options-for-${d}`, ["Your plugin must set `modifiers: true` in its options to support modifiers."]), O;
          } }, A = se(e, "generalizedModifiers");
          return [].concat(A ? v(w, C) : v(w)).filter(Boolean).map((T) => ({ [bn(d, k)]: T }));
        }, b = s(d, m), v = h[d];
        o.add([b, m]);
        let x = [{ sort: f, layer: "components", options: m }, g];
        t.candidateRuleMap.has(b) || t.candidateRuleMap.set(b, []), t.candidateRuleMap.get(b).push(x);
      }
    }, addVariant(h, m, f = {}) {
      m = [].concat(m).map((d) => {
        if (typeof d != "string")
          return (g = {}) => {
            let { args: b, modifySelectors: v, container: x, separator: k, wrap: y, format: w } = g, S = d(Object.assign({ modifySelectors: v, container: x, separator: k }, f.type === rr.MatchVariant && { args: b, wrap: y, format: w }));
            if (typeof S == "string" && !or(S))
              throw new Error(`Your custom variant \`${h}\` has an invalid format string. Make sure it's an at-rule or contains a \`&\` placeholder.`);
            return Array.isArray(S) ? S.filter((O) => typeof O == "string").map((O) => gt(O)) : S && typeof S == "string" && gt(S)(g);
          };
        if (!or(d))
          throw new Error(`Your custom variant \`${h}\` has an invalid format string. Make sure it's an at-rule or contains a \`&\` placeholder.`);
        return gt(d);
      }), os(r, h, f), n.set(h, m), t.variantOptions.set(h, f);
    }, matchVariant(h, m, f) {
      let d = (f == null ? void 0 : f.id) ?? ++p, g = h === "@", b = se(e, "generalizedModifiers");
      for (let [x, k] of Object.entries((f == null ? void 0 : f.values) ?? {}))
        x !== "DEFAULT" && c.addVariant(g ? `${h}${x}` : `${h}-${x}`, ({ args: y, container: w }) => m(k, b ? { modifier: y == null ? void 0 : y.modifier, container: w } : { container: w }), { ...f, value: k, id: d, type: rr.MatchVariant, variantInfo: nr.Base });
      let v = "DEFAULT" in ((f == null ? void 0 : f.values) ?? {});
      c.addVariant(h, ({ args: x, container: k }) => (x == null ? void 0 : x.value) === Nt && !v ? null : m((x == null ? void 0 : x.value) === Nt ? f.values.DEFAULT : (x == null ? void 0 : x.value) ?? (typeof x == "string" ? x : ""), b ? { modifier: x == null ? void 0 : x.modifier, container: k } : { container: k }), { ...f, id: d, type: rr.MatchVariant, variantInfo: nr.Dynamic });
    } };
    return c;
  }
  function jn(e) {
    e.walkAtRules((t) => {
      ["responsive", "variants"].includes(t.name) && (jn(t), t.before(t.nodes), t.remove());
    });
  }
  function ls(e) {
    let t = [];
    return e.each((r) => {
      r.type === "atrule" && ["responsive", "variants"].includes(r.name) && (r.name = "layer", r.params = "utilities");
    }), e.walkAtRules("layer", (r) => {
      if (jn(r), r.params === "base") {
        for (let n of r.nodes)
          t.push(function({ addBase: i }) {
            i(n, { respectPrefix: !1 });
          });
        r.remove();
      } else if (r.params === "components") {
        for (let n of r.nodes)
          t.push(function({ addComponents: i }) {
            i(n, { respectPrefix: !1, preserveSource: !0 });
          });
        r.remove();
      } else if (r.params === "utilities") {
        for (let n of r.nodes)
          t.push(function({ addUtilities: i }) {
            i(n, { respectPrefix: !1, preserveSource: !0 });
          });
        r.remove();
      }
    }), t;
  }
  function cs(e, t) {
    let r = Object.entries({ ...le, ...Ko }).map(([u, s]) => e.tailwindConfig.corePlugins.includes(u) ? s : null).filter(Boolean), n = e.tailwindConfig.plugins.map((u) => (u.__isOptionsFunction && (u = u()), typeof u == "function" ? u : u.handler)), i = ls(t), o = [le.pseudoElementVariants, le.pseudoClassVariants, le.ariaVariants, le.dataVariants], a = [le.supportsVariants, le.directionVariants, le.reducedMotionVariants, le.prefersContrastVariants, le.darkVariants, le.printVariant, le.screenVariants, le.orientationVariants];
    return [...r, ...o, ...n, ...a, ...i];
  }
  function us(e, t) {
    let r = [], n = /* @__PURE__ */ new Map();
    t.variantMap = n;
    let i = new rs();
    t.offsets = i;
    let o = /* @__PURE__ */ new Set(), a = as(t.tailwindConfig, t, { variantList: r, variantMap: n, offsets: i, classList: o });
    for (let p of e)
      if (Array.isArray(p))
        for (let c of p)
          c(a);
      else
        p == null || p(a);
    i.recordVariants(r, (p) => n.get(p).length);
    for (let [p, c] of n.entries())
      t.variantMap.set(p, c.map((h, m) => [i.forVariant(p, m), h]));
    let u = (t.tailwindConfig.safelist ?? []).filter(Boolean);
    if (u.length > 0) {
      let p = [];
      for (let c of u) {
        if (typeof c == "string") {
          t.changedContent.push({ content: c, extension: "html" });
          continue;
        }
        c instanceof RegExp || p.push(c);
      }
      if (p.length > 0) {
        let c = /* @__PURE__ */ new Map(), h = t.tailwindConfig.prefix.length, m = p.some((f) => f.pattern.source.includes("!"));
        for (let f of o) {
          let d = Array.isArray(f) ? (() => {
            let [g, b] = f, v = Object.keys((b == null ? void 0 : b.values) ?? {}).map((x) => pt(g, x));
            return b != null && b.supportsNegativeValues && (v = [...v, ...v.map((x) => "-" + x)], v = [...v, ...v.map((x) => x.slice(0, h) + "-" + x.slice(h))]), b.types.some(({ type: x }) => x === "color") && (v = [...v, ...v.flatMap((x) => Object.keys(t.tailwindConfig.theme.opacity).map((k) => `${x}/${k}`))]), m && (b != null && b.respectImportant) && (v = [...v, ...v.map((x) => "!" + x)]), v;
          })() : [f];
          for (let g of d)
            for (let { pattern: b, variants: v = [] } of p)
              if (b.lastIndex = 0, c.has(b) || c.set(b, 0), !!b.test(g)) {
                c.set(b, c.get(b) + 1), t.changedContent.push({ content: g, extension: "html" });
                for (let x of v)
                  t.changedContent.push({ content: x + t.tailwindConfig.separator + g, extension: "html" });
              }
        }
        for (let [f, d] of c.entries())
          d === 0 && fe.warn([`The safelist pattern \`${f}\` doesn't match any Tailwind CSS classes.`, "Fix this pattern or remove it from your `safelist` configuration.", "https://tailwindcss.com/docs/content-configuration#safelisting-classes"]);
      }
    }
    let s = [].concat(t.tailwindConfig.darkMode ?? "media")[1] ?? "dark", l = [ir(t, s), ir(t, "group"), ir(t, "peer")];
    t.getClassOrder = function(p) {
      let c = [...p].sort((d, g) => d === g ? 0 : d < g ? -1 : 1), h = new Map(c.map((d) => [d, null])), m = Ln(new Set(c), t);
      m = t.offsets.sort(m);
      let f = BigInt(l.length);
      for (let [, d] of m)
        h.set(d.raws.tailwind.candidate, f++);
      return p.map((d) => {
        let g = h.get(d) ?? null, b = l.indexOf(d);
        return g === null && b !== -1 && (g = BigInt(b)), [d, g];
      });
    }, t.getClassList = function(p = {}) {
      var h;
      let c = [];
      for (let m of o)
        if (Array.isArray(m)) {
          let [f, d] = m, g = [], b = Object.keys((d == null ? void 0 : d.modifiers) ?? {});
          (h = d == null ? void 0 : d.types) != null && h.some(({ type: k }) => k === "color") && b.push(...Object.keys(t.tailwindConfig.theme.opacity ?? {}));
          let v = { modifiers: b }, x = p.includeMetadata && b.length > 0;
          for (let [k, y] of Object.entries((d == null ? void 0 : d.values) ?? {})) {
            if (y == null)
              continue;
            let w = pt(f, k);
            if (c.push(x ? [w, v] : w), (d == null ? void 0 : d.supportsNegativeValues) && lt(y)) {
              let S = pt(f, `-${k}`);
              g.push(x ? [S, v] : S);
            }
          }
          c.push(...g);
        } else
          c.push(m);
      return c;
    }, t.getVariants = function() {
      let p = [];
      for (let [c, h] of t.variantOptions.entries())
        h.variantInfo !== nr.Base && p.push({ name: c, isArbitrary: h.type === Symbol.for("MATCH_VARIANT"), values: Object.keys(h.values ?? {}), hasDash: c !== "@", selectors({ modifier: m, value: f } = {}) {
          var A;
          let d = "__TAILWIND_PLACEHOLDER__", g = K.rule({ selector: `.${d}` }), b = K.root({ nodes: [g.clone()] }), v = b.toString(), x = (t.variantMap.get(c) ?? []).flatMap(([T, F]) => F), k = [];
          for (let T of x) {
            let F = [], U = { args: { modifier: m, value: ((A = h.values) == null ? void 0 : A[f]) ?? f }, separator: t.tailwindConfig.separator, modifySelectors($) {
              return b.each((L) => {
                L.type === "rule" && (L.selectors = L.selectors.map((H) => $({ get className() {
                  return Rn(H);
                }, selector: H })));
              }), b;
            }, format($) {
              F.push($);
            }, wrap($) {
              F.push(`@${$.name} ${$.params} { & }`);
            }, container: b }, j = T(U);
            if (F.length > 0 && k.push(F), Array.isArray(j))
              for (let $ of j)
                F = [], $(U), k.push(F);
          }
          let y = [], w = b.toString();
          v !== w && (b.walkRules((T) => {
            let F = T.selector, U = (0, wn.default)((j) => {
              j.walkClasses(($) => {
                $.value = `${c}${t.tailwindConfig.separator}${$.value}`;
              });
            }).processSync(F);
            y.push(F.replace(U, "&").replace(d, "&"));
          }), b.walkAtRules((T) => {
            y.push(`@${T.name} (${T.params}) { & }`);
          }));
          let S = !(f in (h.values ?? {}));
          k = k.map((T) => T.map((F) => ({ format: F, isArbitraryVariant: S }))), y = y.map((T) => ({ format: T, isArbitraryVariant: S }));
          let O = { candidate: d, context: t }, C = k.map((T) => gn(`.${d}`, dt(T, O), O).replace(`.${d}`, "&").replace("{ & }", "").trim());
          return y.length > 0 && C.push(dt(y, O).toString().replace(`.${d}`, "&")), C;
        } });
      return p;
    };
  }
  function Dn(e, t) {
    !e.classCache.has(t) || (e.notClassCache.add(t), e.classCache.delete(t), e.applyClassCache.delete(t), e.candidateRuleMap.delete(t), e.candidateRuleCache.delete(t), e.stylesheetCache = null);
  }
  function ds(e, t) {
    let r = t.raws.tailwind.candidate;
    if (r) {
      for (let n of e.ruleCache)
        n[1].raws.tailwind.candidate === r && e.ruleCache.delete(n);
      Dn(e, r);
    }
  }
  function ps(e, t = [], r = K.root()) {
    let n = { disposables: [], ruleCache: /* @__PURE__ */ new Set(), candidateRuleCache: /* @__PURE__ */ new Map(), classCache: /* @__PURE__ */ new Map(), applyClassCache: /* @__PURE__ */ new Map(), notClassCache: new Set(e.blocklist ?? []), postCssNodeCache: /* @__PURE__ */ new Map(), candidateRuleMap: /* @__PURE__ */ new Map(), tailwindConfig: e, changedContent: t, variantMap: /* @__PURE__ */ new Map(), stylesheetCache: null, variantOptions: /* @__PURE__ */ new Map(), markInvalidUtilityCandidate: (o) => Dn(n, o), markInvalidUtilityNode: (o) => ds(n, o) }, i = cs(n, r);
    return us(i, n), n;
  }
  function In(e, t) {
    let r = /^(.*?)(:before|:after|::[\w-]+)(\)*)$/g.exec(e);
    if (!r)
      return `${t} ${Mn(e)}`;
    let [, n, i, o] = r;
    return `${t} ${Mn(n + o)}${i}`;
  }
  function Mn(e) {
    let t = de(e, " ");
    return t.length === 1 && t[0].startsWith(":is(") && t[0].endsWith(")") ? e : `:is(${e})`;
  }
  var fs = (0, zt.default)((e) => e.first.filter(({ type: t }) => t === "class").pop().value);
  function Rn(e) {
    return fs.transformSync(e);
  }
  function* hs(e) {
    let t = 1 / 0;
    for (; t >= 0; ) {
      let r, n = !1;
      if (t === 1 / 0 && e.endsWith("]")) {
        let a = e.indexOf("[");
        e[a - 1] === "-" ? r = a - 1 : e[a - 1] === "/" ? (r = a - 1, n = !0) : r = -1;
      } else
        t === 1 / 0 && e.includes("/") ? (r = e.lastIndexOf("/"), n = !0) : r = e.lastIndexOf("-", t);
      if (r < 0)
        break;
      let i = e.slice(0, r), o = e.slice(n ? r : r + 1);
      t = r - 1, !(i === "" || o === "/") && (yield [i, o]);
    }
  }
  function ms(e, t) {
    if (e.length === 0 || t.tailwindConfig.prefix === "")
      return e;
    for (let r of e) {
      let [n] = r;
      if (n.options.respectPrefix) {
        let i = K.root({ nodes: [r[1].clone()] }), o = r[1].raws.tailwind.classCandidate;
        i.walkRules((a) => {
          let u = o.startsWith("-");
          a.selector = Bt(t.tailwindConfig.prefix, a.selector, u);
        }), r[1] = i.nodes[0];
      }
    }
    return e;
  }
  function gs(e, t) {
    if (e.length === 0)
      return e;
    let r = [];
    for (let [n, i] of e) {
      let o = K.root({ nodes: [i.clone()] });
      o.walkRules((a) => {
        let u = (0, zt.default)().astSync(a.selector);
        u.each((s) => mn(s, t)), _o(u, (s) => s === t ? `!${s}` : s), a.selector = u.toString(), a.walkDecls((s) => s.important = !0);
      }), r.push([{ ...n, important: !0 }, o.nodes[0]]);
    }
    return r;
  }
  function vs(e, t, r) {
    if (t.length === 0)
      return t;
    let n = { modifier: null, value: Nt };
    {
      let [i, ...o] = de(e, "/");
      if (o.length > 1 && (i = i + "/" + o.slice(0, -1).join("/"), o = o.slice(-1)), o.length && !r.variantMap.has(e) && (e = i, n.modifier = o[0], !se(r.tailwindConfig, "generalizedModifiers")))
        return [];
    }
    if (e.endsWith("]") && !e.startsWith("[")) {
      let i = /(.)(-?)\[(.*)\]/g.exec(e);
      if (i) {
        let [, o, a, u] = i;
        if (o === "@" && a === "-")
          return [];
        if (o !== "@" && a === "")
          return [];
        e = e.replace(`${a}[${u}]`, ""), n.value = u;
      }
    }
    if (lr(e) && !r.variantMap.has(e)) {
      let i = r.offsets.recordVariant(e), o = ee(e.slice(1, -1)), a = de(o, ",");
      if (a.length > 1)
        return [];
      if (!a.every(or))
        return [];
      let u = a.map((s, l) => [r.offsets.applyParallelOffset(i, l), gt(s.trim())]);
      r.variantMap.set(e, u);
    }
    if (r.variantMap.has(e)) {
      let i = lr(e), o = r.variantMap.get(e).slice(), a = [];
      for (let [u, s] of t) {
        if (u.layer === "user")
          continue;
        let l = K.root({ nodes: [s.clone()] });
        for (let [p, c, h] of o) {
          let m = function() {
            d.raws.neededBackup || (d.raws.neededBackup = !0, d.walkRules((x) => x.raws.originalSelector = x.selector));
          }, f = function(x) {
            return m(), d.each((k) => {
              k.type === "rule" && (k.selectors = k.selectors.map((y) => x({ get className() {
                return Rn(y);
              }, selector: y })));
            }), d;
          }, d = (h ?? l).clone(), g = [], b = c({ get container() {
            return m(), d;
          }, separator: r.tailwindConfig.separator, modifySelectors: f, wrap(x) {
            let k = d.nodes;
            d.removeAll(), x.append(k), d.append(x);
          }, format(x) {
            g.push({ format: x, isArbitraryVariant: i });
          }, args: n });
          if (Array.isArray(b)) {
            for (let [x, k] of b.entries())
              o.push([r.offsets.applyParallelOffset(p, x), k, d.clone()]);
            continue;
          }
          if (typeof b == "string" && g.push({ format: b, isArbitraryVariant: i }), b === null)
            continue;
          d.raws.neededBackup && (delete d.raws.neededBackup, d.walkRules((x) => {
            let k = x.raws.originalSelector;
            if (!k || (delete x.raws.originalSelector, k === x.selector))
              return;
            let y = x.selector, w = (0, zt.default)((S) => {
              S.walkClasses((O) => {
                O.value = `${e}${r.tailwindConfig.separator}${O.value}`;
              });
            }).processSync(k);
            g.push({ format: y.replace(w, "&"), isArbitraryVariant: i }), x.selector = k;
          })), d.nodes[0].raws.tailwind = { ...d.nodes[0].raws.tailwind, parentLayer: u.layer };
          let v = [{ ...u, sort: r.offsets.applyVariantOffset(u.sort, p, Object.assign(n, r.variantOptions.get(e))), collectedFormats: (u.collectedFormats ?? []).concat(g) }, d.nodes[0]];
          a.push(v);
        }
      }
      return a;
    }
    return [];
  }
  function sr(e, t, r = {}) {
    return !he(e) && !Array.isArray(e) ? [[e], r] : Array.isArray(e) ? sr(e[0], t, e[1]) : (t.has(e) || t.set(e, Wt(e)), [t.get(e), r]);
  }
  var ys = /^[a-z_-]/;
  function bs(e) {
    return ys.test(e);
  }
  function ws(e) {
    if (!e.includes("://"))
      return !1;
    try {
      let t = new URL(e);
      return t.scheme !== "" && t.host !== "";
    } catch {
      return !1;
    }
  }
  function Un(e) {
    let t = !0;
    return e.walkDecls((r) => {
      if (!Fn(r.prop, r.value))
        return t = !1, !1;
    }), t;
  }
  function Fn(e, t) {
    if (ws(`${e}:${t}`))
      return !1;
    try {
      return K.parse(`a{${e}:${t}}`).toResult(), !0;
    } catch {
      return !1;
    }
  }
  function xs(e, t) {
    let [, r, n] = e.match(/^\[([a-zA-Z0-9-_]+):(\S+)\]$/) ?? [];
    if (n === void 0 || !bs(r) || !tr(n))
      return null;
    let i = ee(n);
    return Fn(r, i) ? [[{ sort: t.offsets.arbitraryProperty(), layer: "utilities" }, () => ({ [yn(e)]: { [r]: i } })]] : null;
  }
  function* ks(e, t) {
    t.candidateRuleMap.has(e) && (yield [t.candidateRuleMap.get(e), "DEFAULT"]), yield* function* (u) {
      u !== null && (yield [u, "DEFAULT"]);
    }(xs(e, t));
    let r = e, n = !1, i = t.tailwindConfig.prefix, o = i.length, a = r.startsWith(i) || r.startsWith(`-${i}`);
    r[o] === "-" && a && (n = !0, r = i + r.slice(o + 1)), n && t.candidateRuleMap.has(r) && (yield [t.candidateRuleMap.get(r), "-DEFAULT"]);
    for (let [u, s] of hs(r))
      t.candidateRuleMap.has(u) && (yield [t.candidateRuleMap.get(u), n ? `-${s}` : s]);
  }
  function Ss(e, t) {
    return e === Me ? [Me] : de(e, t);
  }
  function* Os(e, t) {
    var r;
    for (let n of e)
      n[1].raws.tailwind = { ...n[1].raws.tailwind, classCandidate: t, preserveSource: ((r = n[0].options) == null ? void 0 : r.preserveSource) ?? !1 }, yield n;
  }
  function* ar(e, t, r = e) {
    var u;
    let n = t.tailwindConfig.separator, [i, ...o] = Ss(e, n).reverse(), a = !1;
    if (i.startsWith("!") && (a = !0, i = i.slice(1)), se(t.tailwindConfig, "variantGrouping") && i.startsWith("(") && i.endsWith(")")) {
      let s = o.slice().reverse().join(n);
      for (let l of de(i.slice(1, -1), ","))
        yield* ar(s + n + l, t, r);
    }
    for (let s of ks(i, t)) {
      let l = [], p = /* @__PURE__ */ new Map(), [c, h] = s, m = c.length === 1;
      for (let [f, d] of c) {
        let g = [];
        if (typeof d == "function")
          for (let b of [].concat(d(h, { isOnlyPlugin: m }))) {
            let [v, x] = sr(b, t.postCssNodeCache);
            for (let k of v)
              g.push([{ ...f, options: { ...f.options, ...x } }, k]);
          }
        else if (h === "DEFAULT" || h === "-DEFAULT") {
          let b = d, [v, x] = sr(b, t.postCssNodeCache);
          for (let k of v)
            g.push([{ ...f, options: { ...f.options, ...x } }, k]);
        }
        if (g.length > 0) {
          let b = Array.from(fn(((u = f.options) == null ? void 0 : u.types) ?? [], h, f.options ?? {}, t.tailwindConfig)).map(([v, x]) => x);
          b.length > 0 && p.set(g, b), l.push(g);
        }
      }
      if (lr(h)) {
        if (l.length > 1) {
          let f = function(v) {
            return v.length === 1 ? v[0] : v.find((x) => {
              let k = p.get(x);
              return x.some(([{ options: y }, w]) => Un(w) ? y.types.some(({ type: S, preferOnConflict: O }) => k.includes(S) && O) : !1);
            });
          }, [d, g] = l.reduce((v, x) => (x.some(([{ options: k }]) => k.types.some(({ type: y }) => y === "any")) ? v[0].push(x) : v[1].push(x), v), [[], []]), b = f(g) ?? f(d);
          if (b)
            l = [b];
          else {
            let v = l.map((k) => /* @__PURE__ */ new Set([...p.get(k) ?? []]));
            for (let k of v)
              for (let y of k) {
                let w = !1;
                for (let S of v)
                  k !== S && S.has(y) && (S.delete(y), w = !0);
                w && k.delete(y);
              }
            let x = [];
            for (let [k, y] of v.entries())
              for (let w of y) {
                let S = l[k].map(([, O]) => O).flat().map((O) => O.toString().split(`
`).slice(1, -1).map((C) => C.trim()).map((C) => `      ${C}`).join(`
`)).join(`

`);
                x.push(`  Use \`${e.replace("[", `[${w}:`)}\` for \`${S.trim()}\``);
                break;
              }
            fe.warn([`The class \`${e}\` is ambiguous and matches multiple utilities.`, ...x, `If this is content and not a class, replace it with \`${e.replace("[", "&lsqb;").replace("]", "&rsqb;")}\` to silence this warning.`]);
            continue;
          }
        }
        l = l.map((f) => f.filter((d) => Un(d[1])));
      }
      l = l.flat(), l = Array.from(Os(l, i)), l = ms(l, t), a && (l = gs(l, i));
      for (let f of o)
        l = vs(f, l, t);
      for (let f of l)
        f[1].raws.tailwind = { ...f[1].raws.tailwind, candidate: e }, f = Cs(f, { context: t, candidate: e, original: r }), f !== null && (yield f);
    }
  }
  function Cs(e, { context: t, candidate: r, original: n }) {
    if (!e[0].collectedFormats)
      return e;
    let i = !0, o;
    try {
      o = dt(e[0].collectedFormats, { context: t, candidate: r });
    } catch {
      return null;
    }
    let a = K.root({ nodes: [e[1].clone()] });
    return a.walkRules((u) => {
      if (!vt(u))
        try {
          u.selector = gn(u.selector, o, { candidate: n, context: t });
        } catch {
          return i = !1, !1;
        }
    }), i ? (e[1] = a.nodes[0], e) : null;
  }
  function vt(e) {
    return e.parent && e.parent.type === "atrule" && e.parent.name === "keyframes";
  }
  function As(e) {
    if (e === !0)
      return (t) => {
        vt(t) || t.walkDecls((r) => {
          r.parent.type === "rule" && !vt(r.parent) && (r.important = !0);
        });
      };
    if (typeof e == "string")
      return (t) => {
        vt(t) || (t.selectors = t.selectors.map((r) => In(r, e)));
      };
  }
  function Ln(e, t) {
    let r = [], n = As(t.tailwindConfig.important);
    for (let i of e) {
      if (t.notClassCache.has(i))
        continue;
      if (t.candidateRuleCache.has(i)) {
        r = r.concat(Array.from(t.candidateRuleCache.get(i)));
        continue;
      }
      let o = Array.from(ar(i, t));
      if (o.length === 0) {
        t.notClassCache.add(i);
        continue;
      }
      t.classCache.set(i, o);
      let a = t.candidateRuleCache.get(i) ?? /* @__PURE__ */ new Set();
      t.candidateRuleCache.set(i, a);
      for (let u of o) {
        let [{ sort: s, options: l }, p] = u;
        if (l.respectImportant && n) {
          let h = K.root({ nodes: [p.clone()] });
          h.walkRules(n), p = h.nodes[0];
        }
        let c = [s, p];
        a.add(c), t.ruleCache.add(c), r.push(c);
      }
    }
    return r;
  }
  function lr(e) {
    return e.startsWith("[") && e.endsWith("]");
  }
  function qe(e, t = void 0, r = void 0) {
    return e.map((n) => {
      var a;
      let i = n.clone(), o = ((a = n.raws.tailwind) == null ? void 0 : a.preserveSource) !== !0 || !i.source;
      return t !== void 0 && o && (i.source = t, "walk" in i && i.walk((u) => {
        u.source = t;
      })), r !== void 0 && (i.raws.tailwind = { ...i.raws.tailwind, ...r }), i;
    });
  }
  var $n = /[\\^$.*+?()[\]{}|]/g, Ts = RegExp($n.source);
  function yt(e) {
    return e = Array.isArray(e) ? e : [e], e = e.map((t) => t instanceof RegExp ? t.source : t), e.join("");
  }
  function ge(e) {
    return new RegExp(yt(e), "g");
  }
  function Ge(e) {
    return `(?:${e.map(yt).join("|")})`;
  }
  function Nn(e) {
    return `(?:${yt(e)})?`;
  }
  function Es(e) {
    return `(?:${yt(e)})*`;
  }
  function _s(e) {
    return e && Ts.test(e) ? e.replace($n, "\\$&") : e || "";
  }
  function Ps(e) {
    let t = Array.from(js(e));
    return (r) => {
      let n = [];
      for (let i of t)
        n = [...n, ...r.match(i) ?? []];
      return n.filter((i) => i !== void 0).map(Ms);
    };
  }
  function* js(e) {
    let t = e.tailwindConfig.separator, r = se(e.tailwindConfig, "variantGrouping"), n = e.tailwindConfig.prefix !== "" ? Nn(ge([/-?/, _s(e.tailwindConfig.prefix)])) : "", i = Ge([/\[[^\s:'"`]+:[^\s\[\]]+\]/, /\[[^\s:'"`]+:[^\s]+?\[[^\s]+?\][^\s]+?\]/, ge([/-?(?:\w+)/, Nn(Ge([ge([/-(?:\w+-)*\[[^\s:]+\]/, /(?![{([]])/, /(?:\/[^\s'"`\\><$]*)?/]), ge([/-(?:\w+-)*\[[^\s]+\]/, /(?![{([]])/, /(?:\/[^\s'"`\\$]*)?/]), /[-\/][^\s'"`\\$={><]*/]))])]), o = [Ge([ge([/@\[[^\s"'`]+\](\/[^\s"'`]+)?/, t]), ge([/([^\s"'`\[\\]+-)?\[[^\s"'`]+\]/, t]), ge([/[^\s"'`\[\\]+/, t])]), Ge([ge([/([^\s"'`\[\\]+-)?\[[^\s`]+\]/, t]), ge([/[^\s`\[\\]+/, t])])];
    for (let a of o)
      yield ge(["((?=((", a, ")+))\\2)?", /!?/, n, r ? Ge([ge([/\(/, i, Es([/,/, i]), /\)/]), i]) : i]);
    yield /[^<>"'`\s.(){}[\]#=%$]*[^<>"'`\s.(){}[\]#=%:$]/g;
  }
  var Ds = /([\[\]'"`])([^\[\]'"`])?/g, Is = /[^"'`\s<>\]]+/;
  function Ms(e) {
    if (!e.includes("-["))
      return e;
    let t = 0, r = [], n = e.matchAll(Ds);
    n = Array.from(n).flatMap((i) => {
      let [, ...o] = i;
      return o.map((a, u) => Object.assign([], i, { index: i.index + u, 0: a }));
    });
    for (let i of n) {
      let o = i[0], a = r[r.length - 1];
      if (o === a ? r.pop() : (o === "'" || o === '"' || o === "`") && r.push(o), !a) {
        if (o === "[") {
          t++;
          continue;
        } else if (o === "]") {
          t--;
          continue;
        }
        if (t < 0)
          return e.substring(0, i.index - 1);
        if (t === 0 && !Is.test(o))
          return e.substring(0, i.index);
      }
    }
    return e;
  }
  var ve = ze, zn = { DEFAULT: Ps }, Wn = { DEFAULT: (e) => e, svelte: (e) => e.replace(/(?:^|\s)class:/g, " ") };
  function Rs(e, t) {
    let r = e.tailwindConfig.content.extract;
    return r[t] || r.DEFAULT || zn[t] || zn.DEFAULT(e);
  }
  function Us(e, t) {
    let r = e.content.transform;
    return r[t] || r.DEFAULT || Wn[t] || Wn.DEFAULT;
  }
  var Ye = /* @__PURE__ */ new WeakMap();
  function Fs(e, t, r, n) {
    Ye.has(t) || Ye.set(t, new Gi.default({ maxSize: 25e3 }));
    for (let i of e.split(`
`))
      if (i = i.trim(), !n.has(i))
        if (n.add(i), Ye.get(t).has(i))
          for (let o of Ye.get(t).get(i))
            r.add(o);
        else {
          let o = t(i).filter((u) => u !== "!*"), a = new Set(o);
          for (let u of a)
            r.add(u);
          Ye.get(t).set(i, a);
        }
  }
  function Ls(e, t) {
    let r = t.offsets.sort(e), n = { base: /* @__PURE__ */ new Set(), defaults: /* @__PURE__ */ new Set(), components: /* @__PURE__ */ new Set(), utilities: /* @__PURE__ */ new Set(), variants: /* @__PURE__ */ new Set() };
    for (let [i, o] of r)
      n[i.layer].add(o);
    return n;
  }
  function $s(e) {
    return (t) => {
      let r = { base: null, components: null, utilities: null, variants: null };
      if (t.walkAtRules((f) => {
        f.name === "tailwind" && Object.keys(r).includes(f.params) && (r[f.params] = f);
      }), Object.values(r).every((f) => f === null))
        return t;
      let n = /* @__PURE__ */ new Set([...e.candidates ?? [], Me]), i = /* @__PURE__ */ new Set();
      if (ve.DEBUG && console.time("Reading changed files"), ve.OXIDE)
        for (let f of gr("@tailwindcss/oxide").parseCandidateStringsFromFiles(e.changedContent))
          n.add(f);
      else
        for (let { file: f, content: d, extension: g } of e.changedContent) {
          let b = Us(e.tailwindConfig, g), v = Rs(e, g);
          d = f ? nt.readFileSync(f, "utf8") : d, Fs(b(d), v, n, i);
        }
      ve.DEBUG && console.timeEnd("Reading changed files");
      let o = e.classCache.size;
      ve.DEBUG && console.time("Generate rules"), ve.DEBUG && console.time("Sorting candidates");
      let a = ve.OXIDE ? n : new Set([...n].sort((f, d) => f === d ? 0 : f < d ? -1 : 1));
      ve.DEBUG && console.timeEnd("Sorting candidates"), Ln(a, e), ve.DEBUG && console.timeEnd("Generate rules"), ve.DEBUG && console.time("Build stylesheet"), (e.stylesheetCache === null || e.classCache.size !== o) && (e.stylesheetCache = Ls([...e.ruleCache], e)), ve.DEBUG && console.timeEnd("Build stylesheet");
      let { defaults: u, base: s, components: l, utilities: p, variants: c } = e.stylesheetCache;
      r.base && (r.base.before(qe([...s, ...u], r.base.source, { layer: "base" })), r.base.remove()), r.components && (r.components.before(qe([...l], r.components.source, { layer: "components" })), r.components.remove()), r.utilities && (r.utilities.before(qe([...p], r.utilities.source, { layer: "utilities" })), r.utilities.remove());
      let h = Array.from(c).filter((f) => {
        var g;
        let d = (g = f.raws.tailwind) == null ? void 0 : g.parentLayer;
        return d === "components" ? r.components !== null : d === "utilities" ? r.utilities !== null : !0;
      });
      r.variants ? (r.variants.before(qe(h, r.variants.source, { layer: "variants" })), r.variants.remove()) : h.length > 0 && t.append(qe(h, t.source, { layer: "variants" }));
      let m = h.some((f) => {
        var d;
        return ((d = f.raws.tailwind) == null ? void 0 : d.parentLayer) === "utilities";
      });
      r.utilities && p.size === 0 && !m && fe.warn("content-problems", ["No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.", "https://tailwindcss.com/docs/content-configuration"]), ve.DEBUG && (console.log("Potential classes: ", n.size), console.log("Active contexts: ", Hi.size)), e.changedContent = [], t.walkAtRules("layer", (f) => {
        Object.keys(r).includes(f.params) && f.remove();
      });
    };
  }
  var Bn = te(Ae());
  function bt(e) {
    let t = /* @__PURE__ */ new Map();
    K.root({ nodes: [e.clone()] }).walkRules((i) => {
      (0, Bn.default)((o) => {
        o.walkClasses((a) => {
          let u = a.parent.toString(), s = t.get(u);
          s || t.set(u, s = /* @__PURE__ */ new Set()), s.add(a.value);
        });
      }).processSync(i.selector);
    });
    let r = Array.from(t.values(), (i) => Array.from(i)), n = r.flat();
    return Object.assign(n, { groups: r });
  }
  var Ns = (0, Bn.default)();
  function cr(e) {
    return Ns.astSync(e);
  }
  function Vn(e, t) {
    let r = /* @__PURE__ */ new Set();
    for (let n of e)
      r.add(n.split(t).pop());
    return Array.from(r);
  }
  function qn(e, t) {
    let r = e.tailwindConfig.prefix;
    return typeof r == "function" ? r(t) : r + t;
  }
  function* Gn(e) {
    for (yield e; e.parent; )
      yield e.parent, e = e.parent;
  }
  function zs(e, t = {}) {
    let r = e.nodes;
    e.nodes = [];
    let n = e.clone(t);
    return e.nodes = r, n;
  }
  function Ws(e) {
    for (let t of Gn(e))
      if (e !== t) {
        if (t.type === "root")
          break;
        e = zs(t, { nodes: [e] });
      }
    return e;
  }
  function Bs(e, t) {
    let r = /* @__PURE__ */ new Map();
    return e.walkRules((n) => {
      var a;
      for (let u of Gn(n))
        if (((a = u.raws.tailwind) == null ? void 0 : a.layer) !== void 0)
          return;
      let i = Ws(n), o = t.offsets.create("user");
      for (let u of bt(n)) {
        let s = r.get(u) || [];
        r.set(u, s), s.push([{ layer: "user", sort: o, important: !1 }, i]);
      }
    }), r;
  }
  function Vs(e, t) {
    for (let r of e) {
      if (t.notClassCache.has(r) || t.applyClassCache.has(r))
        continue;
      if (t.classCache.has(r)) {
        t.applyClassCache.set(r, t.classCache.get(r).map(([i, o]) => [i, o.clone()]));
        continue;
      }
      let n = Array.from(ar(r, t));
      if (n.length === 0) {
        t.notClassCache.add(r);
        continue;
      }
      t.applyClassCache.set(r, n);
    }
    return t.applyClassCache;
  }
  function qs(e) {
    let t = null;
    return { get: (r) => (t = t || e(), t.get(r)), has: (r) => (t = t || e(), t.has(r)) };
  }
  function Gs(e) {
    return { get: (t) => e.flatMap((r) => r.get(t) || []), has: (t) => e.some((r) => r.has(t)) };
  }
  function Yn(e) {
    let t = e.split(/[\s\t\n]+/g);
    return t[t.length - 1] === "!important" ? [t.slice(0, -1), !0] : [t, !1];
  }
  function Hn(e, t, r) {
    let n = /* @__PURE__ */ new Set(), i = [];
    if (e.walkAtRules("apply", (s) => {
      let [l] = Yn(s.params);
      for (let p of l)
        n.add(p);
      i.push(s);
    }), i.length === 0)
      return;
    let o = Gs([r, Vs(n, t)]);
    function a(s, l, p) {
      let c = cr(s), h = cr(l), m = cr(`.${Pe(p)}`).nodes[0].nodes[0];
      return c.each((f) => {
        let d = /* @__PURE__ */ new Set();
        h.each((g) => {
          let b = !1;
          g = g.clone(), g.walkClasses((v) => {
            v.value === m.value && (b || (v.replaceWith(...f.nodes.map((x) => x.clone())), d.add(g), b = !0));
          });
        });
        for (let g of d) {
          let b = [[]];
          for (let v of g.nodes)
            v.type === "combinator" ? (b.push(v), b.push([])) : b[b.length - 1].push(v);
          g.nodes = [];
          for (let v of b)
            Array.isArray(v) && v.sort((x, k) => x.type === "tag" && k.type === "class" ? -1 : x.type === "class" && k.type === "tag" ? 1 : x.type === "class" && k.type === "pseudo" && k.value.startsWith("::") ? -1 : x.type === "pseudo" && x.value.startsWith("::") && k.type === "class" ? 1 : 0), g.nodes = g.nodes.concat(v);
        }
        f.replaceWith(...d);
      }), c.toString();
    }
    let u = /* @__PURE__ */ new Map();
    for (let s of i) {
      let [l] = u.get(s.parent) || [[], s.source];
      u.set(s.parent, [l, s.source]);
      let [p, c] = Yn(s.params);
      if (s.parent.type === "atrule") {
        if (s.parent.name === "screen") {
          let h = s.parent.params;
          throw s.error(`@apply is not supported within nested at-rules like @screen. We suggest you write this as @apply ${p.map((m) => `${h}:${m}`).join(" ")} instead.`);
        }
        throw s.error(`@apply is not supported within nested at-rules like @${s.parent.name}. You can fix this by un-nesting @${s.parent.name}.`);
      }
      for (let h of p) {
        if ([qn(t, "group"), qn(t, "peer")].includes(h))
          throw s.error(`@apply should not be used with the '${h}' utility`);
        if (!o.has(h))
          throw s.error(`The \`${h}\` class does not exist. If \`${h}\` is a custom class, make sure it is defined within a \`@layer\` directive.`);
        let m = o.get(h);
        l.push([h, c, m]);
      }
    }
    for (let [s, [l, p]] of u) {
      let c = [];
      for (let [m, f, d] of l) {
        let g = [m, ...Vn([m], t.tailwindConfig.separator)];
        for (let [b, v] of d) {
          let x = bt(s), k = bt(v);
          if (k = k.groups.filter((w) => w.some((S) => g.includes(S))).flat(), k = k.concat(Vn(k, t.tailwindConfig.separator)), x.some((w) => k.includes(w)))
            throw v.error(`You cannot \`@apply\` the \`${m}\` utility here because it creates a circular dependency.`);
          let y = K.root({ nodes: [v.clone()] });
          y.walk((w) => {
            w.source = p;
          }), (v.type !== "atrule" || v.type === "atrule" && v.name !== "keyframes") && y.walkRules((w) => {
            if (!bt(w).some((C) => C === m)) {
              w.remove();
              return;
            }
            let S = typeof t.tailwindConfig.important == "string" ? t.tailwindConfig.important : null, O = s.raws.tailwind !== void 0 && S && s.selector.indexOf(S) === 0 ? s.selector.slice(S.length) : s.selector;
            w.selector = a(O, w.selector, m), S && O !== s.selector && (w.selector = In(w.selector, S)), w.walkDecls((C) => {
              C.important = b.important || f;
            });
          }), y.nodes[0] && c.push([b.sort, y.nodes[0]]);
        }
      }
      let h = t.offsets.sort(c).map((m) => m[1]);
      s.after(h);
    }
    for (let s of i)
      s.parent.nodes.length > 1 ? s.remove() : s.parent.remove();
    Hn(e, t, r);
  }
  function Ys(e) {
    return (t) => {
      let r = qs(() => Bs(t, e));
      Hn(t, e, r);
    };
  }
  var wt = te(Hr()), Hs = te(Li()), Qn = te(Bi());
  function ur(e) {
    return typeof e == "object" && e !== null;
  }
  function Qs(e, t) {
    let r = Ve(t);
    do
      if (r.pop(), (0, wt.default)(e, r) !== void 0)
        break;
    while (r.length);
    return r.length ? r : void 0;
  }
  function Ue(e) {
    return typeof e == "string" ? e : e.reduce((t, r, n) => r.includes(".") ? `${t}[${r}]` : n === 0 ? r : `${t}.${r}`, "");
  }
  function Jn(e) {
    return e.map((t) => `'${t}'`).join(", ");
  }
  function Xn(e) {
    return Jn(Object.keys(e));
  }
  function dr(e, t, r, n = {}) {
    let i = Array.isArray(t) ? Ue(t) : t.replace(/^['"]+|['"]+$/g, ""), o = Array.isArray(t) ? t : Ve(i), a = (0, wt.default)(e.theme, o, r);
    if (a === void 0) {
      let s = `'${i}' does not exist in your theme config.`, l = o.slice(0, -1), p = (0, wt.default)(e.theme, l);
      if (ur(p)) {
        let c = Object.keys(p).filter((m) => dr(e, [...l, m]).isValid), h = (0, Hs.default)(o[o.length - 1], c);
        h ? s += ` Did you mean '${Ue([...l, h])}'?` : c.length > 0 && (s += ` '${Ue(l)}' has the following valid keys: ${Jn(c)}`);
      } else {
        let c = Qs(e.theme, i);
        if (c) {
          let h = (0, wt.default)(e.theme, c);
          ur(h) ? s += ` '${Ue(c)}' has the following keys: ${Xn(h)}` : s += ` '${Ue(c)}' is not an object.`;
        } else
          s += ` Your theme has the following top-level keys: ${Xn(e.theme)}`;
      }
      return { isValid: !1, error: s };
    }
    if (!(typeof a == "string" || typeof a == "number" || typeof a == "function" || a instanceof String || a instanceof Number || Array.isArray(a))) {
      let s = `'${i}' was found but does not resolve to a string.`;
      if (ur(a)) {
        let l = Object.keys(a).filter((p) => dr(e, [...o, p]).isValid);
        l.length && (s += ` Did you mean something like '${Ue([...o, l[0]])}'?`);
      }
      return { isValid: !1, error: s };
    }
    let [u] = o;
    return { isValid: !0, value: ft(u)(a, n) };
  }
  function Js(e, t, r) {
    t = t.map((i) => Zn(e, i, r));
    let n = [""];
    for (let i of t)
      i.type === "div" && i.value === "," ? n.push("") : n[n.length - 1] += Qn.default.stringify(i);
    return n;
  }
  function Zn(e, t, r) {
    if (t.type === "function" && r[t.value] !== void 0) {
      let n = Js(e, t.nodes, r);
      t.type = "word", t.value = r[t.value](e, ...n);
    }
    return t;
  }
  function Xs(e, t, r) {
    return (0, Qn.default)(t).walk((n) => {
      Zn(e, n, r);
    }).toString();
  }
  var Zs = { atrule: "params", decl: "value" };
  function* Ks(e) {
    e = e.replace(/^['"]+|['"]+$/g, "");
    let t = e.match(/^([^\s]+)(?![^\[]*\])(?:\s*\/\s*([^\/\s]+))$/), r;
    yield [e, void 0], t && (e = t[1], r = t[2], yield [e, r]);
  }
  function ea(e, t, r) {
    let n = Array.from(Ks(t)).map(([i, o]) => Object.assign(dr(e, i, r, { opacityValue: o }), { resolvedPath: i, alpha: o }));
    return n.find((i) => i.isValid) ?? n[0];
  }
  function ta(e) {
    let t = e.tailwindConfig, r = { theme: (n, i, ...o) => {
      var c;
      let { isValid: a, value: u, error: s, alpha: l } = ea(t, i, o.length ? o : void 0);
      if (!a) {
        let h = n.parent, m = (c = h == null ? void 0 : h.raws.tailwind) == null ? void 0 : c.candidate;
        if (h && m !== void 0) {
          e.markInvalidUtilityNode(h), h.remove();
          return;
        }
        throw n.error(s);
      }
      let p = ut(u);
      return (l !== void 0 || p !== void 0 && typeof p == "function") && (l === void 0 && (l = 1), u = Re(p, l, p)), u;
    }, screen: (n, i) => {
      i = i.replace(/^['"]+/g, "").replace(/['"]+$/g, "");
      let o = Be(t.theme.screens).find(({ name: a }) => a === i);
      if (!o)
        throw n.error(`The '${i}' screen does not exist in your theme.`);
      return ht(o);
    } };
    return (n) => {
      n.walk((i) => {
        let o = Zs[i.type];
        o !== void 0 && (i[o] = Xs(i, i[o], r));
      });
    };
  }
  function ra({ tailwindConfig: { theme: e } }) {
    return function(t) {
      t.walkAtRules("screen", (r) => {
        let n = r.params, i = Be(e.screens).find(({ name: o }) => o === n);
        if (!i)
          throw r.error(`No \`${n}\` screen found.`);
        r.name = "media", r.params = ht(i);
      });
    };
  }
  var pr = te(Ae()), Kn = { id(e) {
    return pr.default.attribute({ attribute: "id", operator: "=", value: e.value, quoteMark: '"' });
  } };
  function na(e) {
    let t = e.filter((u) => u.type !== "pseudo" || u.nodes.length > 0 ? !0 : u.value.startsWith("::") || [":before", ":after", ":first-line", ":first-letter"].includes(u.value)).reverse(), r = /* @__PURE__ */ new Set(["tag", "class", "id", "attribute"]), n = t.findIndex((u) => r.has(u.type));
    if (n === -1)
      return t.reverse().join("").trim();
    let i = t[n], o = Kn[i.type] ? Kn[i.type](i) : i;
    t = t.slice(0, n);
    let a = t.findIndex((u) => u.type === "combinator" && u.value === ">");
    return a !== -1 && (t.splice(0, a), t.unshift(pr.default.universal())), [o, ...t.reverse()].join("").trim();
  }
  var ia = (0, pr.default)((e) => e.map((t) => {
    let r = t.split((n) => n.type === "combinator" && n.value === " ").pop();
    return na(r);
  })), fr = /* @__PURE__ */ new Map();
  function oa(e) {
    return fr.has(e) || fr.set(e, ia.transformSync(e)), fr.get(e);
  }
  function sa({ tailwindConfig: e }) {
    return (t) => {
      let r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set();
      if (t.walkAtRules("defaults", (i) => {
        if (i.nodes && i.nodes.length > 0) {
          n.add(i);
          return;
        }
        let o = i.params;
        r.has(o) || r.set(o, /* @__PURE__ */ new Set()), r.get(o).add(i.parent), i.remove();
      }), se(e, "optimizeUniversalDefaults"))
        for (let i of n) {
          let o = /* @__PURE__ */ new Map(), a = r.get(i.params) ?? [];
          for (let u of a)
            for (let s of oa(u.selector)) {
              let l = s.includes(":-") || s.includes("::-") ? s : "__DEFAULT__", p = o.get(l) ?? /* @__PURE__ */ new Set();
              o.set(l, p), p.add(s);
            }
          if (se(e, "optimizeUniversalDefaults")) {
            if (o.size === 0) {
              i.remove();
              continue;
            }
            for (let [, u] of o) {
              let s = K.rule({ source: i.source });
              s.selectors = [...u], s.append(i.nodes.map((l) => l.clone())), i.before(s);
            }
          }
          i.remove();
        }
      else if (n.size) {
        let i = K.rule({ selectors: ["*", "::before", "::after"] });
        for (let a of n)
          i.append(a.nodes), i.parent || a.before(i), i.source || (i.source = a.source), a.remove();
        let o = i.clone({ selectors: ["::backdrop"] });
        i.after(o);
      }
    };
  }
  var ei = { atrule: ["name", "params"], rule: ["selector"] }, aa = new Set(Object.keys(ei));
  function la() {
    function e(t) {
      let r = null;
      t.each((n) => {
        if (!aa.has(n.type)) {
          r = null;
          return;
        }
        if (r === null) {
          r = n;
          return;
        }
        let i = ei[n.type];
        n.type === "atrule" && n.name === "font-face" ? r = n : i.every((o) => (n[o] ?? "").replace(/\s+/g, " ") === (r[o] ?? "").replace(/\s+/g, " ")) ? (n.nodes && r.append(n.nodes), n.remove()) : r = n;
      }), t.each((n) => {
        n.type === "atrule" && e(n);
      });
    }
    return (t) => {
      e(t);
    };
  }
  function ca() {
    return (e) => {
      e.walkRules((t) => {
        let r = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set([]), i = /* @__PURE__ */ new Map();
        t.walkDecls((o) => {
          if (o.parent === t) {
            if (r.has(o.prop)) {
              if (r.get(o.prop).value === o.value) {
                n.add(r.get(o.prop)), r.set(o.prop, o);
                return;
              }
              i.has(o.prop) || i.set(o.prop, /* @__PURE__ */ new Set()), i.get(o.prop).add(r.get(o.prop)), i.get(o.prop).add(o);
            }
            r.set(o.prop, o);
          }
        });
        for (let o of n)
          o.remove();
        for (let o of i.values()) {
          let a = /* @__PURE__ */ new Map();
          for (let u of o) {
            let s = da(u.value);
            s !== null && (a.has(s) || a.set(s, /* @__PURE__ */ new Set()), a.get(s).add(u));
          }
          for (let u of a.values()) {
            let s = Array.from(u).slice(0, -1);
            for (let l of s)
              l.remove();
          }
        }
      });
    };
  }
  var ua = Symbol("unitless-number");
  function da(e) {
    let t = /^-?\d*.?\d+([\w%]+)?$/g.exec(e);
    return t ? t[1] ?? ua : null;
  }
  function pa(e) {
    if (!e.walkAtRules)
      return;
    let t = /* @__PURE__ */ new Set();
    if (e.walkAtRules("apply", (r) => {
      t.add(r.parent);
    }), t.size !== 0)
      for (let r of t) {
        let n = [], i = [];
        for (let o of r.nodes)
          o.type === "atrule" && o.name === "apply" ? (i.length > 0 && (n.push(i), i = []), n.push([o])) : i.push(o);
        if (i.length > 0 && n.push(i), n.length !== 1) {
          for (let o of [...n].reverse()) {
            let a = r.clone({ nodes: [] });
            a.append(o), r.after(a);
          }
          r.remove();
        }
      }
  }
  function ti() {
    return (e) => {
      pa(e);
    };
  }
  function fa(e) {
    return e.type === "root";
  }
  function ha(e) {
    return e.type === "atrule" && e.name === "layer";
  }
  function ma(e) {
    return (t, r) => {
      let n = !1;
      t.walkAtRules("tailwind", (i) => {
        if (n)
          return !1;
        if (i.parent && !(fa(i.parent) || ha(i.parent)))
          return n = !0, i.warn(r, ["Nested @tailwind rules were detected, but are not supported.", "Consider using a prefix to scope Tailwind's classes: https://tailwindcss.com/docs/configuration#prefix", "Alternatively, use the important selector strategy: https://tailwindcss.com/docs/configuration#selector-strategy"].join(`
`)), !1;
      }), t.walkRules((i) => {
        if (n)
          return !1;
        i.walkRules((o) => (n = !0, o.warn(r, ["Nested CSS was detected, but CSS nesting has not been configured correctly.", "Please enable a CSS nesting plugin *before* Tailwind in your configuration.", "See how here: https://tailwindcss.com/docs/using-with-preprocessors#nesting"].join(`
`)), !1));
      });
    };
  }
  function ga(e) {
    return function(t, r) {
      let { tailwindDirectives: n, applyDirectives: i } = qi(t);
      ma()(t, r), ti()(t, r);
      let o = e({ tailwindDirectives: n, applyDirectives: i, registerDependency(a) {
        r.messages.push({ plugin: "tailwindcss", parent: r.opts.from, ...a });
      }, createContext(a, u) {
        return ps(a, u, t);
      } })(t, r);
      if (o.tailwindConfig.separator === "-")
        throw new Error("The '-' character cannot be used as a custom separator in JIT mode due to parsing ambiguity. Please use another character like '_' instead.");
      o.tailwindConfig, $s(o)(t, r), ti()(t, r), Ys(o)(t, r), ta(o)(t, r), ra(o)(t, r), sa(o)(t, r), la()(t, r), ca()(t, r);
    };
  }
  var va = ["preflight", "container", "accessibility", "pointerEvents", "visibility", "position", "inset", "isolation", "zIndex", "order", "gridColumn", "gridColumnStart", "gridColumnEnd", "gridRow", "gridRowStart", "gridRowEnd", "float", "clear", "margin", "boxSizing", "lineClamp", "display", "aspectRatio", "height", "maxHeight", "minHeight", "width", "minWidth", "maxWidth", "flex", "flexShrink", "flexGrow", "flexBasis", "tableLayout", "captionSide", "borderCollapse", "borderSpacing", "transformOrigin", "translate", "rotate", "skew", "scale", "transform", "animation", "cursor", "touchAction", "userSelect", "resize", "scrollSnapType", "scrollSnapAlign", "scrollSnapStop", "scrollMargin", "scrollPadding", "listStylePosition", "listStyleType", "listStyleImage", "appearance", "columns", "breakBefore", "breakInside", "breakAfter", "gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateColumns", "gridTemplateRows", "flexDirection", "flexWrap", "placeContent", "placeItems", "alignContent", "alignItems", "justifyContent", "justifyItems", "gap", "space", "divideWidth", "divideStyle", "divideColor", "divideOpacity", "placeSelf", "alignSelf", "justifySelf", "overflow", "overscrollBehavior", "scrollBehavior", "textOverflow", "hyphens", "whitespace", "wordBreak", "borderRadius", "borderWidth", "borderStyle", "borderColor", "borderOpacity", "backgroundColor", "backgroundOpacity", "backgroundImage", "gradientColorStops", "boxDecorationBreak", "backgroundSize", "backgroundAttachment", "backgroundClip", "backgroundPosition", "backgroundRepeat", "backgroundOrigin", "fill", "stroke", "strokeWidth", "objectFit", "objectPosition", "padding", "textAlign", "textIndent", "verticalAlign", "fontFamily", "fontSize", "fontWeight", "textTransform", "fontStyle", "fontVariantNumeric", "lineHeight", "letterSpacing", "textColor", "textOpacity", "textDecoration", "textDecorationColor", "textDecorationStyle", "textDecorationThickness", "textUnderlineOffset", "fontSmoothing", "placeholderColor", "placeholderOpacity", "caretColor", "accentColor", "opacity", "backgroundBlendMode", "mixBlendMode", "boxShadow", "boxShadowColor", "outlineStyle", "outlineWidth", "outlineOffset", "outlineColor", "ringWidth", "ringColor", "ringOpacity", "ringOffsetWidth", "ringOffsetColor", "blur", "brightness", "contrast", "dropShadow", "grayscale", "hueRotate", "invert", "saturate", "sepia", "filter", "backdropBlur", "backdropBrightness", "backdropContrast", "backdropGrayscale", "backdropHueRotate", "backdropInvert", "backdropOpacity", "backdropSaturate", "backdropSepia", "backdropFilter", "transitionProperty", "transitionDelay", "transitionDuration", "transitionTimingFunction", "willChange", "content"];
  function ya(e, t) {
    return e === void 0 ? t : Array.isArray(e) ? e : [...new Set(t.filter((r) => e !== !1 && e[r] !== !1).concat(Object.keys(e).filter((r) => e[r] !== !1)))];
  }
  var ba = { inherit: "inherit", current: "currentColor", transparent: "transparent", black: "#000", white: "#fff", slate: { 50: "#f8fafc", 100: "#f1f5f9", 200: "#e2e8f0", 300: "#cbd5e1", 400: "#94a3b8", 500: "#64748b", 600: "#475569", 700: "#334155", 800: "#1e293b", 900: "#0f172a", 950: "#020617" }, gray: { 50: "#f9fafb", 100: "#f3f4f6", 200: "#e5e7eb", 300: "#d1d5db", 400: "#9ca3af", 500: "#6b7280", 600: "#4b5563", 700: "#374151", 800: "#1f2937", 900: "#111827", 950: "#030712" }, zinc: { 50: "#fafafa", 100: "#f4f4f5", 200: "#e4e4e7", 300: "#d4d4d8", 400: "#a1a1aa", 500: "#71717a", 600: "#52525b", 700: "#3f3f46", 800: "#27272a", 900: "#18181b", 950: "#09090b" }, neutral: { 50: "#fafafa", 100: "#f5f5f5", 200: "#e5e5e5", 300: "#d4d4d4", 400: "#a3a3a3", 500: "#737373", 600: "#525252", 700: "#404040", 800: "#262626", 900: "#171717", 950: "#0a0a0a" }, stone: { 50: "#fafaf9", 100: "#f5f5f4", 200: "#e7e5e4", 300: "#d6d3d1", 400: "#a8a29e", 500: "#78716c", 600: "#57534e", 700: "#44403c", 800: "#292524", 900: "#1c1917", 950: "#0c0a09" }, red: { 50: "#fef2f2", 100: "#fee2e2", 200: "#fecaca", 300: "#fca5a5", 400: "#f87171", 500: "#ef4444", 600: "#dc2626", 700: "#b91c1c", 800: "#991b1b", 900: "#7f1d1d", 950: "#450a0a" }, orange: { 50: "#fff7ed", 100: "#ffedd5", 200: "#fed7aa", 300: "#fdba74", 400: "#fb923c", 500: "#f97316", 600: "#ea580c", 700: "#c2410c", 800: "#9a3412", 900: "#7c2d12", 950: "#431407" }, amber: { 50: "#fffbeb", 100: "#fef3c7", 200: "#fde68a", 300: "#fcd34d", 400: "#fbbf24", 500: "#f59e0b", 600: "#d97706", 700: "#b45309", 800: "#92400e", 900: "#78350f", 950: "#451a03" }, yellow: { 50: "#fefce8", 100: "#fef9c3", 200: "#fef08a", 300: "#fde047", 400: "#facc15", 500: "#eab308", 600: "#ca8a04", 700: "#a16207", 800: "#854d0e", 900: "#713f12", 950: "#422006" }, lime: { 50: "#f7fee7", 100: "#ecfccb", 200: "#d9f99d", 300: "#bef264", 400: "#a3e635", 500: "#84cc16", 600: "#65a30d", 700: "#4d7c0f", 800: "#3f6212", 900: "#365314", 950: "#1a2e05" }, green: { 50: "#f0fdf4", 100: "#dcfce7", 200: "#bbf7d0", 300: "#86efac", 400: "#4ade80", 500: "#22c55e", 600: "#16a34a", 700: "#15803d", 800: "#166534", 900: "#14532d", 950: "#052e16" }, emerald: { 50: "#ecfdf5", 100: "#d1fae5", 200: "#a7f3d0", 300: "#6ee7b7", 400: "#34d399", 500: "#10b981", 600: "#059669", 700: "#047857", 800: "#065f46", 900: "#064e3b", 950: "#022c22" }, teal: { 50: "#f0fdfa", 100: "#ccfbf1", 200: "#99f6e4", 300: "#5eead4", 400: "#2dd4bf", 500: "#14b8a6", 600: "#0d9488", 700: "#0f766e", 800: "#115e59", 900: "#134e4a", 950: "#042f2e" }, cyan: { 50: "#ecfeff", 100: "#cffafe", 200: "#a5f3fc", 300: "#67e8f9", 400: "#22d3ee", 500: "#06b6d4", 600: "#0891b2", 700: "#0e7490", 800: "#155e75", 900: "#164e63", 950: "#083344" }, sky: { 50: "#f0f9ff", 100: "#e0f2fe", 200: "#bae6fd", 300: "#7dd3fc", 400: "#38bdf8", 500: "#0ea5e9", 600: "#0284c7", 700: "#0369a1", 800: "#075985", 900: "#0c4a6e", 950: "#082f49" }, blue: { 50: "#eff6ff", 100: "#dbeafe", 200: "#bfdbfe", 300: "#93c5fd", 400: "#60a5fa", 500: "#3b82f6", 600: "#2563eb", 700: "#1d4ed8", 800: "#1e40af", 900: "#1e3a8a", 950: "#172554" }, indigo: { 50: "#eef2ff", 100: "#e0e7ff", 200: "#c7d2fe", 300: "#a5b4fc", 400: "#818cf8", 500: "#6366f1", 600: "#4f46e5", 700: "#4338ca", 800: "#3730a3", 900: "#312e81", 950: "#1e1b4b" }, violet: { 50: "#f5f3ff", 100: "#ede9fe", 200: "#ddd6fe", 300: "#c4b5fd", 400: "#a78bfa", 500: "#8b5cf6", 600: "#7c3aed", 700: "#6d28d9", 800: "#5b21b6", 900: "#4c1d95", 950: "#2e1065" }, purple: { 50: "#faf5ff", 100: "#f3e8ff", 200: "#e9d5ff", 300: "#d8b4fe", 400: "#c084fc", 500: "#a855f7", 600: "#9333ea", 700: "#7e22ce", 800: "#6b21a8", 900: "#581c87", 950: "#3b0764" }, fuchsia: { 50: "#fdf4ff", 100: "#fae8ff", 200: "#f5d0fe", 300: "#f0abfc", 400: "#e879f9", 500: "#d946ef", 600: "#c026d3", 700: "#a21caf", 800: "#86198f", 900: "#701a75", 950: "#4a044e" }, pink: { 50: "#fdf2f8", 100: "#fce7f3", 200: "#fbcfe8", 300: "#f9a8d4", 400: "#f472b6", 500: "#ec4899", 600: "#db2777", 700: "#be185d", 800: "#9d174d", 900: "#831843", 950: "#500724" }, rose: { 50: "#fff1f2", 100: "#ffe4e6", 200: "#fecdd3", 300: "#fda4af", 400: "#fb7185", 500: "#f43f5e", 600: "#e11d48", 700: "#be123c", 800: "#9f1239", 900: "#881337", 950: "#4c0519" }, get lightBlue() {
    return this.sky;
  }, get warmGray() {
    return this.stone;
  }, get trueGray() {
    return this.neutral;
  }, get coolGray() {
    return this.gray;
  }, get blueGray() {
    return this.slate;
  } };
  function ri(e, ...t) {
    var r, n;
    for (let i of t) {
      for (let o in i)
        (r = e == null ? void 0 : e.hasOwnProperty) != null && r.call(e, o) || (e[o] = i[o]);
      for (let o of Object.getOwnPropertySymbols(i))
        (n = e == null ? void 0 : e.hasOwnProperty) != null && n.call(e, o) || (e[o] = i[o]);
    }
    return e;
  }
  function wa(e) {
    (() => {
      if (e.purge || !e.content || !Array.isArray(e.content) && !(typeof e.content == "object" && e.content !== null))
        return !1;
      if (Array.isArray(e.content))
        return e.content.every((t) => typeof t == "string" ? !0 : !(typeof (t == null ? void 0 : t.raw) != "string" || t != null && t.extension && typeof (t == null ? void 0 : t.extension) != "string"));
      if (typeof e.content == "object" && e.content !== null) {
        if (Object.keys(e.content).some((t) => !["files", "relative", "extract", "transform"].includes(t)))
          return !1;
        if (Array.isArray(e.content.files)) {
          if (!e.content.files.every((t) => typeof t == "string" ? !0 : !(typeof (t == null ? void 0 : t.raw) != "string" || t != null && t.extension && typeof (t == null ? void 0 : t.extension) != "string")))
            return !1;
          if (typeof e.content.extract == "object") {
            for (let t of Object.values(e.content.extract))
              if (typeof t != "function")
                return !1;
          } else if (!(e.content.extract === void 0 || typeof e.content.extract == "function"))
            return !1;
          if (typeof e.content.transform == "object") {
            for (let t of Object.values(e.content.transform))
              if (typeof t != "function")
                return !1;
          } else if (!(e.content.transform === void 0 || typeof e.content.transform == "function"))
            return !1;
          if (typeof e.content.relative != "boolean" && typeof e.content.relative < "u")
            return !1;
        }
        return !0;
      }
      return !1;
    })() || fe.warn("purge-deprecation", ["The `purge`/`content` options have changed in Tailwind CSS v3.0.", "Update your configuration file to eliminate this warning.", "https://tailwindcss.com/docs/upgrade-guide#configure-content-sources"]), e.safelist = (() => {
      var i;
      let { content: t, purge: r, safelist: n } = e;
      return Array.isArray(n) ? n : Array.isArray(t == null ? void 0 : t.safelist) ? t.safelist : Array.isArray(r == null ? void 0 : r.safelist) ? r.safelist : Array.isArray((i = r == null ? void 0 : r.options) == null ? void 0 : i.safelist) ? r.options.safelist : [];
    })(), e.blocklist = (() => {
      let { blocklist: t } = e;
      return Array.isArray(t) && t.every((r) => typeof r == "string") ? t : [];
    })(), typeof e.prefix == "function" ? e.prefix = "" : e.prefix = e.prefix ?? "", e.content = { relative: (() => {
      let { content: t } = e;
      return t != null && t.relative ? t.relative : se(e, "relativeContentPathsByDefault");
    })(), files: (() => {
      let { content: t, purge: r } = e;
      return Array.isArray(r) ? r : Array.isArray(r == null ? void 0 : r.content) ? r.content : Array.isArray(t) ? t : Array.isArray(t == null ? void 0 : t.content) ? t.content : Array.isArray(t == null ? void 0 : t.files) ? t.files : [];
    })(), extract: (() => {
      let t = (() => {
        var i, o, a, u, s, l, p, c, h, m;
        return (i = e.purge) != null && i.extract ? e.purge.extract : (o = e.content) != null && o.extract ? e.content.extract : (u = (a = e.purge) == null ? void 0 : a.extract) != null && u.DEFAULT ? e.purge.extract.DEFAULT : (l = (s = e.content) == null ? void 0 : s.extract) != null && l.DEFAULT ? e.content.extract.DEFAULT : (c = (p = e.purge) == null ? void 0 : p.options) != null && c.extractors ? e.purge.options.extractors : (m = (h = e.content) == null ? void 0 : h.options) != null && m.extractors ? e.content.options.extractors : {};
      })(), r = {}, n = (() => {
        var i, o, a, u;
        if ((o = (i = e.purge) == null ? void 0 : i.options) != null && o.defaultExtractor)
          return e.purge.options.defaultExtractor;
        if ((u = (a = e.content) == null ? void 0 : a.options) != null && u.defaultExtractor)
          return e.content.options.defaultExtractor;
      })();
      if (n !== void 0 && (r.DEFAULT = n), typeof t == "function")
        r.DEFAULT = t;
      else if (Array.isArray(t))
        for (let { extensions: i, extractor: o } of t ?? [])
          for (let a of i)
            r[a] = o;
      else
        typeof t == "object" && t !== null && Object.assign(r, t);
      return r;
    })(), transform: (() => {
      let t = (() => {
        var n, i, o, a, u, s;
        return (n = e.purge) != null && n.transform ? e.purge.transform : (i = e.content) != null && i.transform ? e.content.transform : (a = (o = e.purge) == null ? void 0 : o.transform) != null && a.DEFAULT ? e.purge.transform.DEFAULT : (s = (u = e.content) == null ? void 0 : u.transform) != null && s.DEFAULT ? e.content.transform.DEFAULT : {};
      })(), r = {};
      return typeof t == "function" && (r.DEFAULT = t), typeof t == "object" && t !== null && Object.assign(r, t), r;
    })() };
    for (let t of e.content.files)
      if (typeof t == "string" && /{([^,]*?)}/g.test(t)) {
        fe.warn("invalid-glob-braces", [`The glob pattern ${t} in your Tailwind CSS configuration is invalid.`, `Update it to ${t.replace(/{([^,]*?)}/g, "$1")} to silence this warning.`]);
        break;
      }
    if (e.plugins.length > 0) {
      let t;
      try {
        t = gr("@tailwindcss/line-clamp");
      } catch {
      }
      t && e.plugins.includes(t) && (e.plugins = e.plugins.filter((r) => r !== t));
    }
    return e;
  }
  function hr(e) {
    return Array.isArray(e) ? e.map((t) => hr(t)) : typeof e == "object" && e !== null ? Object.fromEntries(Object.entries(e).map(([t, r]) => [t, hr(r)])) : e;
  }
  function Fe(e) {
    return typeof e == "function";
  }
  function He(e, ...t) {
    let r = t.pop();
    for (let n of t)
      for (let i in n) {
        let o = r(e[i], n[i]);
        o === void 0 ? he(e[i]) && he(n[i]) ? e[i] = He({}, e[i], n[i], r) : e[i] = n[i] : e[i] = o;
      }
    return e;
  }
  var mr = { colors: ba, negative(e) {
    return Object.keys(e).filter((t) => e[t] !== "0").reduce((t, r) => {
      let n = lt(e[r]);
      return n !== void 0 && (t[`-${r}`] = n), t;
    }, {});
  }, breakpoints(e) {
    return Object.keys(e).filter((t) => typeof e[t] == "string").reduce((t, r) => ({ ...t, [`screen-${r}`]: e[r] }), {});
  } };
  function xa(e, ...t) {
    return Fe(e) ? e(...t) : e;
  }
  function ka(e) {
    return e.reduce((t, { extend: r }) => He(t, r, (n, i) => n === void 0 ? [i] : Array.isArray(n) ? [i, ...n] : [i, n]), {});
  }
  function Sa(e) {
    return { ...e.reduce((t, r) => ri(t, r), {}), extend: ka(e) };
  }
  function ni(e, t) {
    if (Array.isArray(e) && he(e[0]))
      return e.concat(t);
    if (Array.isArray(t) && he(t[0]) && he(e))
      return [e, ...t];
    if (Array.isArray(t))
      return t;
  }
  function Oa({ extend: e, ...t }) {
    return He(t, e, (r, n) => !Fe(r) && !n.some(Fe) ? He({}, r, ...n, ni) : (i, o) => He({}, ...[r, ...n].map((a) => xa(a, i, o)), ni));
  }
  function* Ca(e) {
    let t = Ve(e);
    if (t.length === 0 || (yield t, Array.isArray(e)))
      return;
    let r = /^(.*?)\s*\/\s*([^/]+)$/, n = e.match(r);
    if (n !== null) {
      let [, i, o] = n, a = Ve(i);
      a.alpha = o, yield a;
    }
  }
  function Aa(e) {
    let t = (r, n) => {
      for (let i of Ca(r)) {
        let o = 0, a = e;
        for (; a != null && o < i.length; )
          a = a[i[o++]], a = Fe(a) && (i.alpha === void 0 || o <= i.length - 1) ? a(t, mr) : a;
        if (a !== void 0) {
          if (i.alpha !== void 0) {
            let u = ut(a);
            return Re(u, i.alpha, Y(u));
          }
          return he(a) ? hr(a) : a;
        }
      }
      return n;
    };
    return Object.assign(t, { theme: t, ...mr }), Object.keys(e).reduce((r, n) => (r[n] = Fe(e[n]) ? e[n](t, mr) : e[n], r), {});
  }
  function ii(e) {
    let t = [];
    return e.forEach((r) => {
      t = [...t, r];
      let n = (r == null ? void 0 : r.plugins) ?? [];
      n.length !== 0 && n.forEach((i) => {
        i.__isOptionsFunction && (i = i()), t = [...t, ...ii([(i == null ? void 0 : i.config) ?? {}])];
      });
    }), t;
  }
  function Ta(e) {
    return [...e].reduceRight((t, r) => Fe(r) ? r({ corePlugins: t }) : ya(r, t), va);
  }
  function Ea(e) {
    return [...e].reduceRight((t, r) => [...t, ...r], []);
  }
  function _a(e) {
    let t = [...ii(e), { prefix: "", important: !1, separator: ":" }];
    return wa(ri({ theme: Aa(Oa(Sa(t.map((r) => (r == null ? void 0 : r.theme) ?? {})))), corePlugins: Ta(t.map((r) => r.corePlugins)), plugins: Ea(e.map((r) => (r == null ? void 0 : r.plugins) ?? [])) }, ...t));
  }
  var Pa = te(Vi());
  function oi(e) {
    let t = ((e == null ? void 0 : e.presets) ?? [Pa.default]).slice().reverse().flatMap((i) => oi(i instanceof Function ? i() : i)), r = { respectDefaultRingColorOpacity: { theme: { ringColor: ({ theme: i }) => ({ DEFAULT: "#3b82f67f", ...i("colors") }) } }, disableColorOpacityUtilitiesByDefault: { corePlugins: { backgroundOpacity: !1, borderOpacity: !1, divideOpacity: !1, placeholderOpacity: !1, ringOpacity: !1, textOpacity: !1 } } }, n = Object.keys(r).filter((i) => se(e, i)).map((i) => r[i]);
    return [e, ...n, ...t];
  }
  function ja(...e) {
    let [, ...t] = oi(e[0]);
    return _a([...e, ...t]);
  }
  var si = ({ tailwindConfig: e } = {}) => {
    let t = e;
    return { setTailwindConfig(r) {
      t = r;
    }, async generateStylesFromContent(r, n) {
      let i = ai({ tailwindConfig: t, content: n });
      return (await K([i]).process(r, { from: void 0 })).css;
    } };
  }, ai = ({ tailwindConfig: e, content: t }) => {
    let r = ja(e ?? {});
    return ga((n) => () => n.createContext(r, t.map((i) => typeof i == "string" ? { content: i } : i)));
  }, Da = (e, t, r = {}) => si({ tailwindConfig: r }).generateStylesFromContent(e, [t]);
  window.jitBrowserTailwindcss = Da, window.createTailwindcss = si, window.createTailwindcssPlugin = ai;
})();
/*! https://mths.be/cssesc v3.0.0 by @mathias */
//# sourceMappingURL=cdn.min.js.map
